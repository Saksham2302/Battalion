
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author chise
 */
public class Achievements extends javax.swing.JFrame {

    private String award_ = "", type_ = "";
    /**
     * Creates new form Achievements
     */
    DefaultTableModel model_table;
    private int mouseX, mouseY;
    boolean flag = true;
    Database db = new Database();
    Connection con = db.create_connection(true);

    public Achievements() {

        initComponents();
        ScrollPaneA.getVerticalScrollBar().setUnitIncrement(16);
        
        //for a centered frame
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        //for a centered frame

        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuB.setBackground(new java.awt.Color(64, 43, 100));

        ScrollPaneB.setVisible(false);
        panelA.setVisible(true);
        ScrollPaneC.setVisible(false);

        refresh_buttonA.setVisible(true);
        print_buttonA.setVisible(true);
        edit_buttonA.setVisible(true);
        model_table = (DefaultTableModel) TableA.getModel();

    }

    private void editingData(int row) {

        award_textfieldC.setText((String) TableA.getValueAt(row, 1));
        count_textfieldC.setText((String) TableA.getValueAt(row, 2));
        String type = (String) TableA.getValueAt(row, 3);
        if (type.equals("Post Independence")) {
            post_radiobuttonC.setSelected(true);
        } else {
            pre_radiobuttonC.setSelected(true);
        }
        award_ = (String) TableA.getValueAt(row, 1);
        type_ = type;

    }

    private void viewall() {
        try {
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("Select * from achievements_post_ind");
            String awards, count;
            int sno = 0;
            model_table.setRowCount(0);
            while (rs.next()) {
                sno++;
                awards = rs.getString("award");
                count = rs.getString("count");
                model_table.addRow(new Object[]{
                    sno, awards, count, "Post Independence"
                });
            }
            rs = stmt.executeQuery("Select * from achievements_pre_ind");
            while (rs.next()) {
                sno++;
                awards = rs.getString("award");
                count = rs.getString("count");
                model_table.addRow(new Object[]{
                    sno, awards, count, "Pre Independence"
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private boolean isNumber(String num) {
        int value;
        boolean flag = false;
        try {
            value = Integer.parseInt(num);
            flag = true;
        } catch (Exception e) {
            flag = false;
        }
        return flag;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button_groupB = new javax.swing.ButtonGroup();
        button_groupC = new javax.swing.ButtonGroup();
        move_panel = new javax.swing.JPanel();
        bg = new javax.swing.JPanel();
        exit_icon = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        separator = new javax.swing.JSeparator();
        side_pane = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        go_back_label = new javax.swing.JLabel();
        menuA = new javax.swing.JPanel();
        menuA_icon = new javax.swing.JLabel();
        menuA_label = new javax.swing.JLabel();
        menuB = new javax.swing.JPanel();
        menuB_icon = new javax.swing.JLabel();
        menuB_label = new javax.swing.JLabel();
        title_icon = new javax.swing.JLabel();
        title_label = new javax.swing.JLabel();
        panelA = new javax.swing.JPanel();
        ScrollPaneA = new javax.swing.JScrollPane();
        TableA = new javax.swing.JTable();
        ScrollPaneB = new javax.swing.JScrollPane();
        panelB = new javax.swing.JPanel();
        location_underlineB = new javax.swing.JSeparator();
        award_textfieldB = new javax.swing.JTextField();
        award_labelB = new javax.swing.JLabel();
        count_labelB = new javax.swing.JLabel();
        pre_radiobutton = new javax.swing.JRadioButton();
        post_radiobutton = new javax.swing.JRadioButton();
        add_buttonA = new javax.swing.JPanel();
        add_labelB = new javax.swing.JLabel();
        count_textfieldB = new javax.swing.JTextField();
        ScrollPaneC = new javax.swing.JScrollPane();
        panelC = new javax.swing.JPanel();
        location_underlineC = new javax.swing.JSeparator();
        award_textfieldC = new javax.swing.JTextField();
        award_labelC = new javax.swing.JLabel();
        count_labelC = new javax.swing.JLabel();
        update_buttonC = new javax.swing.JPanel();
        update_labelC = new javax.swing.JLabel();
        pre_radiobuttonC = new javax.swing.JRadioButton();
        post_radiobuttonC = new javax.swing.JRadioButton();
        count_textfieldC = new javax.swing.JTextField();
        edit_buttonA = new javax.swing.JPanel();
        edit_labelB = new javax.swing.JLabel();
        print_buttonA = new javax.swing.JPanel();
        print_labelA = new javax.swing.JLabel();
        refresh_buttonA = new javax.swing.JPanel();
        refresh_labelA = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        move_panel.setFocusable(false);
        move_panel.setOpaque(false);
        move_panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                move_panelMouseDragged(evt);
            }
        });
        move_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                move_panelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout move_panelLayout = new javax.swing.GroupLayout(move_panel);
        move_panel.setLayout(move_panelLayout);
        move_panelLayout.setHorizontalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        move_panelLayout.setVerticalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(move_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 30));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exit_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/remove_purple.png"))); // NOI18N
        exit_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_iconMouseClicked(evt);
            }
        });
        bg.add(exit_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1215, 30, -1, -1));

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/minimize-purple.png"))); // NOI18N
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        bg.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 30, -1, 40));

        separator.setForeground(new java.awt.Color(54, 33, 89));
        separator.setPreferredSize(new java.awt.Dimension(50, 20));
        bg.add(separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 890, 10));

        side_pane.setBackground(new java.awt.Color(54, 33, 89));
        side_pane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        side_pane.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 280, 50));

        go_back_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/left-arrow.png"))); // NOI18N
        go_back_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                go_back_labelMouseClicked(evt);
            }
        });
        side_pane.add(go_back_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAMouseClicked(evt);
            }
        });

        menuA_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuA_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuA_icon.setText("A");

        menuA_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuA_label.setForeground(new java.awt.Color(255, 255, 255));
        menuA_label.setText("Achievements History");

        javax.swing.GroupLayout menuALayout = new javax.swing.GroupLayout(menuA);
        menuA.setLayout(menuALayout);
        menuALayout.setHorizontalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuA_icon)
                .addGap(33, 33, 33)
                .addComponent(menuA_label, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        menuALayout.setVerticalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuA_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuA_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 330, 60));

        menuB.setBackground(new java.awt.Color(64, 43, 100));
        menuB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBMouseClicked(evt);
            }
        });

        menuB_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuB_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuB_icon.setText("B");

        menuB_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuB_label.setForeground(new java.awt.Color(255, 255, 255));
        menuB_label.setText("New Achievement");

        javax.swing.GroupLayout menuBLayout = new javax.swing.GroupLayout(menuB);
        menuB.setLayout(menuBLayout);
        menuBLayout.setHorizontalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuB_icon)
                .addGap(33, 33, 33)
                .addComponent(menuB_label, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        menuBLayout.setVerticalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuB_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
            .addComponent(menuB_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        side_pane.add(menuB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 320, 60));

        title_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/achievements_white.png"))); // NOI18N
        side_pane.add(title_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 50, 70));

        title_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        title_label.setForeground(new java.awt.Color(255, 255, 255));
        title_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_label.setText("Achievements");
        side_pane.add(title_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 220, 40));

        bg.add(side_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 740));

        panelA.setBackground(new java.awt.Color(255, 255, 255));
        panelA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ScrollPaneA.setBackground(new java.awt.Color(255, 255, 255));
        ScrollPaneA.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TableA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        TableA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "Award Name", "Count", "Post/Pre-Independence"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableA.setFocusable(false);
        TableA.setGridColor(new java.awt.Color(255, 255, 255));
        TableA.setMaximumSize(new java.awt.Dimension(300, 60));
        TableA.setMinimumSize(new java.awt.Dimension(300, 60));
        TableA.setRowHeight(30);
        TableA.setSelectionBackground(new java.awt.Color(54, 33, 89));
        ScrollPaneA.setViewportView(TableA);
        if (TableA.getColumnModel().getColumnCount() > 0) {
            TableA.getColumnModel().getColumn(0).setMinWidth(50);
            TableA.getColumnModel().getColumn(0).setPreferredWidth(50);
            TableA.getColumnModel().getColumn(0).setMaxWidth(50);
            TableA.getColumnModel().getColumn(2).setMinWidth(100);
            TableA.getColumnModel().getColumn(2).setPreferredWidth(100);
            TableA.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        panelA.add(ScrollPaneA, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 780, 420));

        bg.add(panelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 890, 500));

        ScrollPaneB.setBorder(null);
        ScrollPaneB.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelB.setBackground(new java.awt.Color(255, 255, 255));
        panelB.setFocusable(false);
        panelB.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        location_underlineB.setForeground(new java.awt.Color(54, 33, 89));
        panelB.add(location_underlineB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 330, 20));

        award_textfieldB.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        award_textfieldB.setForeground(new java.awt.Color(54, 33, 89));
        award_textfieldB.setBorder(null);
        award_textfieldB.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelB.add(award_textfieldB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 330, 40));

        award_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        award_labelB.setForeground(new java.awt.Color(51, 51, 51));
        award_labelB.setText("Award Name");
        panelB.add(award_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, -1, 40));

        count_labelB.setBackground(new java.awt.Color(255, 255, 255));
        count_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        count_labelB.setForeground(new java.awt.Color(51, 51, 51));
        count_labelB.setText("Count");
        panelB.add(count_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, 40));

        button_groupB.add(pre_radiobutton);
        pre_radiobutton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pre_radiobutton.setText("Pre-Independence");
        pre_radiobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pre_radiobuttonActionPerformed(evt);
            }
        });
        panelB.add(pre_radiobutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, -1));

        button_groupB.add(post_radiobutton);
        post_radiobutton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        post_radiobutton.setText("Post-Independence");
        panelB.add(post_radiobutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        add_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        add_buttonA.setMaximumSize(new java.awt.Dimension(200, 200));
        add_buttonA.setMinimumSize(new java.awt.Dimension(200, 200));
        add_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                add_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                add_buttonAMouseExited(evt);
            }
        });
        add_buttonA.setLayout(null);

        add_labelB.setBackground(new java.awt.Color(54, 33, 89));
        add_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        add_labelB.setForeground(new java.awt.Color(54, 33, 89));
        add_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_labelB.setText("ADD");
        add_buttonA.add(add_labelB);
        add_labelB.setBounds(30, 0, 120, 50);

        panelB.add(add_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 180, 50));

        count_textfieldB.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        panelB.add(count_textfieldB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 100, 40));

        ScrollPaneB.setViewportView(panelB);

        bg.add(ScrollPaneB, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 500));

        ScrollPaneC.setBorder(null);
        ScrollPaneC.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelC.setBackground(new java.awt.Color(255, 255, 255));
        panelC.setFocusable(false);
        panelC.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        location_underlineC.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(location_underlineC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 330, 20));

        award_textfieldC.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        award_textfieldC.setForeground(new java.awt.Color(54, 33, 89));
        award_textfieldC.setBorder(null);
        award_textfieldC.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(award_textfieldC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 330, 40));

        award_labelC.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        award_labelC.setForeground(new java.awt.Color(51, 51, 51));
        award_labelC.setText("Award Name");
        panelC.add(award_labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, -1, 40));

        count_labelC.setBackground(new java.awt.Color(255, 255, 255));
        count_labelC.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        count_labelC.setForeground(new java.awt.Color(51, 51, 51));
        count_labelC.setText("Count");
        panelC.add(count_labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, 40));

        update_buttonC.setForeground(new java.awt.Color(240, 240, 240));
        update_buttonC.setMaximumSize(new java.awt.Dimension(200, 200));
        update_buttonC.setMinimumSize(new java.awt.Dimension(200, 200));
        update_buttonC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                update_buttonCMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                update_buttonCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                update_buttonCMouseExited(evt);
            }
        });
        update_buttonC.setLayout(null);

        update_labelC.setBackground(new java.awt.Color(54, 33, 89));
        update_labelC.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        update_labelC.setForeground(new java.awt.Color(54, 33, 89));
        update_labelC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        update_labelC.setText("UPDATE");
        update_buttonC.add(update_labelC);
        update_labelC.setBounds(30, 0, 120, 50);

        panelC.add(update_buttonC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 180, 50));

        button_groupC.add(pre_radiobuttonC);
        pre_radiobuttonC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pre_radiobuttonC.setText("Pre-Independence");
        pre_radiobuttonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pre_radiobuttonCActionPerformed(evt);
            }
        });
        panelC.add(pre_radiobuttonC, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 170, -1, -1));

        button_groupC.add(post_radiobuttonC);
        post_radiobuttonC.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        post_radiobuttonC.setText("Post-Independence");
        panelC.add(post_radiobuttonC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, -1));

        count_textfieldC.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        panelC.add(count_textfieldC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 100, 40));

        ScrollPaneC.setViewportView(panelC);

        bg.add(ScrollPaneC, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 500));

        edit_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        edit_buttonA.setToolTipText("");
        edit_buttonA.setMaximumSize(new java.awt.Dimension(200, 200));
        edit_buttonA.setMinimumSize(new java.awt.Dimension(200, 200));
        edit_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edit_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                edit_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                edit_buttonAMouseExited(evt);
            }
        });
        edit_buttonA.setLayout(null);

        edit_labelB.setBackground(new java.awt.Color(54, 33, 89));
        edit_labelB.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        edit_labelB.setForeground(new java.awt.Color(54, 33, 89));
        edit_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        edit_labelB.setText("EDIT");
        edit_buttonA.add(edit_labelB);
        edit_labelB.setBounds(50, 0, 80, 50);

        bg.add(edit_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 120, 180, 50));

        print_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        print_buttonA.setMaximumSize(new java.awt.Dimension(95, 25));
        print_buttonA.setMinimumSize(new java.awt.Dimension(95, 25));
        print_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                print_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                print_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                print_buttonAMouseExited(evt);
            }
        });
        print_buttonA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        print_labelA.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        print_labelA.setForeground(new java.awt.Color(54, 33, 89));
        print_labelA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print_labelA.setText("PRINT");
        print_buttonA.add(print_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 13, 71, 24));

        bg.add(print_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, 50));

        refresh_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        refresh_buttonA.setMaximumSize(new java.awt.Dimension(200, 200));
        refresh_buttonA.setMinimumSize(new java.awt.Dimension(200, 200));
        refresh_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refresh_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refresh_buttonAMouseExited(evt);
            }
        });
        refresh_buttonA.setLayout(null);

        refresh_labelA.setBackground(new java.awt.Color(54, 33, 89));
        refresh_labelA.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        refresh_labelA.setForeground(new java.awt.Color(54, 33, 89));
        refresh_labelA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refresh_labelA.setText("REFRESH");
        refresh_buttonA.add(refresh_labelA);
        refresh_labelA.setBounds(50, 0, 80, 50);

        bg.add(refresh_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 180, 50));

        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 730));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void move_panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMouseDragged
        this.setLocation(this.getX() + evt.getX() - mouseX, this.getY() + evt.getY() - mouseY);
    }//GEN-LAST:event_move_panelMouseDragged

    private void move_panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMousePressed
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_move_panelMousePressed

    private void exit_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_iconMouseClicked
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit the program?", "Exit Program", JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            dispose();
            db.create_connection(false);
        }
    }//GEN-LAST:event_exit_iconMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        setState(this.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void go_back_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_go_back_labelMouseClicked
        if (flag) {
            new home(1).setVisible(true);
            this.setVisible(false);
            flag = false;
        }
    }//GEN-LAST:event_go_back_labelMouseClicked

    private void menuAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAMouseClicked
        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuB.setBackground(new java.awt.Color(64, 43, 100));

        ScrollPaneB.setVisible(false);
        panelA.setVisible(true);
        ScrollPaneC.setVisible(false);

        refresh_buttonA.setVisible(true);
        print_buttonA.setVisible(true);
        edit_buttonA.setVisible(true);
        viewall();
    }//GEN-LAST:event_menuAMouseClicked

    private void menuBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBMouseClicked
        menuB.setBackground(new java.awt.Color(85, 65, 118));
        menuA.setBackground(new java.awt.Color(64, 43, 100));

        ScrollPaneB.setVisible(true);
        panelA.setVisible(false);
        ScrollPaneC.setVisible(false);

        refresh_buttonA.setVisible(false);
        print_buttonA.setVisible(false);
        edit_buttonA.setVisible(false);
    }//GEN-LAST:event_menuBMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        viewall();
    }//GEN-LAST:event_formWindowOpened

    private void pre_radiobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pre_radiobuttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pre_radiobuttonActionPerformed

    private void update_buttonCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonCMouseClicked
        // TODO add your handling code here:

        String award = award_textfieldC.getText().trim();
        String count = (String) count_textfieldC.getText();
        String query = "";
        boolean flag = false;

        try {

            if (!award.equals("")) {
                if (isNumber(count)) {
                    Statement stmt = con.createStatement();
                    PreparedStatement pstmt = con.prepareStatement(" ");
                    if (type_.equals("Post Independence")) {
                        if (post_radiobuttonC.isSelected()) {
                            query = "Update achievements_post_ind set award='" + award + "', count=" + count + " where award='" + award_ + "';";
                            stmt.executeUpdate(query);
                            flag = true;
                        } else {
                            try {
                                query = "insert into achievements_pre_ind values('" + award + "', " + count + ")";
                                stmt.executeUpdate(query);
                                query = "Delete from achievements_post_ind where award = '" + award_ + "';";
                                stmt.executeUpdate(query);
                                flag = true;

                            } catch (java.sql.SQLIntegrityConstraintViolationException sqle) {
                                JOptionPane.showMessageDialog(null, "Award already exists", "Unsuccessful", JOptionPane.ERROR_MESSAGE);

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);

                            }

                        }
                    } else {
                        if (pre_radiobuttonC.isSelected()) {
                            query = "Update achievements_pre_ind set award='" + award + "', count=" + count + " where award='" + award_ + "';";
                            stmt.executeUpdate(query);
                            flag = true;
                        } else {
                            try {
                                query = "insert into achievements_post_ind values('" + award + "', " + count + ")";
                                stmt.executeUpdate(query);
                                query = "Delete from achievements_pre_ind where award = '" + award_ + "';";
                                stmt.executeUpdate(query);
                                flag = true;

                            } catch (java.sql.SQLIntegrityConstraintViolationException sqle) {
                                JOptionPane.showMessageDialog(null, "Award already exists", "Unsuccessful", JOptionPane.ERROR_MESSAGE);

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);

                            }

                        }
                    }
                    if (flag) {
                        JOptionPane.showMessageDialog(null, "Updation Successful", "Successful", JOptionPane.WARNING_MESSAGE);
                        award_textfieldC.setText("");
                        count_textfieldC.setText("0");
                        button_groupC.clearSelection();
                        menuAMouseClicked(null);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Enter Valid number in Count!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Award cannot be empty!", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
    }//GEN-LAST:event_update_buttonCMouseClicked

    private void update_buttonCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonCMouseEntered
        update_buttonC.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_update_buttonCMouseEntered

    private void update_buttonCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonCMouseExited
        update_buttonC.setBackground(new java.awt.Color(240, 240, 240));
    }//GEN-LAST:event_update_buttonCMouseExited

    private void pre_radiobuttonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pre_radiobuttonCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pre_radiobuttonCActionPerformed

    private void edit_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_buttonAMouseEntered
        edit_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_edit_buttonAMouseEntered

    private void edit_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_buttonAMouseExited
        edit_buttonA.setBackground(new java.awt.Color(240, 240, 240));
    }//GEN-LAST:event_edit_buttonAMouseExited

    private void edit_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_buttonAMouseClicked

        int row = TableA.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(panelC, "Please select a row to update", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            ScrollPaneB.setVisible(false);
            panelA.setVisible(false);
            ScrollPaneC.setVisible(true);

            refresh_buttonA.setVisible(false);
            print_buttonA.setVisible(false);
            edit_buttonA.setVisible(false);
            editingData(row);
        }

    }//GEN-LAST:event_edit_buttonAMouseClicked

    private void print_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseClicked
        try {
            title_label.grabFocus();
            
            Statement statement = con.createStatement();
            ResultSet resultSet = statement.executeQuery("select * from achievements_post_ind");
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet spreadsheet = null;
            XSSFSheet spreadsheet1 = null;
            spreadsheet = workbook.createSheet("Achievements Post Independance");
            spreadsheet1 = workbook.createSheet("Achievements Pre Independance");

            XSSFRow row = spreadsheet.createRow(0);
            XSSFCell cell;
            cell = row.createCell(0);
            cell.setCellValue("Award Name");
            cell = row.createCell(1);
            cell.setCellValue("Count");

            int i = 1;

            while (resultSet.next()) {
                row = spreadsheet.createRow(i);
                cell = row.createCell(0);
                cell.setCellValue(resultSet.getString("Award"));
                cell = row.createCell(1);
                cell.setCellValue(resultSet.getString("count"));

                i++;
            }

            resultSet = statement.executeQuery("select * from achievements_pre_ind");
            row = spreadsheet1.createRow(0);
            cell = row.createCell(0);
            cell.setCellValue("Award Name");
            cell = row.createCell(1);
            cell.setCellValue("Count");
            i = 1;

            while (resultSet.next()) {
                row = spreadsheet1.createRow(i);
                cell = row.createCell(0);
                cell.setCellValue(resultSet.getString("Award"));
                cell = row.createCell(1);
                cell.setCellValue(resultSet.getString("count"));
                i++;
            }
            path_file paths = new path_file();
            FileOutputStream out = new FileOutputStream(new File(paths.csv + "\\Achievements.xlsx"));
            workbook.write(out);
            JOptionPane.showMessageDialog(null, "Achievements.xlsx written successfully!", "Successful", JOptionPane.WARNING_MESSAGE);
            Desktop.getDesktop().open(new File(paths.csv + "/Achievements.xlsx"));

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_print_buttonAMouseClicked

    private void print_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseEntered
        print_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_print_buttonAMouseEntered

    private void print_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseExited
        print_buttonA.setBackground(new java.awt.Color(240, 240, 240));
    }//GEN-LAST:event_print_buttonAMouseExited

    private void refresh_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonAMouseEntered
        refresh_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_refresh_buttonAMouseEntered

    private void refresh_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonAMouseExited
        refresh_buttonA.setBackground(new java.awt.Color(240, 240, 240));
    }//GEN-LAST:event_refresh_buttonAMouseExited

    private void add_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_buttonAMouseClicked
        String award = award_textfieldB.getText().trim();
        String count = (String) count_textfieldB.getText();

        boolean flag = false;
        try {
            if (!award.equals("")) {
                if (isNumber(count)) {
                    PreparedStatement pstmt = con.prepareStatement(" Insert into Achievements_post_ind values(?, ?);");
                    if (post_radiobutton.isSelected()) {
                        pstmt = con.prepareStatement("Insert into Achievements_post_ind values(?, ?);");
                        flag = true;
                    } else if (pre_radiobutton.isSelected()) {
                        pstmt = con.prepareStatement("Insert into Achievements_pre_ind values(?, ?);");
                        flag = true;
                    } else {
                        JOptionPane.showMessageDialog(null, "Select Post/Pre-independence award", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
                        flag = false;
                    }
                    if (flag) {
                        pstmt.setString(1, award);
                        pstmt.setString(2, count);
                        pstmt.executeUpdate();

                        award_textfieldB.setText("");
                        count_textfieldB.setText("0");
                        button_groupB.clearSelection();
                        JOptionPane.showMessageDialog(null, "Entry Successful", "Successful", JOptionPane.WARNING_MESSAGE);

                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Enter valid number in count!", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Award name cannot be empty!", "Unsuccessful", JOptionPane.ERROR_MESSAGE);
            }

        } catch (java.sql.SQLIntegrityConstraintViolationException sqle) {
            JOptionPane.showMessageDialog(null, "Award already exists", "Unsuccessful", JOptionPane.ERROR_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }


    }//GEN-LAST:event_add_buttonAMouseClicked

    private void add_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_buttonAMouseEntered
        add_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_add_buttonAMouseEntered

    private void add_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_buttonAMouseExited
        add_buttonA.setBackground(new java.awt.Color(240, 240, 240));
    }//GEN-LAST:event_add_buttonAMouseExited

    private void refresh_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonAMouseClicked
        // TODO add your handling code here:
        viewall();
    }//GEN-LAST:event_refresh_buttonAMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Achievements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Achievements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Achievements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Achievements.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Achievements().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPaneA;
    private javax.swing.JScrollPane ScrollPaneB;
    private javax.swing.JScrollPane ScrollPaneC;
    private javax.swing.JTable TableA;
    private javax.swing.JPanel add_buttonA;
    private javax.swing.JLabel add_labelB;
    private javax.swing.JLabel award_labelB;
    private javax.swing.JLabel award_labelC;
    private javax.swing.JTextField award_textfieldB;
    private javax.swing.JTextField award_textfieldC;
    private javax.swing.JPanel bg;
    private javax.swing.ButtonGroup button_groupB;
    private javax.swing.ButtonGroup button_groupC;
    private javax.swing.JLabel count_labelB;
    private javax.swing.JLabel count_labelC;
    private javax.swing.JTextField count_textfieldB;
    private javax.swing.JTextField count_textfieldC;
    private javax.swing.JPanel edit_buttonA;
    private javax.swing.JLabel edit_labelB;
    private javax.swing.JLabel exit_icon;
    private javax.swing.JLabel go_back_label;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator location_underlineB;
    private javax.swing.JSeparator location_underlineC;
    private javax.swing.JPanel menuA;
    private javax.swing.JLabel menuA_icon;
    private javax.swing.JLabel menuA_label;
    private javax.swing.JPanel menuB;
    private javax.swing.JLabel menuB_icon;
    private javax.swing.JLabel menuB_label;
    private javax.swing.JLabel minimize;
    private javax.swing.JPanel move_panel;
    private javax.swing.JPanel panelA;
    private javax.swing.JPanel panelB;
    private javax.swing.JPanel panelC;
    private javax.swing.JRadioButton post_radiobutton;
    private javax.swing.JRadioButton post_radiobuttonC;
    private javax.swing.JRadioButton pre_radiobutton;
    private javax.swing.JRadioButton pre_radiobuttonC;
    private javax.swing.JPanel print_buttonA;
    private javax.swing.JLabel print_labelA;
    private javax.swing.JPanel refresh_buttonA;
    private javax.swing.JLabel refresh_labelA;
    private javax.swing.JSeparator separator;
    private javax.swing.JPanel side_pane;
    private javax.swing.JLabel title_icon;
    private javax.swing.JLabel title_label;
    private javax.swing.JPanel update_buttonC;
    private javax.swing.JLabel update_labelC;
    // End of variables declaration//GEN-END:variables
}
