
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author chise
 */
public class Incoming_DAK extends javax.swing.JFrame {

    /**
     * Creates new form Incoming_DAK
     */
    Database db=new Database();
    private int mouseX, mouseY;
    Connection c = db.create_connection(true);
    Statement s;
    boolean flag = true;
    
    DefaultTableModel model_fullscreen, model_table;
    public Incoming_DAK() {
        initComponents();
        
        ScrollPaneA.getVerticalScrollBar().setUnitIncrement(16);
        ScrollPaneB.getVerticalScrollBar().setUnitIncrement(16);
        fullscreen_ScrollPaneB.getVerticalScrollBar().setUnitIncrement(16);
        
        insert_buttonA.setVisible(true);
        print_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);
        
        model_fullscreen=(DefaultTableModel) fullscreen_tableB.getModel();
        model_table=(DefaultTableModel) TableG_out.getModel();
         try {
            s = c.createStatement();
        } catch (Exception ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        move_panel = new javax.swing.JPanel();
        bg = new javax.swing.JPanel();
        exit_icon = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        Separator = new javax.swing.JSeparator();
        side_pane = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        go_back_label = new javax.swing.JLabel();
        menuA = new javax.swing.JPanel();
        menuA_icon = new javax.swing.JLabel();
        menuA_label = new javax.swing.JLabel();
        title_label = new javax.swing.JLabel();
        title_icon = new javax.swing.JLabel();
        menuB = new javax.swing.JPanel();
        menuB_icon = new javax.swing.JLabel();
        menuB_label = new javax.swing.JLabel();
        ScrollPaneA = new javax.swing.JScrollPane();
        panelA = new javax.swing.JPanel();
        CO_remarks_labelA = new javax.swing.JLabel();
        midA1 = new javax.swing.JSeparator();
        DOL_labelA = new javax.swing.JLabel();
        from_labelA = new javax.swing.JLabel();
        letter_date_comboboxA = new javax.swing.JComboBox<>();
        letter_month_comboboxA = new javax.swing.JComboBox<>();
        letter_year_comboboxA = new javax.swing.JComboBox<>();
        from_textfieldA = new javax.swing.JTextField();
        from_underlineA = new javax.swing.JSeparator();
        CO_remarks_textfieldA = new javax.swing.JTextField();
        CO_remarks_underlineA = new javax.swing.JSeparator();
        DOR_labelA = new javax.swing.JLabel();
        receipt_date_comboboxA = new javax.swing.JComboBox<>();
        receipt_month_comboboxA = new javax.swing.JComboBox<>();
        receipt_year_comboboxA = new javax.swing.JComboBox<>();
        to_labelA = new javax.swing.JLabel();
        to_textfieldA = new javax.swing.JTextField();
        to_underlineA = new javax.swing.JSeparator();
        subject_labelA = new javax.swing.JLabel();
        subject_textfieldA = new javax.swing.JTextField();
        subject_underlineA = new javax.swing.JSeparator();
        classification_labelA = new javax.swing.JLabel();
        file_number_labelA = new javax.swing.JLabel();
        file_number_textfieldA = new javax.swing.JTextField();
        file_number_underlineA = new javax.swing.JSeparator();
        classification_comboboxA = new javax.swing.JComboBox<>();
        reply_reqd_labelA = new javax.swing.JLabel();
        reply_reqd_textfieldA = new javax.swing.JTextField();
        reply_reqd_underlineA = new javax.swing.JSeparator();
        current_dateA = new javax.swing.JLabel();
        insert_buttonA = new javax.swing.JPanel();
        insert_labelA = new javax.swing.JLabel();
        panelA_bottom_line = new javax.swing.JSeparator();
        letter_number_underlineA1 = new javax.swing.JSeparator();
        letter_number_textfieldA1 = new javax.swing.JTextField();
        letter_number_labelA1 = new javax.swing.JLabel();
        panelB = new javax.swing.JPanel();
        ScrollPaneB = new javax.swing.JScrollPane();
        TableG_out = new javax.swing.JTable();
        service_number_labelB = new javax.swing.JLabel();
        letter_numberB = new javax.swing.JTextField();
        letter_number_underlineB = new javax.swing.JSeparator();
        okayB = new javax.swing.JLabel();
        refresh_buttonB = new javax.swing.JPanel();
        refresh_labelB = new javax.swing.JLabel();
        print_buttonB = new javax.swing.JPanel();
        print_labelB = new javax.swing.JLabel();
        fullscreen_buttonB = new javax.swing.JPanel();
        fullscreen_labelB = new javax.swing.JLabel();
        fullscreen_panelB = new javax.swing.JPanel();
        fullscreen_ScrollPaneB = new javax.swing.JScrollPane();
        fullscreen_tableB = new javax.swing.JTable();
        exit_fullscreen_buttonB = new javax.swing.JPanel();
        exit_fullscreen_labelB = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1280, 720));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        move_panel.setFocusable(false);
        move_panel.setOpaque(false);
        move_panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                move_panelMouseDragged(evt);
            }
        });
        move_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                move_panelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout move_panelLayout = new javax.swing.GroupLayout(move_panel);
        move_panel.setLayout(move_panelLayout);
        move_panelLayout.setHorizontalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        move_panelLayout.setVerticalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(move_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 30));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setMaximumSize(new java.awt.Dimension(1280, 720));
        bg.setMinimumSize(new java.awt.Dimension(1280, 720));
        bg.setPreferredSize(new java.awt.Dimension(1280, 720));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exit_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/remove_purple.png"))); // NOI18N
        exit_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_iconMouseClicked(evt);
            }
        });
        bg.add(exit_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1215, 30, -1, -1));

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/minimize-purple.png"))); // NOI18N
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        bg.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 30, -1, 40));

        Separator.setForeground(new java.awt.Color(54, 33, 89));
        Separator.setPreferredSize(new java.awt.Dimension(50, 20));
        bg.add(Separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 890, 10));

        side_pane.setBackground(new java.awt.Color(54, 33, 89));
        side_pane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        side_pane.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 280, 50));

        go_back_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/left-arrow.png"))); // NOI18N
        go_back_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                go_back_labelMouseClicked(evt);
            }
        });
        side_pane.add(go_back_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAMouseClicked(evt);
            }
        });

        menuA_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuA_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuA_icon.setText("A");

        menuA_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuA_label.setForeground(new java.awt.Color(255, 255, 255));
        menuA_label.setText("Create Record");

        javax.swing.GroupLayout menuALayout = new javax.swing.GroupLayout(menuA);
        menuA.setLayout(menuALayout);
        menuALayout.setHorizontalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuA_icon)
                .addGap(33, 33, 33)
                .addComponent(menuA_label)
                .addContainerGap(135, Short.MAX_VALUE))
        );
        menuALayout.setVerticalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuA_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuA_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 330, 60));

        title_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        title_label.setForeground(new java.awt.Color(255, 255, 255));
        title_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_label.setText("Incoming DAK");
        side_pane.add(title_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(77, 125, 220, 60));

        title_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/DAK_white.png"))); // NOI18N
        side_pane.add(title_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 60, 70));

        menuB.setBackground(new java.awt.Color(85, 65, 118));
        menuB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBMouseClicked(evt);
            }
        });

        menuB_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuB_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuB_icon.setText("B");

        menuB_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuB_label.setForeground(new java.awt.Color(255, 255, 255));
        menuB_label.setText("View");

        javax.swing.GroupLayout menuBLayout = new javax.swing.GroupLayout(menuB);
        menuB.setLayout(menuBLayout);
        menuBLayout.setHorizontalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuB_icon)
                .addGap(33, 33, 33)
                .addComponent(menuB_label)
                .addContainerGap(221, Short.MAX_VALUE))
        );
        menuBLayout.setVerticalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuB_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuB_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 330, 60));

        bg.add(side_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 740));

        ScrollPaneA.setBorder(null);
        ScrollPaneA.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelA.setBackground(new java.awt.Color(255, 255, 255));
        panelA.setFocusable(false);
        panelA.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CO_remarks_labelA.setBackground(new java.awt.Color(255, 255, 255));
        CO_remarks_labelA.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        CO_remarks_labelA.setForeground(new java.awt.Color(66, 50, 77));
        CO_remarks_labelA.setText("Remarks by CO");
        panelA.add(CO_remarks_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 590, -1, 40));

        midA1.setForeground(new java.awt.Color(204, 204, 255));
        panelA.add(midA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 540, 570, 10));

        DOL_labelA.setBackground(new java.awt.Color(255, 255, 255));
        DOL_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        DOL_labelA.setForeground(new java.awt.Color(51, 51, 51));
        DOL_labelA.setText("Date of Letter");
        panelA.add(DOL_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, -1, 40));

        from_labelA.setBackground(new java.awt.Color(255, 255, 255));
        from_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        from_labelA.setForeground(new java.awt.Color(51, 51, 51));
        from_labelA.setText("From Whom");
        panelA.add(from_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, -1, 40));

        letter_date_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        letter_date_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        letter_date_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        letter_date_comboboxA.setBorder(null);
        panelA.add(letter_date_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 100, 40));

        letter_month_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        letter_month_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        letter_month_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        letter_month_comboboxA.setBorder(null);
        panelA.add(letter_month_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 200, 100, 40));

        letter_year_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        letter_year_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        letter_year_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        letter_year_comboboxA.setBorder(null);
        panelA.add(letter_year_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 100, 40));

        from_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        from_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        from_textfieldA.setBorder(null);
        from_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        from_textfieldA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                from_textfieldAActionPerformed(evt);
            }
        });
        panelA.add(from_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, 330, 40));

        from_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(from_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, 330, 20));

        CO_remarks_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        CO_remarks_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        CO_remarks_textfieldA.setBorder(null);
        CO_remarks_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        CO_remarks_textfieldA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CO_remarks_textfieldAActionPerformed(evt);
            }
        });
        panelA.add(CO_remarks_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 630, 330, 40));

        CO_remarks_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(CO_remarks_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 670, 330, 20));

        DOR_labelA.setBackground(new java.awt.Color(255, 255, 255));
        DOR_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        DOR_labelA.setForeground(new java.awt.Color(51, 51, 51));
        DOR_labelA.setText("Date of Receipt");
        panelA.add(DOR_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 160, -1, 40));

        receipt_date_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        receipt_date_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        receipt_date_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        receipt_date_comboboxA.setBorder(null);
        panelA.add(receipt_date_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 200, 100, 40));

        receipt_month_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        receipt_month_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        receipt_month_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        receipt_month_comboboxA.setBorder(null);
        panelA.add(receipt_month_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 200, 100, 40));

        receipt_year_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        receipt_year_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        receipt_year_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        receipt_year_comboboxA.setBorder(null);
        panelA.add(receipt_year_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 200, 100, 40));

        to_labelA.setBackground(new java.awt.Color(255, 255, 255));
        to_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        to_labelA.setForeground(new java.awt.Color(51, 51, 51));
        to_labelA.setText("To Whom");
        panelA.add(to_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 290, -1, 40));

        to_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        to_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        to_textfieldA.setBorder(null);
        to_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        to_textfieldA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                to_textfieldAActionPerformed(evt);
            }
        });
        panelA.add(to_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 330, 330, 40));

        to_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(to_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, 330, 20));

        subject_labelA.setBackground(new java.awt.Color(255, 255, 255));
        subject_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        subject_labelA.setForeground(new java.awt.Color(51, 51, 51));
        subject_labelA.setText("Subject");
        panelA.add(subject_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, -1, 40));

        subject_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        subject_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        subject_textfieldA.setBorder(null);
        subject_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        subject_textfieldA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subject_textfieldAActionPerformed(evt);
            }
        });
        panelA.add(subject_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, 330, 40));

        subject_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(subject_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 480, 330, 20));

        classification_labelA.setBackground(new java.awt.Color(255, 255, 255));
        classification_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        classification_labelA.setForeground(new java.awt.Color(51, 51, 51));
        classification_labelA.setText("Classification");
        panelA.add(classification_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 400, -1, 40));

        file_number_labelA.setBackground(new java.awt.Color(255, 255, 255));
        file_number_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        file_number_labelA.setForeground(new java.awt.Color(51, 51, 51));
        file_number_labelA.setText("File Number");
        panelA.add(file_number_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, -1, 40));

        file_number_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        file_number_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        file_number_textfieldA.setBorder(null);
        file_number_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        file_number_textfieldA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_number_textfieldAActionPerformed(evt);
            }
        });
        panelA.add(file_number_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, 330, 40));

        file_number_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(file_number_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, 330, 20));

        classification_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        classification_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        classification_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "UNCLAS", "RESTD", "CONFD", "SECRET" }));
        classification_comboboxA.setBorder(null);
        panelA.add(classification_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 440, 330, 40));

        reply_reqd_labelA.setBackground(new java.awt.Color(255, 255, 255));
        reply_reqd_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        reply_reqd_labelA.setForeground(new java.awt.Color(51, 51, 51));
        reply_reqd_labelA.setText("Reply reqd to fwd by ");
        panelA.add(reply_reqd_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 590, -1, 40));

        reply_reqd_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        reply_reqd_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        reply_reqd_textfieldA.setBorder(null);
        reply_reqd_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        reply_reqd_textfieldA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reply_reqd_textfieldAActionPerformed(evt);
            }
        });
        panelA.add(reply_reqd_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 630, 330, 40));

        reply_reqd_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(reply_reqd_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 670, 330, 20));

        current_dateA.setBackground(new java.awt.Color(255, 255, 255));
        current_dateA.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        current_dateA.setForeground(new java.awt.Color(60, 63, 65));
        current_dateA.setText("Get Current Date");
        current_dateA.setOpaque(true);
        current_dateA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                current_dateAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                current_dateAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                current_dateAMouseExited(evt);
            }
        });
        panelA.add(current_dateA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 250, -1, -1));

        insert_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        insert_buttonA.setMaximumSize(new java.awt.Dimension(95, 25));
        insert_buttonA.setMinimumSize(new java.awt.Dimension(95, 25));
        insert_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insert_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insert_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insert_buttonAMouseExited(evt);
            }
        });
        insert_buttonA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        insert_labelA.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        insert_labelA.setForeground(new java.awt.Color(54, 33, 89));
        insert_labelA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        insert_labelA.setText("INSERT");
        insert_buttonA.add(insert_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 13, 71, 24));

        panelA.add(insert_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 720, 180, 50));

        panelA_bottom_line.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(panelA_bottom_line, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 830, 910, -1));

        letter_number_underlineA1.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(letter_number_underlineA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 330, 20));

        letter_number_textfieldA1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        letter_number_textfieldA1.setForeground(new java.awt.Color(54, 33, 89));
        letter_number_textfieldA1.setBorder(null);
        letter_number_textfieldA1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(letter_number_textfieldA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 330, 40));

        letter_number_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        letter_number_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        letter_number_labelA1.setText("Letter Number");
        panelA.add(letter_number_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 40));

        ScrollPaneA.setViewportView(panelA);

        bg.add(ScrollPaneA, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 480));

        panelB.setBackground(new java.awt.Color(255, 255, 255));
        panelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ScrollPaneB.setBackground(new java.awt.Color(255, 255, 255));
        ScrollPaneB.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        TableG_out.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        TableG_out.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "Letter number", "Subject", "Classification", "File Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableG_out.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        TableG_out.setFocusable(false);
        TableG_out.setGridColor(new java.awt.Color(255, 255, 255));
        TableG_out.setMaximumSize(null);
        TableG_out.setRowHeight(30);
        TableG_out.setSelectionBackground(new java.awt.Color(54, 33, 89));
        TableG_out.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ScrollPaneB.setViewportView(TableG_out);
        if (TableG_out.getColumnModel().getColumnCount() > 0) {
            TableG_out.getColumnModel().getColumn(0).setMinWidth(50);
            TableG_out.getColumnModel().getColumn(0).setPreferredWidth(50);
            TableG_out.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        panelB.add(ScrollPaneB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 780, 300));

        service_number_labelB.setBackground(new java.awt.Color(255, 255, 255));
        service_number_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        service_number_labelB.setForeground(new java.awt.Color(51, 51, 51));
        service_number_labelB.setText("Letter Number");
        panelB.add(service_number_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 40));

        letter_numberB.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        letter_numberB.setForeground(new java.awt.Color(54, 33, 89));
        letter_numberB.setBorder(null);
        letter_numberB.setMargin(new java.awt.Insets(2, 4, 2, 2));
        letter_numberB.setSelectionColor(new java.awt.Color(204, 204, 255));
        letter_numberB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                letter_numberBKeyPressed(evt);
            }
        });
        panelB.add(letter_numberB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 400, 40));

        letter_number_underlineB.setForeground(new java.awt.Color(54, 33, 89));
        panelB.add(letter_number_underlineB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 400, 10));

        okayB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/check-mark.png"))); // NOI18N
        okayB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okayBMouseClicked(evt);
            }
        });
        panelB.add(okayB, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, -1, 40));

        bg.add(panelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 480));

        refresh_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        refresh_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        refresh_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        refresh_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refresh_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refresh_buttonBMouseExited(evt);
            }
        });
        refresh_buttonB.setLayout(null);

        refresh_labelB.setBackground(new java.awt.Color(54, 33, 89));
        refresh_labelB.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        refresh_labelB.setForeground(new java.awt.Color(54, 33, 89));
        refresh_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refresh_labelB.setText("REFRESH");
        refresh_buttonB.add(refresh_labelB);
        refresh_labelB.setBounds(50, 0, 80, 50);

        bg.add(refresh_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 180, 50));

        print_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        print_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        print_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        print_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                print_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                print_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                print_buttonBMouseExited(evt);
            }
        });
        print_buttonB.setLayout(null);

        print_labelB.setBackground(new java.awt.Color(54, 33, 89));
        print_labelB.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        print_labelB.setForeground(new java.awt.Color(54, 33, 89));
        print_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print_labelB.setText("PRINT");
        print_buttonB.add(print_labelB);
        print_labelB.setBounds(50, 0, 80, 50);

        bg.add(print_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 120, 180, 50));

        fullscreen_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        fullscreen_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        fullscreen_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        fullscreen_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fullscreen_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fullscreen_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fullscreen_buttonBMouseExited(evt);
            }
        });
        fullscreen_buttonB.setLayout(null);

        fullscreen_labelB.setBackground(new java.awt.Color(54, 33, 89));
        fullscreen_labelB.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        fullscreen_labelB.setForeground(new java.awt.Color(54, 33, 89));
        fullscreen_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fullscreen_labelB.setText("FULLSCREEN");
        fullscreen_buttonB.add(fullscreen_labelB);
        fullscreen_labelB.setBounds(30, 0, 120, 50);

        bg.add(fullscreen_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, 50));

        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));
        bg.getAccessibleContext().setAccessibleDescription("");

        fullscreen_panelB.setBackground(new java.awt.Color(255, 255, 255));
        fullscreen_panelB.setMaximumSize(new java.awt.Dimension(1280, 720));
        fullscreen_panelB.setMinimumSize(new java.awt.Dimension(1280, 720));
        fullscreen_panelB.setPreferredSize(new java.awt.Dimension(1280, 720));
        fullscreen_panelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fullscreen_ScrollPaneB.setBackground(new java.awt.Color(255, 255, 255));
        fullscreen_ScrollPaneB.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        fullscreen_tableB.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        fullscreen_tableB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "Letter Number", "Date of letter", "Date of Reciept", "From", "To", "Subject", "Classification", "File Number", "Remarks By CO", "Reply"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fullscreen_tableB.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fullscreen_tableB.setFocusable(false);
        fullscreen_tableB.setGridColor(new java.awt.Color(255, 255, 255));
        fullscreen_tableB.setMaximumSize(new java.awt.Dimension(300, 60));
        fullscreen_tableB.setMinimumSize(new java.awt.Dimension(300, 60));
        fullscreen_tableB.setRowHeight(30);
        fullscreen_tableB.setSelectionBackground(new java.awt.Color(54, 33, 89));
        fullscreen_ScrollPaneB.setViewportView(fullscreen_tableB);
        if (fullscreen_tableB.getColumnModel().getColumnCount() > 0) {
            fullscreen_tableB.getColumnModel().getColumn(0).setMinWidth(50);
            fullscreen_tableB.getColumnModel().getColumn(0).setPreferredWidth(50);
            fullscreen_tableB.getColumnModel().getColumn(0).setMaxWidth(50);
            fullscreen_tableB.getColumnModel().getColumn(1).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(1).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(1).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(2).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(2).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(2).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(3).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(3).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(3).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(4).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(4).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(4).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(5).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(5).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(5).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(6).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(6).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(6).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(7).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(7).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(7).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(8).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(8).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(8).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(9).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(9).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(9).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(10).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(10).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(10).setMaxWidth(150);
        }

        fullscreen_panelB.add(fullscreen_ScrollPaneB, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 1200, 580));

        exit_fullscreen_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        exit_fullscreen_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        exit_fullscreen_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        exit_fullscreen_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonBMouseExited(evt);
            }
        });
        exit_fullscreen_buttonB.setLayout(null);

        exit_fullscreen_labelB.setBackground(new java.awt.Color(54, 33, 89));
        exit_fullscreen_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        exit_fullscreen_labelB.setForeground(new java.awt.Color(54, 33, 89));
        exit_fullscreen_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit_fullscreen_labelB.setText("GO BACK");
        exit_fullscreen_buttonB.add(exit_fullscreen_labelB);
        exit_fullscreen_labelB.setBounds(30, 0, 120, 50);

        fullscreen_panelB.add(exit_fullscreen_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 640, 180, 50));

        getContentPane().add(fullscreen_panelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void viewall(String a){
        try{
            ResultSet rs = null;
            int i = 0;
            if(a.equals("null")){
            rs = s.executeQuery("Select * from inc_dak;");
            rs.next();
            }
            
            else{
                rs = s.executeQuery("Select * from inc_dak where letter_no = '"+a+"';");
                if(rs.next() == false){
                    i = 1;
                    JOptionPane.showMessageDialog(null, "Letter Number not found.");
                }
            }
            String serial_no,let, dol,dor, from, to, sub, clas, file , remarks, reply;
            model_table.setRowCount(0);
            model_fullscreen.setRowCount(0);
            //int row = 0;
            i = 1;
            
            do{
//                row = row + 30;
//                Table.setPreferredSize(new java.awt.Dimension(300,row));
//                fullscreen_table.setPreferredSize(new java.awt.Dimension(300,row));             
                let=rs.getString("letter_no");                
                dol=rs.getString("dol");
                dor=rs.getString("dor");
                from=rs.getString("from_");
                to=rs.getString("to_");
                sub=rs.getString("subject");
                clas=rs.getString("classification");
                file=rs.getString("file_no");
                reply=rs.getString("reply");
                remarks=rs.getString("remarks");
                model_table.addRow(new Object[]{
                   i,
                   let,
                   sub,
                   clas,
                   file
                });
                 model_fullscreen.addRow( new Object[]{
                   i,
                   let,
                   dol,
                   dor, 
                   from,
                   to,
                   sub,
                   clas,
                   file,
                   remarks,
                   reply
                });
            i++;
            } while(rs.next());
        }catch(Exception e){System.out.println(e);}   
    }
    
    private void exit_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_iconMouseClicked
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit the program?", "Exit Program", JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            dispose();
            try {
                c.close();
            } catch (SQLException ex) {
                System.out.println("connection ended");
            }
        }
    }//GEN-LAST:event_exit_iconMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        setState(this.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void go_back_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_go_back_labelMouseClicked
        if(flag){
        new Modules(0).setVisible(true);
        this.setVisible(false);
        flag = false;
        }
    }//GEN-LAST:event_go_back_labelMouseClicked

    private void menuAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAMouseClicked
        menuA.setBackground(new java.awt.Color(85,65,118));
        menuB.setBackground(new java.awt.Color(64,43,100));

        insert_buttonA.setVisible(true);
        print_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);

        ScrollPaneA.setVisible(true);
        panelB.setVisible(false);
        fullscreen_panelB.setVisible(false);
    }//GEN-LAST:event_menuAMouseClicked

    private void menuBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBMouseClicked
        menuB.setBackground(new java.awt.Color(85,65,118));
        menuA.setBackground(new java.awt.Color(64,43,100));
        
        print_buttonB.setVisible(true);
        refresh_buttonB.setVisible(true);
        fullscreen_buttonB.setVisible(true);
        insert_buttonA.setVisible(false);

        ScrollPaneA.setVisible(false);
        panelB.setVisible(true);
        fullscreen_panelB.setVisible(false);
        
        viewall("null");
    }//GEN-LAST:event_menuBMouseClicked

    private void from_textfieldAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_from_textfieldAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_from_textfieldAActionPerformed

    private void okayBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okayBMouseClicked
        if((letter_numberB.getText()!=null && !letter_numberB.getText().trim().isEmpty()) ){
            viewall(letter_numberB.getText().trim());
        }
        else{
            JOptionPane.showMessageDialog(null, "Please Enter letter Number.");
        }
    }//GEN-LAST:event_okayBMouseClicked

    private void refresh_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonBMouseClicked
        viewall("null");
    }//GEN-LAST:event_refresh_buttonBMouseClicked

    private void refresh_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonBMouseEntered
        refresh_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_refresh_buttonBMouseEntered

    private void refresh_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonBMouseExited
        refresh_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_refresh_buttonBMouseExited

    private void print_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseClicked
        /*try{
            PrintWriter pw=new PrintWriter(new File(System.getProperty("user.home")+"\\Documents\\Battalion\\csv\\inc_dak.csv"));
            StringBuilder sb=new StringBuilder();
            String query="Select * from inc_dak";
            
            sb.append("Letter Number      \t");
            sb.append(",");
            sb.append("Date of Letter            \t");
            sb.append(",");
            sb.append("Date of Receipt             \t");
            sb.append(",");
            sb.append("From         \t");
            sb.append(",");
            sb.append("To        \t");
            sb.append(",");
            sb.append("Subject      \t");
            sb.append(",");
            sb.append("Classification         \t");
            sb.append(",");
            sb.append("File Number         \t");
            sb.append(",");
            sb.append("Remarks         \t");
            sb.append(",");
            sb.append("Reply     \t");
            
            sb.append("\r\n");
            ResultSet rs = null;
            Statement st = c.createStatement();
            rs=st.executeQuery(query);  
            
            while(rs.next()){
            sb.append(rs.getString("letter_no"));
            sb.append(",");
            sb.append(rs.getString("dol"));
            sb.append(",");
            sb.append(rs.getString("dor"));
            sb.append(",");
            sb.append(rs.getString("from_"));
            sb.append(",");
            sb.append(rs.getString("to_"));
            sb.append(",");
            sb.append(rs.getString("subject"));
            sb.append(",");
            sb.append(rs.getString("classification"));
            sb.append(",");
            sb.append(rs.getString("file_no"));
            sb.append(",");
            sb.append(rs.getString("remarks"));
            sb.append(",");
            sb.append(rs.getString("reply"));
                
                sb.append("\r\n");
            }
            pw.write(sb.toString());
            pw.close();
            JOptionPane.showMessageDialog(null,"Successfully Converted to CSV");
        }
        catch(Exception e){
            System.out.print("\n"+e);
            String er=e.getMessage();
            if(er.contains("The process cannot access the file because it is being used by another process")){
                JOptionPane.showMessageDialog(null,"Please close the CSV file first!");
            }
        }*/
        try{

        Statement statement = c.createStatement();
            ResultSet resultSet = statement.executeQuery("select * from inc_dak");
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet spreadsheet =null;
            spreadsheet = workbook.createSheet("incoming");
            
            XSSFRow row = spreadsheet.createRow(0);
            XSSFCell cell;
            cell = row.createCell(0);
            cell.setCellValue("Letter Number");
            cell = row.createCell(1);
            cell.setCellValue("Date of Letter");
            cell = row.createCell(2);
            cell.setCellValue("Date of Reciept");
            cell = row.createCell(3);
            cell.setCellValue("From");
            cell = row.createCell(4);
            cell.setCellValue("To");
            cell = row.createCell(5);
            cell.setCellValue("Subject");
            cell = row.createCell(6);
            cell.setCellValue("Classification");
            cell = row.createCell(7);
            cell.setCellValue("File Number");
            cell = row.createCell(8);
            cell.setCellValue("Remarks");
            cell = row.createCell(9);
            cell.setCellValue("Reply");
            int i = 1;
            
            while(resultSet.next()) {
                row = spreadsheet.createRow(i);
                cell = row.createCell(0);
                cell.setCellValue(resultSet.getString("letter_no"));
                cell = row.createCell(1);
                cell.setCellValue(resultSet.getString("dol"));
                cell = row.createCell(2);
                cell.setCellValue(resultSet.getString("dor"));
                cell = row.createCell(3);
                cell.setCellValue(resultSet.getString("from_"));
                cell = row.createCell(4);
                cell.setCellValue(resultSet.getString("to_"));
                cell = row.createCell(5);
                cell.setCellValue(resultSet.getString("subject"));
                cell = row.createCell(6);
                cell.setCellValue(resultSet.getString("classification"));
                cell = row.createCell(7);
                cell.setCellValue(resultSet.getString("file_no"));
                cell = row.createCell(8);
                cell.setCellValue(resultSet.getString("remarks"));
                cell = row.createCell(9);
                cell.setCellValue(resultSet.getString("reply"));
                i++;
            }
            path_file paths=new path_file();
            FileOutputStream out = new FileOutputStream(new File(paths.csv + "\\" +"inc_dak.xlsx"));
            workbook.write(out);
            JOptionPane.showMessageDialog(null,"inc_dak.xlsx created successfully");
            Desktop.getDesktop().open(new File(paths.csv + "/inc_dak.xlsx"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"inc_dak.xlsx not created.");
        }
    }//GEN-LAST:event_print_buttonBMouseClicked

    private void print_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseEntered
        print_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_print_buttonBMouseEntered

    private void print_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseExited
        print_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_print_buttonBMouseExited

    private void fullscreen_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonBMouseClicked
        fullscreen_panelB.setVisible(true);
        bg.setVisible(false);
    }//GEN-LAST:event_fullscreen_buttonBMouseClicked

    private void fullscreen_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonBMouseEntered
        fullscreen_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_fullscreen_buttonBMouseEntered

    private void fullscreen_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonBMouseExited
        fullscreen_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_fullscreen_buttonBMouseExited

    private void exit_fullscreen_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonBMouseClicked
        fullscreen_panelB.setVisible(false);
        bg.setVisible(true);
    }//GEN-LAST:event_exit_fullscreen_buttonBMouseClicked

    private void exit_fullscreen_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonBMouseEntered
        exit_fullscreen_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_exit_fullscreen_buttonBMouseEntered

    private void exit_fullscreen_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonBMouseExited
        exit_fullscreen_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_exit_fullscreen_buttonBMouseExited

    private void move_panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMouseDragged
        this.setLocation(this.getX() +evt.getX() -mouseX, this.getY() + evt.getY() -mouseY);
    }//GEN-LAST:event_move_panelMouseDragged

    private void move_panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMousePressed
        mouseX =evt.getX();
        mouseY =evt.getY();
    }//GEN-LAST:event_move_panelMousePressed

    private void to_textfieldAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_to_textfieldAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_to_textfieldAActionPerformed

    private void CO_remarks_textfieldAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CO_remarks_textfieldAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CO_remarks_textfieldAActionPerformed

    private void subject_textfieldAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subject_textfieldAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_subject_textfieldAActionPerformed

    private void file_number_textfieldAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_number_textfieldAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_file_number_textfieldAActionPerformed

    private void reply_reqd_textfieldAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reply_reqd_textfieldAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reply_reqd_textfieldAActionPerformed
    
    private void current_time_date(){
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");  
        LocalDateTime now = LocalDateTime.now();  
        String[] day=dtf.format(now).split(" ");
            String date[]=day[0].split("-");
            receipt_date_comboboxA.setSelectedItem(date[0]);
            receipt_month_comboboxA.setSelectedItem(date[1]);
            receipt_year_comboboxA.setSelectedItem(date[2]);
          
    }
    
    private void current_dateAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_current_dateAMouseClicked
        current_time_date();
    }//GEN-LAST:event_current_dateAMouseClicked

    private void current_dateAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_current_dateAMouseEntered
        current_dateA.setForeground(new java.awt.Color(54,33,89));
        current_dateA.setBackground(new java.awt.Color(237, 224, 255));

    }//GEN-LAST:event_current_dateAMouseEntered

    private void current_dateAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_current_dateAMouseExited
        current_dateA.setForeground(new java.awt.Color(60,63,65));
        current_dateA.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_current_dateAMouseExited

    private void insert_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_buttonAMouseClicked
        String year = (String)letter_year_comboboxA.getSelectedItem();
        String month = (String)letter_month_comboboxA.getSelectedItem();
        String date = (String)letter_date_comboboxA.getSelectedItem();
        String date_let = date+"-"+month+"-"+year;
             
               
        String year1 = (String)receipt_year_comboboxA.getSelectedItem();
        String month1 = (String)receipt_month_comboboxA.getSelectedItem();
        String date1 = (String)receipt_date_comboboxA.getSelectedItem();
        String date_rec = date1+"-"+month1+"-"+year1;
        
        boolean all_check = (letter_number_textfieldA1.getText()!=null && !letter_number_textfieldA1.getText().trim().isEmpty()) && (from_textfieldA.getText()!=null && !from_textfieldA.getText().trim().isEmpty()) && (to_textfieldA.getText()!=null && !to_textfieldA.getText().trim().isEmpty()) && (subject_textfieldA.getText()!=null && !subject_textfieldA.getText().trim().isEmpty()) && (file_number_textfieldA.getText()!=null && !file_number_textfieldA.getText().trim().isEmpty()) && (CO_remarks_textfieldA.getText()!=null && !CO_remarks_textfieldA.getText().trim().isEmpty()) && (reply_reqd_textfieldA.getText()!=null && !reply_reqd_textfieldA.getText().trim().isEmpty());
        
        boolean cal = false;
        boolean cal1 = false;
        boolean da = year!= "YYYY" && year1!= "YYYY" && month!= "MM" && month1!= "MM" && date!= "DD" && date1!= "DD";
        if(da){
        int y = Integer.parseInt(year);
        int m = Integer.parseInt(month);
        int d = Integer.parseInt(date);
        int y1 = Integer.parseInt(year1);
        int m1 = Integer.parseInt(month1);
        int d1 = Integer.parseInt(date1);
        cal = !((y%4==0 && m==2 &&  (d>29)  )   || (  (m==2 || m==4 || m==6 || m==9 || m==11)  && d==31  )    ||  (m==2 && d>28 && y%4!=0));
        cal1 = !((y1%4==0 && m1==2 &&  (d1>29)  )   || (  (m1==2 || m1==4 || m1==6 || m1==9 || m1==11)  && d1==31  )    ||  (m1==2 && d1>28 && y1%4!=0));
        }
        if(all_check && cal && cal1){
            try {
                String q = "insert into inc_dak values(?,?,?,?,?,?,?,?, ?, ?)";
                java.sql.PreparedStatement st = c.prepareStatement(q);
                st.setString(1,letter_number_textfieldA1.getText().trim());
                st.setString(2,date_let);
                st.setString(3,date_rec);
                st.setString(4,from_textfieldA.getText().trim());
                st.setString(5,to_textfieldA.getText().trim());
                st.setString(6,subject_textfieldA.getText().trim());
                st.setString(7, (String) classification_comboboxA.getSelectedItem());
                st.setString(8,file_number_textfieldA.getText().trim());
                st.setString(9,CO_remarks_textfieldA.getText().trim());
                st.setString(10,reply_reqd_textfieldA.getText().trim());
                //ResultSet rs=st.executeQuery();
                st.execute();
                JOptionPane.showMessageDialog(null, "Data Inserted Successfully");
                letter_number_textfieldA1.grabFocus();
                letter_number_textfieldA1.setText("");
                from_textfieldA.setText("");
                to_textfieldA.setText("");
                subject_textfieldA.setText("");
                file_number_textfieldA.setText("");
                CO_remarks_textfieldA.setText("");
                reply_reqd_textfieldA.setText("");
                letter_date_comboboxA.setSelectedItem("DD");
                letter_month_comboboxA.setSelectedItem("MM");
                letter_year_comboboxA.setSelectedItem("YYYY");
                receipt_date_comboboxA.setSelectedItem("DD");
                receipt_month_comboboxA.setSelectedItem("MM");
                receipt_year_comboboxA.setSelectedItem("YYYY");
                classification_comboboxA.setSelectedItem("UNCLAS");
                
            } catch (SQLException ex) {
                Logger.getLogger(State_VEH.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(cal == false || cal1 == false){
            
            JOptionPane.showMessageDialog(null, "Invalid Date");
        }
        else if(all_check == false){
            if((letter_number_textfieldA1.getText()==null || letter_number_textfieldA1.getText().trim().isEmpty())){
                JOptionPane.showMessageDialog(null, "Letter Number Field is Empty.");
                letter_number_textfieldA1.grabFocus();
            }
            else if((from_textfieldA.getText()==null || from_textfieldA.getText().trim().isEmpty())){
                JOptionPane.showMessageDialog(null, "From Field is Empty.");
                from_textfieldA.grabFocus();
            }
            else if((to_textfieldA.getText()==null || to_textfieldA.getText().trim().isEmpty())){
                JOptionPane.showMessageDialog(null, "To Field is Empty.");
                to_textfieldA.grabFocus();
            }
            else if((subject_textfieldA.getText()==null || subject_textfieldA.getText().trim().isEmpty())){
                JOptionPane.showMessageDialog(null, "Subject Field is Empty.");
                subject_textfieldA.grabFocus();
            }
            else if((file_number_textfieldA.getText()==null || file_number_textfieldA.getText().trim().isEmpty())){
                JOptionPane.showMessageDialog(null, "File Number Field is Empty.");
                file_number_textfieldA.grabFocus();
            }
            else if((CO_remarks_textfieldA.getText()==null || CO_remarks_textfieldA.getText().trim().isEmpty())){
                JOptionPane.showMessageDialog(null, "Remarks by CO is Empty.");
                CO_remarks_textfieldA.grabFocus();
            }
            else if((reply_reqd_textfieldA.getText()==null || reply_reqd_textfieldA.getText().trim().isEmpty())){
                JOptionPane.showMessageDialog(null, "Reply reqd to fwd by is Empty.");
                reply_reqd_textfieldA.grabFocus();
            }
        }
    }//GEN-LAST:event_insert_buttonAMouseClicked

    private void insert_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_buttonAMouseEntered
        insert_buttonA.setBackground(new java.awt.Color(237, 224, 255));// TODO add your handling code here:
    }//GEN-LAST:event_insert_buttonAMouseEntered

    private void insert_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_buttonAMouseExited
        insert_buttonA.setBackground(new java.awt.Color(240,240,240));// TODO add your handling code here:
    }//GEN-LAST:event_insert_buttonAMouseExited

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //for a centered frame
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        //for a centered frame

        menuA.setBackground(new java.awt.Color(85,65,118));
        menuB.setBackground(new java.awt.Color(64,43,100));

        insert_buttonA.setVisible(true);
        print_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);

        ScrollPaneA.setVisible(true);
        panelB.setVisible(false);
        fullscreen_panelB.setVisible(false);
        
        viewall("null");
    }//GEN-LAST:event_formWindowOpened

    private void letter_numberBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_letter_numberBKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            okayBMouseClicked(null);
        }
    }//GEN-LAST:event_letter_numberBKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Incoming_DAK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Incoming_DAK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Incoming_DAK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Incoming_DAK.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Incoming_DAK().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CO_remarks_labelA;
    private javax.swing.JTextField CO_remarks_textfieldA;
    private javax.swing.JSeparator CO_remarks_underlineA;
    private javax.swing.JLabel DOL_labelA;
    private javax.swing.JLabel DOR_labelA;
    private javax.swing.JScrollPane ScrollPaneA;
    private javax.swing.JScrollPane ScrollPaneB;
    private javax.swing.JSeparator Separator;
    private javax.swing.JTable TableG_out;
    private javax.swing.JPanel bg;
    private javax.swing.JComboBox<String> classification_comboboxA;
    private javax.swing.JLabel classification_labelA;
    private javax.swing.JLabel current_dateA;
    private javax.swing.JPanel exit_fullscreen_buttonB;
    private javax.swing.JLabel exit_fullscreen_labelB;
    private javax.swing.JLabel exit_icon;
    private javax.swing.JLabel file_number_labelA;
    private javax.swing.JTextField file_number_textfieldA;
    private javax.swing.JSeparator file_number_underlineA;
    private javax.swing.JLabel from_labelA;
    private javax.swing.JTextField from_textfieldA;
    private javax.swing.JSeparator from_underlineA;
    private javax.swing.JScrollPane fullscreen_ScrollPaneB;
    private javax.swing.JPanel fullscreen_buttonB;
    private javax.swing.JLabel fullscreen_labelB;
    private javax.swing.JPanel fullscreen_panelB;
    private javax.swing.JTable fullscreen_tableB;
    private javax.swing.JLabel go_back_label;
    private javax.swing.JPanel insert_buttonA;
    private javax.swing.JLabel insert_labelA;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> letter_date_comboboxA;
    private javax.swing.JComboBox<String> letter_month_comboboxA;
    private javax.swing.JTextField letter_numberB;
    private javax.swing.JLabel letter_number_labelA1;
    private javax.swing.JTextField letter_number_textfieldA1;
    private javax.swing.JSeparator letter_number_underlineA1;
    private javax.swing.JSeparator letter_number_underlineB;
    private javax.swing.JComboBox<String> letter_year_comboboxA;
    private javax.swing.JPanel menuA;
    private javax.swing.JLabel menuA_icon;
    private javax.swing.JLabel menuA_label;
    private javax.swing.JPanel menuB;
    private javax.swing.JLabel menuB_icon;
    private javax.swing.JLabel menuB_label;
    private javax.swing.JSeparator midA1;
    private javax.swing.JLabel minimize;
    private javax.swing.JPanel move_panel;
    private javax.swing.JLabel okayB;
    private javax.swing.JPanel panelA;
    private javax.swing.JSeparator panelA_bottom_line;
    private javax.swing.JPanel panelB;
    private javax.swing.JPanel print_buttonB;
    private javax.swing.JLabel print_labelB;
    private javax.swing.JComboBox<String> receipt_date_comboboxA;
    private javax.swing.JComboBox<String> receipt_month_comboboxA;
    private javax.swing.JComboBox<String> receipt_year_comboboxA;
    private javax.swing.JPanel refresh_buttonB;
    private javax.swing.JLabel refresh_labelB;
    private javax.swing.JLabel reply_reqd_labelA;
    private javax.swing.JTextField reply_reqd_textfieldA;
    private javax.swing.JSeparator reply_reqd_underlineA;
    private javax.swing.JLabel service_number_labelB;
    private javax.swing.JPanel side_pane;
    private javax.swing.JLabel subject_labelA;
    private javax.swing.JTextField subject_textfieldA;
    private javax.swing.JSeparator subject_underlineA;
    private javax.swing.JLabel title_icon;
    private javax.swing.JLabel title_label;
    private javax.swing.JLabel to_labelA;
    private javax.swing.JTextField to_textfieldA;
    private javax.swing.JSeparator to_underlineA;
    // End of variables declaration//GEN-END:variables
}
