

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.Book;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author chise
 */
public class Lve_cert extends javax.swing.JFrame {

    /**
     * Creates new form Lve_cert
     */

    boolean flag = true;
    private int mouseX, mouseY;
    Database db=new Database();
    Connection c = db.create_connection(true);
    Statement s;
    public Lve_cert() {
        initComponents();
        
        ScrollPaneA.getVerticalScrollBar().setUnitIncrement(16);
         try {
            s = c.createStatement();
        } catch (Exception ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        move_panel = new javax.swing.JPanel();
        bg = new javax.swing.JPanel();
        exit_icon = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        Separator = new javax.swing.JSeparator();
        side_pane = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        go_back_label = new javax.swing.JLabel();
        menuA = new javax.swing.JPanel();
        menuA_icon = new javax.swing.JLabel();
        menuA_label = new javax.swing.JLabel();
        title_label = new javax.swing.JLabel();
        title_icon = new javax.swing.JLabel();
        ScrollPaneA = new javax.swing.JScrollPane();
        panelA = new javax.swing.JPanel();
        service_number_underline = new javax.swing.JSeparator();
        service_number_textfield = new javax.swing.JTextField();
        service_number_label = new javax.swing.JLabel();
        panelA_bottom_line2 = new javax.swing.JSeparator();
        okay = new javax.swing.JLabel();
        name_label = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        Photo = new javax.swing.JPanel();
        photo_labelA = new javax.swing.JLabel();
        rank_label = new javax.swing.JLabel();
        rank = new javax.swing.JLabel();
        company_label = new javax.swing.JLabel();
        company = new javax.swing.JLabel();
        trade_label = new javax.swing.JLabel();
        trade = new javax.swing.JLabel();
        unit_label = new javax.swing.JLabel();
        unit = new javax.swing.JLabel();
        from_date_label = new javax.swing.JLabel();
        indl_mobile_label = new javax.swing.JLabel();
        to_date_label = new javax.swing.JLabel();
        prefix_label = new javax.swing.JLabel();
        suffix_label = new javax.swing.JLabel();
        report_date_label = new javax.swing.JLabel();
        address_label = new javax.swing.JLabel();
        vill = new javax.swing.JLabel();
        PO_label = new javax.swing.JLabel();
        PO = new javax.swing.JLabel();
        dist_label = new javax.swing.JLabel();
        dist = new javax.swing.JLabel();
        state_label = new javax.swing.JLabel();
        state = new javax.swing.JLabel();
        teh_label = new javax.swing.JLabel();
        tehsil = new javax.swing.JLabel();
        PIN_label = new javax.swing.JLabel();
        PIN = new javax.swing.JLabel();
        vill_label = new javax.swing.JLabel();
        midA2 = new javax.swing.JSeparator();
        midA1 = new javax.swing.JSeparator();
        CO_mob_label = new javax.swing.JLabel();
        CO_mob = new javax.swing.JLabel();
        ADJT_mob_label = new javax.swing.JLabel();
        ADJT_mob = new javax.swing.JLabel();
        NOK_mobile_label = new javax.swing.JLabel();
        alcohol_label = new javax.swing.JLabel();
        prefix_textfield = new javax.swing.JTextField();
        prefix_underline = new javax.swing.JSeparator();
        suffix_textfield = new javax.swing.JTextField();
        suffix_underline = new javax.swing.JSeparator();
        indl_mob_textfield = new javax.swing.JTextField();
        label_91A1 = new javax.swing.JLabel();
        indl_mob_underline = new javax.swing.JSeparator();
        kin_mob_textfield = new javax.swing.JTextField();
        label_91A2 = new javax.swing.JLabel();
        kin_mob_underline = new javax.swing.JSeparator();
        army_number_underlineA4 = new javax.swing.JSeparator();
        alcohol_textfield = new javax.swing.JTextField();
        from_date_combobox = new javax.swing.JComboBox<>();
        from_month_combobox = new javax.swing.JComboBox<>();
        from_year_combobox = new javax.swing.JComboBox<>();
        to_date_combobox = new javax.swing.JComboBox<>();
        to_month_combobox = new javax.swing.JComboBox<>();
        to_year_combobox = new javax.swing.JComboBox<>();
        report_date_combobox = new javax.swing.JComboBox<>();
        report_month_combobox = new javax.swing.JComboBox<>();
        report_year_combobox = new javax.swing.JComboBox<>();
        print_button = new javax.swing.JPanel();
        print_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 1280, 720));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        move_panel.setFocusable(false);
        move_panel.setOpaque(false);
        move_panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                move_panelMouseDragged(evt);
            }
        });
        move_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                move_panelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout move_panelLayout = new javax.swing.GroupLayout(move_panel);
        move_panel.setLayout(move_panelLayout);
        move_panelLayout.setHorizontalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        move_panelLayout.setVerticalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(move_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 30));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setMaximumSize(new java.awt.Dimension(1280, 720));
        bg.setMinimumSize(new java.awt.Dimension(1280, 720));
        bg.setPreferredSize(new java.awt.Dimension(1280, 720));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exit_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/remove_purple.png"))); // NOI18N
        exit_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_iconMouseClicked(evt);
            }
        });
        bg.add(exit_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1215, 30, -1, -1));

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/minimize-purple.png"))); // NOI18N
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        bg.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 30, -1, 40));

        Separator.setForeground(new java.awt.Color(54, 33, 89));
        Separator.setPreferredSize(new java.awt.Dimension(50, 20));
        bg.add(Separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 890, 10));

        side_pane.setBackground(new java.awt.Color(54, 33, 89));
        side_pane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        side_pane.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 280, 50));

        go_back_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/left-arrow.png"))); // NOI18N
        go_back_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                go_back_labelMouseClicked(evt);
            }
        });
        side_pane.add(go_back_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAMouseClicked(evt);
            }
        });

        menuA_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuA_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuA_icon.setText("A");

        menuA_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuA_label.setForeground(new java.awt.Color(255, 255, 255));
        menuA_label.setText("Lve Certificate");

        javax.swing.GroupLayout menuALayout = new javax.swing.GroupLayout(menuA);
        menuA.setLayout(menuALayout);
        menuALayout.setHorizontalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuA_icon)
                .addGap(33, 33, 33)
                .addComponent(menuA_label)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        menuALayout.setVerticalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuA_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuA_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 330, 60));

        title_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        title_label.setForeground(new java.awt.Color(255, 255, 255));
        title_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_label.setText("Lve Cert");
        side_pane.add(title_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 140, 45));

        title_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/lve_cert white.png"))); // NOI18N
        side_pane.add(title_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 80, 70));

        bg.add(side_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 740));

        ScrollPaneA.setBorder(null);
        ScrollPaneA.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelA.setBackground(new java.awt.Color(255, 255, 255));
        panelA.setFocusable(false);
        panelA.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        service_number_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(service_number_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 400, 20));

        service_number_textfield.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        service_number_textfield.setForeground(new java.awt.Color(54, 33, 89));
        service_number_textfield.setBorder(null);
        service_number_textfield.setMargin(new java.awt.Insets(2, 4, 2, 2));
        service_number_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                service_number_textfieldKeyPressed(evt);
            }
        });
        panelA.add(service_number_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 400, 40));

        service_number_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        service_number_label.setForeground(new java.awt.Color(51, 51, 51));
        service_number_label.setText("Army Number");
        panelA.add(service_number_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 40));

        panelA_bottom_line2.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(panelA_bottom_line2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 1330, 910, -1));

        okay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/check-mark.png"))); // NOI18N
        okay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okayMouseClicked(evt);
            }
        });
        panelA.add(okay, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, -1, 40));

        name_label.setBackground(new java.awt.Color(255, 255, 255));
        name_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        name_label.setForeground(new java.awt.Color(51, 51, 51));
        name_label.setText("Name");
        panelA.add(name_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, 50));

        name.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        name.setForeground(new java.awt.Color(54, 33, 89));
        name.setText("> XXXXXXX");
        panelA.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, -1, 30));

        Photo.setMaximumSize(new java.awt.Dimension(95, 25));
        Photo.setMinimumSize(new java.awt.Dimension(95, 25));
        Photo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PhotoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PhotoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PhotoMouseExited(evt);
            }
        });
        Photo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Photo.add(photo_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 200));

        panelA.add(Photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 80, 180, 200));

        rank_label.setBackground(new java.awt.Color(255, 255, 255));
        rank_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        rank_label.setForeground(new java.awt.Color(51, 51, 51));
        rank_label.setText("Rank");
        panelA.add(rank_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, -1, 50));

        rank.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        rank.setForeground(new java.awt.Color(54, 33, 89));
        rank.setText("> XXXXXXX");
        panelA.add(rank, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, -1, 30));

        company_label.setBackground(new java.awt.Color(255, 255, 255));
        company_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        company_label.setForeground(new java.awt.Color(51, 51, 51));
        company_label.setText("Company");
        panelA.add(company_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, -1, 50));

        company.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        company.setForeground(new java.awt.Color(54, 33, 89));
        company.setText("> XXXXXXX");
        panelA.add(company, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, -1, 30));

        trade_label.setBackground(new java.awt.Color(255, 255, 255));
        trade_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        trade_label.setForeground(new java.awt.Color(51, 51, 51));
        trade_label.setText("Trade");
        panelA.add(trade_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, -1, 50));

        trade.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        trade.setForeground(new java.awt.Color(54, 33, 89));
        trade.setText("> XXXXXXX");
        panelA.add(trade, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 300, -1, 30));

        unit_label.setBackground(new java.awt.Color(255, 255, 255));
        unit_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        unit_label.setForeground(new java.awt.Color(51, 51, 51));
        unit_label.setText("Unit");
        panelA.add(unit_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, -1, 50));

        unit.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        unit.setForeground(new java.awt.Color(54, 33, 89));
        unit.setText("> XXXXXXX");
        panelA.add(unit, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, -1, 30));

        from_date_label.setBackground(new java.awt.Color(255, 255, 255));
        from_date_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        from_date_label.setForeground(new java.awt.Color(51, 51, 51));
        from_date_label.setText("From Date");
        panelA.add(from_date_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 450, -1, 40));

        indl_mobile_label.setBackground(new java.awt.Color(255, 255, 255));
        indl_mobile_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        indl_mobile_label.setForeground(new java.awt.Color(51, 51, 51));
        indl_mobile_label.setText("Indl Mob No.");
        panelA.add(indl_mobile_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 670, -1, 40));

        to_date_label.setBackground(new java.awt.Color(255, 255, 255));
        to_date_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        to_date_label.setForeground(new java.awt.Color(51, 51, 51));
        to_date_label.setText("To Date");
        panelA.add(to_date_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 450, -1, 40));

        prefix_label.setBackground(new java.awt.Color(255, 255, 255));
        prefix_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        prefix_label.setForeground(new java.awt.Color(51, 51, 51));
        prefix_label.setText("Prefix From");
        panelA.add(prefix_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 560, -1, 40));

        suffix_label.setBackground(new java.awt.Color(255, 255, 255));
        suffix_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        suffix_label.setForeground(new java.awt.Color(51, 51, 51));
        suffix_label.setText("Suffix To");
        panelA.add(suffix_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 560, -1, 40));

        report_date_label.setBackground(new java.awt.Color(255, 255, 255));
        report_date_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        report_date_label.setForeground(new java.awt.Color(51, 51, 51));
        report_date_label.setText("Report Date");
        panelA.add(report_date_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 780, -1, 40));

        address_label.setBackground(new java.awt.Color(255, 255, 255));
        address_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        address_label.setForeground(new java.awt.Color(51, 51, 51));
        address_label.setText("Address");
        panelA.add(address_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 910, -1, 50));

        vill.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        vill.setForeground(new java.awt.Color(54, 33, 89));
        vill.setText("> XXXXXXX");
        panelA.add(vill, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1010, -1, 30));

        PO_label.setBackground(new java.awt.Color(255, 255, 255));
        PO_label.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        PO_label.setForeground(new java.awt.Color(66, 50, 77));
        PO_label.setText("PO");
        panelA.add(PO_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 970, -1, 50));

        PO.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        PO.setForeground(new java.awt.Color(54, 33, 89));
        PO.setText("> XXXXXXX");
        panelA.add(PO, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 1010, -1, 30));

        dist_label.setBackground(new java.awt.Color(255, 255, 255));
        dist_label.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        dist_label.setForeground(new java.awt.Color(66, 50, 77));
        dist_label.setText("District");
        panelA.add(dist_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1050, -1, 50));

        dist.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        dist.setForeground(new java.awt.Color(54, 33, 89));
        dist.setText("> XXXXXXX");
        panelA.add(dist, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1090, -1, 30));

        state_label.setBackground(new java.awt.Color(255, 255, 255));
        state_label.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        state_label.setForeground(new java.awt.Color(66, 50, 77));
        state_label.setText("State");
        panelA.add(state_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 1050, -1, 50));

        state.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        state.setForeground(new java.awt.Color(54, 33, 89));
        state.setText("> XXXXXXX");
        panelA.add(state, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 1090, -1, 30));

        teh_label.setBackground(new java.awt.Color(255, 255, 255));
        teh_label.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        teh_label.setForeground(new java.awt.Color(66, 50, 77));
        teh_label.setText("Tehsil");
        panelA.add(teh_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 970, -1, 50));

        tehsil.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        tehsil.setForeground(new java.awt.Color(54, 33, 89));
        tehsil.setText("> XXXXXXX");
        panelA.add(tehsil, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 1010, -1, 30));

        PIN_label.setBackground(new java.awt.Color(255, 255, 255));
        PIN_label.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        PIN_label.setForeground(new java.awt.Color(66, 50, 77));
        PIN_label.setText("PIN");
        panelA.add(PIN_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 1050, -1, 50));

        PIN.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        PIN.setForeground(new java.awt.Color(54, 33, 89));
        PIN.setText("> XXXXXXX");
        panelA.add(PIN, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 1090, -1, 30));

        vill_label.setBackground(new java.awt.Color(255, 255, 255));
        vill_label.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        vill_label.setForeground(new java.awt.Color(66, 50, 77));
        vill_label.setText("Village");
        panelA.add(vill_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 970, -1, 50));

        midA2.setForeground(new java.awt.Color(204, 204, 255));
        panelA.add(midA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1170, 580, 10));

        midA1.setForeground(new java.awt.Color(204, 204, 255));
        panelA.add(midA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 940, 440, 10));

        CO_mob_label.setBackground(new java.awt.Color(255, 255, 255));
        CO_mob_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        CO_mob_label.setForeground(new java.awt.Color(51, 51, 51));
        CO_mob_label.setText("CO Mob No.");
        panelA.add(CO_mob_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1200, -1, 50));

        CO_mob.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        CO_mob.setForeground(new java.awt.Color(54, 33, 89));
        CO_mob.setText("> XXXXXXX");
        panelA.add(CO_mob, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1240, -1, 30));

        ADJT_mob_label.setBackground(new java.awt.Color(255, 255, 255));
        ADJT_mob_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        ADJT_mob_label.setForeground(new java.awt.Color(51, 51, 51));
        ADJT_mob_label.setText("ADJT Mob No.");
        panelA.add(ADJT_mob_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 1200, -1, 50));

        ADJT_mob.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        ADJT_mob.setForeground(new java.awt.Color(54, 33, 89));
        ADJT_mob.setText("> XXXXXXX");
        panelA.add(ADJT_mob, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 1240, -1, 30));

        NOK_mobile_label.setBackground(new java.awt.Color(255, 255, 255));
        NOK_mobile_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        NOK_mobile_label.setForeground(new java.awt.Color(51, 51, 51));
        NOK_mobile_label.setText("NOK Mob. No.");
        panelA.add(NOK_mobile_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 670, -1, 40));

        alcohol_label.setBackground(new java.awt.Color(255, 255, 255));
        alcohol_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        alcohol_label.setForeground(new java.awt.Color(51, 51, 51));
        alcohol_label.setText("Rum/Whiskey");
        panelA.add(alcohol_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 780, -1, 40));

        prefix_textfield.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        prefix_textfield.setForeground(new java.awt.Color(54, 33, 89));
        prefix_textfield.setBorder(null);
        prefix_textfield.setMargin(new java.awt.Insets(2, 4, 2, 2));
        prefix_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefix_textfieldActionPerformed(evt);
            }
        });
        panelA.add(prefix_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 600, 230, 40));

        prefix_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(prefix_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 640, 230, 20));

        suffix_textfield.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        suffix_textfield.setForeground(new java.awt.Color(54, 33, 89));
        suffix_textfield.setBorder(null);
        suffix_textfield.setMargin(new java.awt.Insets(2, 4, 2, 2));
        suffix_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suffix_textfieldActionPerformed(evt);
            }
        });
        panelA.add(suffix_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 600, 230, 40));

        suffix_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(suffix_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 640, 230, 20));

        indl_mob_textfield.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        indl_mob_textfield.setForeground(new java.awt.Color(54, 33, 89));
        indl_mob_textfield.setBorder(null);
        indl_mob_textfield.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(indl_mob_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 710, 170, 40));

        label_91A1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        label_91A1.setForeground(new java.awt.Color(51, 51, 51));
        label_91A1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_91A1.setText("+91");
        panelA.add(label_91A1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 710, 50, 40));

        indl_mob_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(indl_mob_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 750, 170, 20));

        kin_mob_textfield.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_mob_textfield.setForeground(new java.awt.Color(54, 33, 89));
        kin_mob_textfield.setBorder(null);
        kin_mob_textfield.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(kin_mob_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 710, 170, 40));

        label_91A2.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        label_91A2.setForeground(new java.awt.Color(51, 51, 51));
        label_91A2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_91A2.setText("+91");
        panelA.add(label_91A2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 710, 50, 40));

        kin_mob_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_mob_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 750, 170, 20));

        army_number_underlineA4.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(army_number_underlineA4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 860, 230, 20));

        alcohol_textfield.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        alcohol_textfield.setForeground(new java.awt.Color(54, 33, 89));
        alcohol_textfield.setBorder(null);
        alcohol_textfield.setMargin(new java.awt.Insets(2, 4, 2, 2));
        alcohol_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alcohol_textfieldActionPerformed(evt);
            }
        });
        panelA.add(alcohol_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 820, 230, 40));

        from_date_combobox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        from_date_combobox.setForeground(new java.awt.Color(44, 62, 80));
        from_date_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        from_date_combobox.setBorder(null);
        panelA.add(from_date_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 490, 70, 40));

        from_month_combobox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        from_month_combobox.setForeground(new java.awt.Color(44, 62, 80));
        from_month_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        from_month_combobox.setBorder(null);
        panelA.add(from_month_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 490, 70, 40));

        from_year_combobox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        from_year_combobox.setForeground(new java.awt.Color(44, 62, 80));
        from_year_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        from_year_combobox.setBorder(null);
        panelA.add(from_year_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 490, 70, 40));

        to_date_combobox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        to_date_combobox.setForeground(new java.awt.Color(44, 62, 80));
        to_date_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        to_date_combobox.setBorder(null);
        panelA.add(to_date_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 490, 70, 40));

        to_month_combobox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        to_month_combobox.setForeground(new java.awt.Color(44, 62, 80));
        to_month_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        to_month_combobox.setBorder(null);
        panelA.add(to_month_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 490, 70, 40));

        to_year_combobox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        to_year_combobox.setForeground(new java.awt.Color(44, 62, 80));
        to_year_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        to_year_combobox.setBorder(null);
        panelA.add(to_year_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 490, 70, 40));

        report_date_combobox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        report_date_combobox.setForeground(new java.awt.Color(44, 62, 80));
        report_date_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        report_date_combobox.setBorder(null);
        panelA.add(report_date_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 820, 70, 40));

        report_month_combobox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        report_month_combobox.setForeground(new java.awt.Color(44, 62, 80));
        report_month_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        report_month_combobox.setBorder(null);
        panelA.add(report_month_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 820, 70, 40));

        report_year_combobox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        report_year_combobox.setForeground(new java.awt.Color(44, 62, 80));
        report_year_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        report_year_combobox.setBorder(null);
        panelA.add(report_year_combobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 820, 70, 40));

        ScrollPaneA.setViewportView(panelA);

        bg.add(ScrollPaneA, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 480));

        print_button.setMaximumSize(new java.awt.Dimension(95, 25));
        print_button.setMinimumSize(new java.awt.Dimension(95, 25));
        print_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                print_buttonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                print_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                print_buttonMouseExited(evt);
            }
        });
        print_button.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        print_label.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        print_label.setForeground(new java.awt.Color(64, 43, 100));
        print_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print_label.setText("PRINT");
        print_button.add(print_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 13, 71, 24));

        bg.add(print_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, 50));

        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    class Page1 implements Printable  
    {    
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                
                // Check If No Printable Content
                if (pageIndex >= 2) return Printable.NO_SUCH_PAGE;
                Graphics2D graphics2D = (Graphics2D)graphics;

                graphics2D.setClip(0, 0, 690, 800); //shapes the printing rectangle in respect to translate
                graphics2D.translate(10, 0); //marks the top of the page
                
                graphics2D.scale(0.68,0.7);
                panelA.paint(graphics2D);
                
                // return if page exists
                return Printable.PAGE_EXISTS;
            }
    }    
    class Page2 implements Printable  
    {    
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                Graphics2D graphics2D = (Graphics2D)graphics;

                graphics2D.setClip(0, 25, 690, 700); //shapes the printing rectangle in respect to translate
                graphics2D.translate(10, -775); //marks the top of the page
                
                graphics2D.scale(0.68,0.7);
                panelA.paint(graphics2D);
                
                // return if page exists
                return Printable.PAGE_EXISTS;
            }
    }

    private void PrintRecord()  
    {         
    PrinterJob printerjob = PrinterJob.getPrinterJob();          
    PageFormat pageformat = printerjob.defaultPage();     
    Book bk = new Book();    
    
    bk.append(new Page1(), pageformat);
    bk.append(new Page2(), pageformat);
    
    // Pass the book to the PrinterJob      
    printerjob.setPageable(bk);         
    if (printerjob.printDialog())  
    {
      try { printerjob.print(); }  
      catch (Exception e) { JOptionPane.showMessageDialog(null, "Could not print"); }      
    }}
    
    private void exit_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_iconMouseClicked
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit the program?", "Exit Program", JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_exit_iconMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        setState(this.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void go_back_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_go_back_labelMouseClicked

        if(flag){
        new Modules(0).setVisible(true);
        this.setVisible(false);
        flag = false;
        }
    }//GEN-LAST:event_go_back_labelMouseClicked

    private void menuAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAMouseClicked
    }//GEN-LAST:event_menuAMouseClicked

    private void okayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okayMouseClicked
        if(service_number_textfield.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Please Enter Army Number");
            name.setText("> XXXXXXX");
            rank.setText("> XXXXXXX");
            trade.setText("> XXXXXXX");
            company.setText("> XXXXXXX");
            unit.setText("> XXXXXXX");
            vill.setText("> XXXXXXX");
            PO.setText("> XXXXXXX");
            tehsil.setText("> XXXXXXX");
            dist.setText("> XXXXXXX");
            state.setText("> XXXXXXX");
            PIN.setText("> XXXXXXX");
            service_number_textfield.setText("");
            photo_labelA.setIcon(null);
        }
        else{
        try {
            // TODO add your handling code here:
            String query1 = "select * from new_registration where service_no = '"+service_number_textfield.getText()+"' ;";
            ResultSet rs    = s.executeQuery(query1); // Retrieving last stored password in database
             // Retrieving last stored password in database
             int i = 0;
            if(rs.next() == false){
                i = 1;
            }
            if(i==1){
            query1 = "select * from attach_in where Service_no = '"+service_number_textfield.getText()+"' ;";
            ResultSet rs1    = s.executeQuery(query1);
            
                if(rs1.next() == false){
                i = 2;
            }
            }
            if(i==2){
                query1 = "select * from post_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                ResultSet rs1    = s.executeQuery(query1);
                if(rs1.next() ==false){
                i=3;
                JOptionPane.showMessageDialog(rootPane, "Invalid Army Number");
                name.setText("> XXXXXXX");
                rank.setText("> XXXXXXX");
                trade.setText("> XXXXXXX");
                company.setText("> XXXXXXX");
                unit.setText("> XXXXXXX");
                vill.setText("> XXXXXXX");
                PO.setText("> XXXXXXX");
                tehsil.setText("> XXXXXXX");
                dist.setText("> XXXXXXX");
                state.setText("> XXXXXXX");
                PIN.setText("> XXXXXXX");
                service_number_textfield.setText("");
                photo_labelA.setIcon(null);
                }
            }
            if(i!=3){
                String[] r = new String[11];
                if(i==1){
                    query1 = "select * from attach_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[2] = rs1.getString("trade");
                        r[3] = rs1.getString("company");
                        r[4] = rs1.getString("unit");
                        r[5] = rs1.getString("address");
                    }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText(r[2]);
                company.setText(r[3]);
                unit.setText(r[4]);
                vill.setText(r[5].split(",")[0]);
                PO.setText(r[5].split(",")[1]);
                tehsil.setText(r[5].split(",")[2]);
                dist.setText(r[5].split(",")[3]);
                state.setText(r[5].split(",")[4]);
                PIN.setText(r[5].split(",")[5]);
                }
                if(i==2){
                    query1 = "select * from post_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[3] = rs1.getString("company");
                        r[2] = rs1.getString("address");
                    }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText("> XXXXXXX");
                company.setText(r[3]);
                unit.setText("> XXXXXXX");
                vill.setText(r[2].split(",")[0]);
                PO.setText(r[2].split(",")[1]);
                tehsil.setText(r[2].split(",")[2]);
                dist.setText(r[2].split(",")[3]);
                state.setText(r[2].split(",")[4]);
                PIN.setText(r[2].split(",")[5]);
                }
                else if(i==0){
                query1 = "select * from new_registration where service_no = '"+service_number_textfield.getText()+"' ;";
                    rs    = s.executeQuery(query1);
                while(rs.next()){
                    r[0] = rs.getString("name");
                    r[1] = rs.getString("rank_");
                    r[2] = rs.getString("company");
                    r[5] = rs.getString("address");
                }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText("> XXXXXXX");
                company.setText(r[2]);
                unit.setText("> XXXXXXX");
                vill.setText(r[5].split(",")[0]);
                PO.setText(r[5].split(",")[1]);
                tehsil.setText(r[5].split(",")[2]);
                dist.setText(r[5].split(",")[3]);
                state.setText(r[5].split(",")[4]);
                PIN.setText(r[5].split(",")[5]);
                } 
                
                scaleImage(service_number_textfield.getText()+".jpg");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Mov_Order_Temp.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_okayMouseClicked
    
    public void scaleImage(String n){
        path_file pf=new path_file();
    ImageIcon icon=new ImageIcon(pf.images+"/"+n);
    Image img=icon.getImage();
    Image imgScale=img.getScaledInstance(photo_labelA.getWidth(), photo_labelA.getHeight(), Image.SCALE_SMOOTH);
    ImageIcon scaledIcon =new ImageIcon(imgScale);
    photo_labelA.setIcon(scaledIcon);
    }
    
    private void PhotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PhotoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PhotoMouseClicked

    private void PhotoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PhotoMouseEntered
        Photo.setBackground(new java.awt.Color(237, 224, 255));// TODO add your handling code here:
    }//GEN-LAST:event_PhotoMouseEntered

    private void PhotoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PhotoMouseExited
        Photo.setBackground(new java.awt.Color(240,240,240));// TODO add your handling code here:
    }//GEN-LAST:event_PhotoMouseExited

    private void print_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonMouseClicked
        title_label.grabFocus();
        if(service_number_textfield.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Please Enter Army Number");
            name.setText("> XXXXXXX");
            rank.setText("> XXXXXXX");
            trade.setText("> XXXXXXX");
            company.setText("> XXXXXXX");
            unit.setText("> XXXXXXX");
            vill.setText("> XXXXXXX");
            PO.setText("> XXXXXXX");
            tehsil.setText("> XXXXXXX");
            dist.setText("> XXXXXXX");
            state.setText("> XXXXXXX");
            PIN.setText("> XXXXXXX");
            service_number_textfield.setText("");
            photo_labelA.setIcon(null);
        }
        else{
        try {
            // TODO add your handling code here:
            String query1 = "select * from new_registration where service_no = '"+service_number_textfield.getText()+"' ;";
            ResultSet rs    = s.executeQuery(query1); // Retrieving last stored password in database
             // Retrieving last stored password in database
             int i = 0;
            if(rs.next() == false){
                i = 1;
            }
            if(i==1){
            query1 = "select * from attach_in where Service_no = '"+service_number_textfield.getText()+"' ;";
            ResultSet rs1    = s.executeQuery(query1);
            
                if(rs1.next() == false){
                i = 2;
            }
            }
            if(i==2){
                query1 = "select * from post_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                ResultSet rs1    = s.executeQuery(query1);
                if(rs1.next() ==false){
                i=3;
                JOptionPane.showMessageDialog(rootPane, "Invalid Army Number");
                name.setText("> XXXXXXX");
                rank.setText("> XXXXXXX");
                trade.setText("> XXXXXXX");
                company.setText("> XXXXXXX");
                unit.setText("> XXXXXXX");
                vill.setText("> XXXXXXX");
                PO.setText("> XXXXXXX");
                tehsil.setText("> XXXXXXX");
                dist.setText("> XXXXXXX");
                state.setText("> XXXXXXX");
                PIN.setText("> XXXXXXX");
                service_number_textfield.setText("");
                photo_labelA.setIcon(null);
                }
            }
            if(i!=3){
                String[] r = new String[11];
                if(i==1){
                    query1 = "select * from attach_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[2] = rs1.getString("trade");
                        r[3] = rs1.getString("company");
                        r[4] = rs1.getString("unit");
                        r[5] = rs1.getString("address");
                    }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText(r[2]);
                company.setText(r[3]);
                unit.setText(r[4]);
                vill.setText(r[5].split(",")[0]);
                PO.setText(r[5].split(",")[1]);
                tehsil.setText(r[5].split(",")[2]);
                dist.setText(r[5].split(",")[3]);
                state.setText(r[5].split(",")[4]);
                PIN.setText(r[5].split(",")[5]);
                }
                if(i==2){
                    query1 = "select * from post_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[3] = rs1.getString("company");
                        r[2] = rs1.getString("address");
                    }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText("> XXXXXXX");
                company.setText(r[3]);
                unit.setText("> XXXXXXX");
                vill.setText(r[2].split(",")[0]);
                PO.setText(r[2].split(",")[1]);
                tehsil.setText(r[2].split(",")[2]);
                dist.setText(r[2].split(",")[3]);
                state.setText(r[2].split(",")[4]);
                PIN.setText(r[2].split(",")[5]);
                }
                else if(i==0){
                query1 = "select * from new_registration where service_no = '"+service_number_textfield.getText()+"' ;";
                    rs    = s.executeQuery(query1);
                while(rs.next()){
                    r[0] = rs.getString("name");
                    r[1] = rs.getString("rank_");
                    r[2] = rs.getString("company");
                    r[5] = rs.getString("address");
                }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText("> XXXXXXX");
                company.setText(r[2]);
                unit.setText("> XXXXXXX");
                vill.setText(r[5].split(",")[0]);
                PO.setText(r[5].split(",")[1]);
                tehsil.setText(r[5].split(",")[2]);
                dist.setText(r[5].split(",")[3]);
                state.setText(r[5].split(",")[4]);
                PIN.setText(r[5].split(",")[5]);
                } 
                
                scaleImage(service_number_textfield.getText()+".jpg");
                
                boolean all_check = (prefix_textfield.getText()!=null && !prefix_textfield.getText().trim().isEmpty()) && (suffix_textfield.getText()!=null && !suffix_textfield.getText().trim().isEmpty()) && (alcohol_textfield.getText()!=null && !alcohol_textfield.getText().trim().isEmpty()) && indl_mob_textfield.getText().length()==10 && indl_mob_textfield.getText().matches("[0-9]+") && kin_mob_textfield.getText().length()==10 && kin_mob_textfield.getText().matches("[0-9]+");
                String year = (String)from_year_combobox.getSelectedItem();
                String month = (String)from_month_combobox.getSelectedItem();
                String date = (String)from_date_combobox.getSelectedItem();
                
                
                String year1 = (String)to_year_combobox.getSelectedItem();
                String month1 = (String)to_month_combobox.getSelectedItem();
                String date1 = (String) to_date_combobox.getSelectedItem();
                
                String year2 = (String)report_year_combobox.getSelectedItem();
                String month2 = (String)report_month_combobox.getSelectedItem();
                String date2 = (String) report_date_combobox.getSelectedItem();
                boolean cal = false;
                    boolean cal1 = false;
                    boolean cal2 = false;
                    boolean da = year!= "YYYY" && year1!= "YYYY" && year2!= "YYYY" && month!= "MM" && month1!= "MM" && month2!= "MM" && date!= "DD" && date1!= "DD" && date2!= "DD";
                    if(da){
                    int y = Integer.parseInt(year);
                    int m = Integer.parseInt(month);
                    int d = Integer.parseInt(date);
                    int y1 = Integer.parseInt(year1);
                    int m1 = Integer.parseInt(month1);
                    int d1 = Integer.parseInt(date1);
                    int y2 = Integer.parseInt(year2);
                    int m2 = Integer.parseInt(month2);
                    int d2 = Integer.parseInt(date2);
                    cal = !((y%4==0 && m==2 &&  (d>29)  )   || (  (m==2 || m==4 || m==6 || m==9 || m==11)  && d==31  )    ||  (m==2 && d>28 && y%4!=0));
                    cal1 = !((y1%4==0 && m1==2 &&  (d1>29)  )   || (  (m1==2 || m1==4 || m1==6 || m1==9 || m1==11)  && d1==31  )    ||  (m1==2 && d1>28 && y1%4!=0));
                    cal2 = !((y2%4==0 && m2==2 &&  (d2>29)  )   || (  (m2==2 || m2==4 || m2==6 || m2==9 || m2==11)  && d2==31  )    ||  (m2==2 && d2>28 && y2%4!=0));
                    }
                if(all_check && cal && cal1 & cal2){
                    PrintRecord();
                }
                else if(cal == false || cal1 == false || cal2 == false){
                    JOptionPane.showMessageDialog(null, "Invalid Date");
                }
                else if(prefix_textfield.getText()==null || prefix_textfield.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Prefix From Field is Empty.");
                }
                else if(suffix_textfield.getText()==null || suffix_textfield.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Suffix To field is empty.");
                }
                else if(indl_mob_textfield.getText().trim().length()!=10 || !indl_mob_textfield.getText().matches("[0-9]+")){
                    JOptionPane.showMessageDialog(null, "Invalid Indi Mobile Number.");
                }
                else if(kin_mob_textfield.getText().trim().length()!=10 || !kin_mob_textfield.getText().matches("[0-9]+")){
                    JOptionPane.showMessageDialog(null, "Invalid Kin Mobile Number.");
                }
                else if(alcohol_textfield.getText()==null || alcohol_textfield.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Rum/Whiskey Field is Empty.");
                }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Mov_Order_Temp.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_print_buttonMouseClicked

    private void print_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonMouseEntered
        print_button.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_print_buttonMouseEntered

    private void print_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonMouseExited
        print_button.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_print_buttonMouseExited

    private void prefix_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefix_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prefix_textfieldActionPerformed

    private void suffix_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suffix_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_suffix_textfieldActionPerformed

    private void alcohol_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alcohol_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alcohol_textfieldActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //for a centered frame
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        //for a centered frame
        
    }//GEN-LAST:event_formWindowOpened

    private void move_panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMouseDragged
        this.setLocation(this.getX() +evt.getX() -mouseX, this.getY() + evt.getY() -mouseY);
    }//GEN-LAST:event_move_panelMouseDragged

    private void move_panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMousePressed
        mouseX =evt.getX();
        mouseY =evt.getY();
    }//GEN-LAST:event_move_panelMousePressed

    private void service_number_textfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_service_number_textfieldKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            okayMouseClicked(null);
        }
    }//GEN-LAST:event_service_number_textfieldKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lve_cert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lve_cert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lve_cert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lve_cert.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lve_cert().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ADJT_mob;
    private javax.swing.JLabel ADJT_mob_label;
    private javax.swing.JLabel CO_mob;
    private javax.swing.JLabel CO_mob_label;
    private javax.swing.JLabel NOK_mobile_label;
    private javax.swing.JLabel PIN;
    private javax.swing.JLabel PIN_label;
    private javax.swing.JLabel PO;
    private javax.swing.JLabel PO_label;
    private javax.swing.JPanel Photo;
    private javax.swing.JScrollPane ScrollPaneA;
    private javax.swing.JSeparator Separator;
    private javax.swing.JLabel address_label;
    private javax.swing.JLabel alcohol_label;
    private javax.swing.JTextField alcohol_textfield;
    private javax.swing.JSeparator army_number_underlineA4;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel company;
    private javax.swing.JLabel company_label;
    private javax.swing.JLabel dist;
    private javax.swing.JLabel dist_label;
    private javax.swing.JLabel exit_icon;
    private javax.swing.JComboBox<String> from_date_combobox;
    private javax.swing.JLabel from_date_label;
    private javax.swing.JComboBox<String> from_month_combobox;
    private javax.swing.JComboBox<String> from_year_combobox;
    private javax.swing.JLabel go_back_label;
    private javax.swing.JTextField indl_mob_textfield;
    private javax.swing.JSeparator indl_mob_underline;
    private javax.swing.JLabel indl_mobile_label;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField kin_mob_textfield;
    private javax.swing.JSeparator kin_mob_underline;
    private javax.swing.JLabel label_91A1;
    private javax.swing.JLabel label_91A2;
    private javax.swing.JPanel menuA;
    private javax.swing.JLabel menuA_icon;
    private javax.swing.JLabel menuA_label;
    private javax.swing.JSeparator midA1;
    private javax.swing.JSeparator midA2;
    private javax.swing.JLabel minimize;
    private javax.swing.JPanel move_panel;
    private javax.swing.JLabel name;
    private javax.swing.JLabel name_label;
    private javax.swing.JLabel okay;
    private javax.swing.JPanel panelA;
    private javax.swing.JSeparator panelA_bottom_line2;
    private javax.swing.JLabel photo_labelA;
    private javax.swing.JLabel prefix_label;
    private javax.swing.JTextField prefix_textfield;
    private javax.swing.JSeparator prefix_underline;
    private javax.swing.JPanel print_button;
    private javax.swing.JLabel print_label;
    private javax.swing.JLabel rank;
    private javax.swing.JLabel rank_label;
    private javax.swing.JComboBox<String> report_date_combobox;
    private javax.swing.JLabel report_date_label;
    private javax.swing.JComboBox<String> report_month_combobox;
    private javax.swing.JComboBox<String> report_year_combobox;
    private javax.swing.JLabel service_number_label;
    private javax.swing.JTextField service_number_textfield;
    private javax.swing.JSeparator service_number_underline;
    private javax.swing.JPanel side_pane;
    private javax.swing.JLabel state;
    private javax.swing.JLabel state_label;
    private javax.swing.JLabel suffix_label;
    private javax.swing.JTextField suffix_textfield;
    private javax.swing.JSeparator suffix_underline;
    private javax.swing.JLabel teh_label;
    private javax.swing.JLabel tehsil;
    private javax.swing.JLabel title_icon;
    private javax.swing.JLabel title_label;
    private javax.swing.JComboBox<String> to_date_combobox;
    private javax.swing.JLabel to_date_label;
    private javax.swing.JComboBox<String> to_month_combobox;
    private javax.swing.JComboBox<String> to_year_combobox;
    private javax.swing.JLabel trade;
    private javax.swing.JLabel trade_label;
    private javax.swing.JLabel unit;
    private javax.swing.JLabel unit_label;
    private javax.swing.JLabel vill;
    private javax.swing.JLabel vill_label;
    // End of variables declaration//GEN-END:variables
}
