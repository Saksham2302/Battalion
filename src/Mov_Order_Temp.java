
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.Book;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author chise
 */
public class Mov_Order_Temp extends javax.swing.JFrame {

    /**
     * Creates new form Mov_Order_Temp
     */
    Database db=new Database();
    private int mouseX, mouseY;
    Connection c = db.create_connection(true);
    Statement s;
    boolean flag = true;
    DefaultTableModel model_fullscreen, model_table;
    public Mov_Order_Temp() {
        initComponents();
        
        ScrollPaneC.getVerticalScrollBar().setUnitIncrement(16);
        ScrollPaneA.getVerticalScrollBar().setUnitIncrement(16);
        ScrollPaneB.getVerticalScrollBar().setUnitIncrement(16);
        fullscreen_ScrollPaneB.getVerticalScrollBar().setUnitIncrement(16);
        
        print_buttonA.setVisible(true);
        insert_buttonA.setVisible(true);
        print_buttonB.setVisible(false);
        edit_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);
        
        model_fullscreen=(DefaultTableModel) fullscreen_tableB.getModel();
        model_table=(DefaultTableModel) TableG_out.getModel();
         try {
            s = c.createStatement();
        } catch (Exception ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        move_panel = new javax.swing.JPanel();
        bg = new javax.swing.JPanel();
        exit_icon = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        Separator = new javax.swing.JSeparator();
        side_pane = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        go_back_label = new javax.swing.JLabel();
        title_icon = new javax.swing.JLabel();
        menuA = new javax.swing.JPanel();
        menuA_icon = new javax.swing.JLabel();
        menuA_label = new javax.swing.JLabel();
        menuB = new javax.swing.JPanel();
        menuB_icon = new javax.swing.JLabel();
        menuB_label = new javax.swing.JLabel();
        title_label1 = new javax.swing.JLabel();
        title_label = new javax.swing.JLabel();
        ScrollPaneA = new javax.swing.JScrollPane();
        panelA = new javax.swing.JPanel();
        service_number_underlineA = new javax.swing.JSeparator();
        service_number_textfieldA = new javax.swing.JTextField();
        service_number_labelA = new javax.swing.JLabel();
        okayA = new javax.swing.JLabel();
        DOE_labelA = new javax.swing.JLabel();
        distribution_comboboxA = new javax.swing.JComboBox<>();
        to_unit_labelA = new javax.swing.JLabel();
        to_unit_textfieldA = new javax.swing.JTextField();
        to_unit_underlineA = new javax.swing.JSeparator();
        DOD_labelA = new javax.swing.JLabel();
        DOD_date_comboboxA = new javax.swing.JComboBox<>();
        DOD_month_comboboxA = new javax.swing.JComboBox<>();
        DOD_year_comboboxA = new javax.swing.JComboBox<>();
        Photo_individual = new javax.swing.JPanel();
        photo_label = new javax.swing.JLabel();
        panelC_bottom_line1 = new javax.swing.JSeparator();
        case_file_labelA = new javax.swing.JLabel();
        case_file_textfieldA = new javax.swing.JTextField();
        case_file_underlineA = new javax.swing.JSeparator();
        FNAN_labelA = new javax.swing.JLabel();
        FNAN_textfieldA = new javax.swing.JTextField();
        FNAN_underlineA = new javax.swing.JSeparator();
        Offr_labelA = new javax.swing.JLabel();
        Offr_textfieldA = new javax.swing.JTextField();
        Offr_underlineA = new javax.swing.JSeparator();
        SORS_labelA = new javax.swing.JLabel();
        SORS_underlineA = new javax.swing.JSeparator();
        SORS_textfieldA = new javax.swing.JTextField();
        rationed_labelA = new javax.swing.JLabel();
        rationed_date_comboboxA = new javax.swing.JComboBox<>();
        rationed_month_comboboxA = new javax.swing.JComboBox<>();
        rationed_year_comboboxA = new javax.swing.JComboBox<>();
        authority_labelA = new javax.swing.JLabel();
        authority_textfieldA = new javax.swing.JTextField();
        authority_underlineA = new javax.swing.JSeparator();
        purpose_labelA = new javax.swing.JLabel();
        purpose_textfieldA = new javax.swing.JTextField();
        purpose_underlineA = new javax.swing.JSeparator();
        report_labelA = new javax.swing.JLabel();
        report_textfieldA = new javax.swing.JTextField();
        report_underlineA = new javax.swing.JSeparator();
        name_labelA = new javax.swing.JLabel();
        nameA = new javax.swing.JLabel();
        rank_labelA = new javax.swing.JLabel();
        rankA = new javax.swing.JLabel();
        company_labelA = new javax.swing.JLabel();
        companyA = new javax.swing.JLabel();
        trade_labelA = new javax.swing.JLabel();
        tradeA = new javax.swing.JLabel();
        unit_labelA = new javax.swing.JLabel();
        unitA = new javax.swing.JLabel();
        DOB_labelA = new javax.swing.JLabel();
        DOB_A = new javax.swing.JLabel();
        contact_labelA = new javax.swing.JLabel();
        ICard_mobA = new javax.swing.JLabel();
        CO_mob_labelA = new javax.swing.JLabel();
        CO_mobA = new javax.swing.JLabel();
        indl_mob_labelA = new javax.swing.JLabel();
        indl_mobA = new javax.swing.JLabel();
        NOK_mob_labelA = new javax.swing.JLabel();
        NOK_mobA = new javax.swing.JLabel();
        adjt_labelA = new javax.swing.JLabel();
        adjt_mobA = new javax.swing.JLabel();
        ICard_labelA = new javax.swing.JLabel();
        midA1 = new javax.swing.JSeparator();
        panelB = new javax.swing.JPanel();
        ScrollPaneB = new javax.swing.JScrollPane();
        TableG_out = new javax.swing.JTable();
        service_number_labelB = new javax.swing.JLabel();
        service_numberB = new javax.swing.JTextField();
        textfield_underline = new javax.swing.JSeparator();
        okayB = new javax.swing.JLabel();
        ScrollPaneC = new javax.swing.JScrollPane();
        panelC = new javax.swing.JPanel();
        service_number_labelC = new javax.swing.JLabel();
        name_labelC = new javax.swing.JLabel();
        army_numberC = new javax.swing.JLabel();
        rank_labelC = new javax.swing.JLabel();
        rankC = new javax.swing.JLabel();
        nameC = new javax.swing.JLabel();
        midC4 = new javax.swing.JSeparator();
        changing_for_label = new javax.swing.JLabel();
        midC0 = new javax.swing.JSeparator();
        panelC_bottom_line2 = new javax.swing.JSeparator();
        DOE_labelA2 = new javax.swing.JLabel();
        distribution_comboboxA2 = new javax.swing.JComboBox<>();
        to_unit_labelA1 = new javax.swing.JLabel();
        to_unit_textfieldA1 = new javax.swing.JTextField();
        to_unit_underlineA1 = new javax.swing.JSeparator();
        DOD_labelA1 = new javax.swing.JLabel();
        DOD_date_comboboxA1 = new javax.swing.JComboBox<>();
        DOD_month_comboboxA1 = new javax.swing.JComboBox<>();
        DOD_year_comboboxA1 = new javax.swing.JComboBox<>();
        case_file_labelA1 = new javax.swing.JLabel();
        case_file_textfieldA1 = new javax.swing.JTextField();
        case_file_underlineA1 = new javax.swing.JSeparator();
        FNAN_labelA1 = new javax.swing.JLabel();
        FNAN_textfieldA1 = new javax.swing.JTextField();
        FNAN_underlineA1 = new javax.swing.JSeparator();
        Offr_labelA1 = new javax.swing.JLabel();
        Offr_textfieldA1 = new javax.swing.JTextField();
        Offr_underlineA1 = new javax.swing.JSeparator();
        SORS_labelA1 = new javax.swing.JLabel();
        SORS_underlineA1 = new javax.swing.JSeparator();
        SORS_textfieldA1 = new javax.swing.JTextField();
        rationed_labelA1 = new javax.swing.JLabel();
        rationed_date_comboboxA1 = new javax.swing.JComboBox<>();
        rationed_month_comboboxA1 = new javax.swing.JComboBox<>();
        rationed_year_comboboxA1 = new javax.swing.JComboBox<>();
        authority_labelA1 = new javax.swing.JLabel();
        authority_textfieldA1 = new javax.swing.JTextField();
        authority_underlineA1 = new javax.swing.JSeparator();
        purpose_labelA1 = new javax.swing.JLabel();
        purpose_textfieldA1 = new javax.swing.JTextField();
        purpose_underlineA1 = new javax.swing.JSeparator();
        report_labelA1 = new javax.swing.JLabel();
        report_textfieldA1 = new javax.swing.JTextField();
        report_underlineA1 = new javax.swing.JSeparator();
        print_buttonA = new javax.swing.JPanel();
        print_label = new javax.swing.JLabel();
        insert_buttonA = new javax.swing.JPanel();
        insert_label = new javax.swing.JLabel();
        edit_buttonB = new javax.swing.JPanel();
        edit_labelB = new javax.swing.JLabel();
        refresh_buttonB = new javax.swing.JPanel();
        refresh_labelB = new javax.swing.JLabel();
        print_buttonB = new javax.swing.JPanel();
        print_labelB = new javax.swing.JLabel();
        update_buttonC = new javax.swing.JPanel();
        update_labelC = new javax.swing.JLabel();
        fullscreen_buttonB = new javax.swing.JPanel();
        fullscreen_labelB = new javax.swing.JLabel();
        fullscreen_panelB = new javax.swing.JPanel();
        fullscreen_ScrollPaneB = new javax.swing.JScrollPane();
        fullscreen_tableB = new javax.swing.JTable();
        exit_fullscreen_buttonB = new javax.swing.JPanel();
        exit_fullscreen_labelB = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1280, 720));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        move_panel.setFocusable(false);
        move_panel.setOpaque(false);
        move_panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                move_panelMouseDragged(evt);
            }
        });
        move_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                move_panelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout move_panelLayout = new javax.swing.GroupLayout(move_panel);
        move_panel.setLayout(move_panelLayout);
        move_panelLayout.setHorizontalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        move_panelLayout.setVerticalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(move_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 30));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setMaximumSize(new java.awt.Dimension(1280, 720));
        bg.setMinimumSize(new java.awt.Dimension(1280, 720));
        bg.setPreferredSize(new java.awt.Dimension(1280, 720));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exit_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/remove_purple.png"))); // NOI18N
        exit_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_iconMouseClicked(evt);
            }
        });
        bg.add(exit_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1215, 30, -1, -1));

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/minimize-purple.png"))); // NOI18N
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        bg.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 30, -1, 40));

        Separator.setForeground(new java.awt.Color(54, 33, 89));
        Separator.setPreferredSize(new java.awt.Dimension(50, 20));
        bg.add(Separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 890, 10));

        side_pane.setBackground(new java.awt.Color(54, 33, 89));
        side_pane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        side_pane.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 280, 50));

        go_back_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/left-arrow.png"))); // NOI18N
        go_back_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                go_back_labelMouseClicked(evt);
            }
        });
        side_pane.add(go_back_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        title_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/temp_mov_white.png"))); // NOI18N
        side_pane.add(title_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 60, 70));

        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAMouseClicked(evt);
            }
        });

        menuA_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuA_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuA_icon.setText("A");

        menuA_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuA_label.setForeground(new java.awt.Color(255, 255, 255));
        menuA_label.setText("Create Record");

        javax.swing.GroupLayout menuALayout = new javax.swing.GroupLayout(menuA);
        menuA.setLayout(menuALayout);
        menuALayout.setHorizontalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuA_icon)
                .addGap(33, 33, 33)
                .addComponent(menuA_label)
                .addContainerGap(135, Short.MAX_VALUE))
        );
        menuALayout.setVerticalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuA_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuA_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 330, 60));

        menuB.setBackground(new java.awt.Color(85, 65, 118));
        menuB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBMouseClicked(evt);
            }
        });

        menuB_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuB_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuB_icon.setText("B");

        menuB_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuB_label.setForeground(new java.awt.Color(255, 255, 255));
        menuB_label.setText("View by Army Number");

        javax.swing.GroupLayout menuBLayout = new javax.swing.GroupLayout(menuB);
        menuB.setLayout(menuBLayout);
        menuBLayout.setHorizontalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuB_icon)
                .addGap(33, 33, 33)
                .addComponent(menuB_label)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        menuBLayout.setVerticalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuB_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuB_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 330, 60));

        title_label1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        title_label1.setForeground(new java.awt.Color(255, 255, 255));
        title_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_label1.setText("Move Order");
        side_pane.add(title_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 180, 40));

        title_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        title_label.setForeground(new java.awt.Color(255, 255, 255));
        title_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_label.setText("Temporary");
        side_pane.add(title_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 170, 40));

        bg.add(side_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 740));

        ScrollPaneA.setBorder(null);
        ScrollPaneA.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelA.setBackground(new java.awt.Color(255, 255, 255));
        panelA.setFocusable(false);
        panelA.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        service_number_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(service_number_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 400, 20));

        service_number_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        service_number_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        service_number_textfieldA.setBorder(null);
        service_number_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        service_number_textfieldA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                service_number_textfieldAKeyPressed(evt);
            }
        });
        panelA.add(service_number_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 400, 40));

        service_number_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        service_number_labelA.setForeground(new java.awt.Color(51, 51, 51));
        service_number_labelA.setText("Army Number");
        panelA.add(service_number_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 40));

        okayA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/check-mark.png"))); // NOI18N
        okayA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okayAMouseClicked(evt);
            }
        });
        panelA.add(okayA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, -1, 40));

        DOE_labelA.setBackground(new java.awt.Color(255, 255, 255));
        DOE_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        DOE_labelA.setForeground(new java.awt.Color(51, 51, 51));
        DOE_labelA.setText("Distribution");
        panelA.add(DOE_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 790, -1, 40));

        distribution_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        distribution_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        distribution_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Office Copy", "Unit Concerned", "Q Branch" }));
        distribution_comboboxA.setBorder(null);
        panelA.add(distribution_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 830, 320, 40));

        to_unit_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        to_unit_labelA.setForeground(new java.awt.Color(51, 51, 51));
        to_unit_labelA.setText("To Unit");
        panelA.add(to_unit_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 460, -1, 40));

        to_unit_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        to_unit_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        to_unit_textfieldA.setBorder(null);
        to_unit_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(to_unit_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 500, 320, 40));

        to_unit_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(to_unit_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 540, 320, 20));

        DOD_labelA.setBackground(new java.awt.Color(255, 255, 255));
        DOD_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        DOD_labelA.setForeground(new java.awt.Color(51, 51, 51));
        DOD_labelA.setText("Departure Date ");
        panelA.add(DOD_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 460, -1, 40));

        DOD_date_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        DOD_date_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        DOD_date_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        DOD_date_comboboxA.setBorder(null);
        panelA.add(DOD_date_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 500, 100, 40));

        DOD_month_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        DOD_month_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        DOD_month_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        DOD_month_comboboxA.setBorder(null);
        panelA.add(DOD_month_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 500, 100, 40));

        DOD_year_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        DOD_year_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        DOD_year_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        DOD_year_comboboxA.setBorder(null);
        panelA.add(DOD_year_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 500, 100, 40));

        Photo_individual.setMaximumSize(new java.awt.Dimension(95, 25));
        Photo_individual.setMinimumSize(new java.awt.Dimension(95, 25));
        Photo_individual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Photo_individualMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Photo_individualMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Photo_individualMouseExited(evt);
            }
        });
        Photo_individual.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Photo_individual.add(photo_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 200));

        panelA.add(Photo_individual, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 80, 180, 200));

        panelC_bottom_line1.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(panelC_bottom_line1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 1410, 910, -1));

        case_file_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        case_file_labelA.setForeground(new java.awt.Color(51, 51, 51));
        case_file_labelA.setText("Case File Number");
        panelA.add(case_file_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1020, -1, 40));

        case_file_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        case_file_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        case_file_textfieldA.setBorder(null);
        case_file_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(case_file_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1060, 320, 40));

        case_file_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(case_file_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1100, 320, 20));

        FNAN_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        FNAN_labelA.setForeground(new java.awt.Color(51, 51, 51));
        FNAN_labelA.setText("FN/AN");
        panelA.add(FNAN_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 570, -1, 40));

        FNAN_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        FNAN_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        FNAN_textfieldA.setBorder(null);
        FNAN_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(FNAN_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 610, 320, 40));

        FNAN_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(FNAN_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 650, 320, 20));

        Offr_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        Offr_labelA.setForeground(new java.awt.Color(51, 51, 51));
        Offr_labelA.setText("Offr/ JCO/ OR ");
        panelA.add(Offr_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 570, -1, 40));

        Offr_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        Offr_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        Offr_textfieldA.setBorder(null);
        Offr_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(Offr_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 610, 320, 40));

        Offr_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(Offr_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 650, 320, 20));

        SORS_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        SORS_labelA.setForeground(new java.awt.Color(51, 51, 51));
        SORS_labelA.setText("SORS ");
        panelA.add(SORS_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 680, -1, 40));

        SORS_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(SORS_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 760, 320, 20));

        SORS_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        SORS_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        SORS_textfieldA.setBorder(null);
        SORS_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(SORS_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 720, 320, 40));

        rationed_labelA.setBackground(new java.awt.Color(255, 255, 255));
        rationed_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        rationed_labelA.setForeground(new java.awt.Color(51, 51, 51));
        rationed_labelA.setText("Rationed Up to ");
        panelA.add(rationed_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 680, -1, 40));

        rationed_date_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        rationed_date_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        rationed_date_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        rationed_date_comboboxA.setBorder(null);
        panelA.add(rationed_date_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 720, 100, 40));

        rationed_month_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        rationed_month_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        rationed_month_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        rationed_month_comboboxA.setBorder(null);
        panelA.add(rationed_month_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 720, 100, 40));

        rationed_year_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        rationed_year_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        rationed_year_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        rationed_year_comboboxA.setBorder(null);
        panelA.add(rationed_year_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 720, 100, 40));

        authority_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        authority_labelA.setForeground(new java.awt.Color(51, 51, 51));
        authority_labelA.setText("Authority for Mov ");
        panelA.add(authority_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 790, -1, 40));

        authority_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        authority_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        authority_textfieldA.setBorder(null);
        authority_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(authority_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 830, 320, 40));

        authority_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(authority_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 870, 320, 20));

        purpose_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        purpose_labelA.setForeground(new java.awt.Color(51, 51, 51));
        purpose_labelA.setText("Purpose of Duty");
        panelA.add(purpose_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 910, -1, 40));

        purpose_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        purpose_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        purpose_textfieldA.setBorder(null);
        purpose_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(purpose_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 950, 320, 40));

        purpose_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(purpose_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 990, 320, 20));

        report_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        report_labelA.setForeground(new java.awt.Color(51, 51, 51));
        report_labelA.setText("Report To");
        panelA.add(report_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 910, 190, 40));

        report_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        report_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        report_textfieldA.setBorder(null);
        report_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(report_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 950, 320, 40));

        report_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(report_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 990, 320, 20));

        name_labelA.setBackground(new java.awt.Color(255, 255, 255));
        name_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        name_labelA.setForeground(new java.awt.Color(51, 51, 51));
        name_labelA.setText("Name");
        panelA.add(name_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, 40));

        nameA.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        nameA.setForeground(new java.awt.Color(54, 33, 89));
        nameA.setText("> XXXXXXX");
        panelA.add(nameA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, -1, 30));

        rank_labelA.setBackground(new java.awt.Color(255, 255, 255));
        rank_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        rank_labelA.setForeground(new java.awt.Color(51, 51, 51));
        rank_labelA.setText("Rank");
        panelA.add(rank_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, -1, 40));

        rankA.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        rankA.setForeground(new java.awt.Color(54, 33, 89));
        rankA.setText("> XXXXXXX");
        panelA.add(rankA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, -1, 30));

        company_labelA.setBackground(new java.awt.Color(255, 255, 255));
        company_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        company_labelA.setForeground(new java.awt.Color(51, 51, 51));
        company_labelA.setText("Company");
        panelA.add(company_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, -1, 40));

        companyA.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        companyA.setForeground(new java.awt.Color(54, 33, 89));
        companyA.setText("> XXXXXXX");
        panelA.add(companyA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, -1, 30));

        trade_labelA.setBackground(new java.awt.Color(255, 255, 255));
        trade_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        trade_labelA.setForeground(new java.awt.Color(51, 51, 51));
        trade_labelA.setText("Trade");
        panelA.add(trade_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 350, -1, 40));

        tradeA.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        tradeA.setForeground(new java.awt.Color(54, 33, 89));
        tradeA.setText("> XXXXXXX");
        panelA.add(tradeA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 390, -1, 30));

        unit_labelA.setBackground(new java.awt.Color(255, 255, 255));
        unit_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        unit_labelA.setForeground(new java.awt.Color(51, 51, 51));
        unit_labelA.setText("Unit");
        panelA.add(unit_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, -1, 40));

        unitA.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        unitA.setForeground(new java.awt.Color(54, 33, 89));
        unitA.setText("> XXXXXXX");
        panelA.add(unitA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 300, -1, 30));

        DOB_labelA.setBackground(new java.awt.Color(255, 255, 255));
        DOB_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        DOB_labelA.setForeground(new java.awt.Color(51, 51, 51));
        DOB_labelA.setText("DOB");
        panelA.add(DOB_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 350, -1, 40));

        DOB_A.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        DOB_A.setForeground(new java.awt.Color(54, 33, 89));
        DOB_A.setText("> XXXXXXX");
        panelA.add(DOB_A, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, -1, 30));

        contact_labelA.setBackground(new java.awt.Color(255, 255, 255));
        contact_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        contact_labelA.setForeground(new java.awt.Color(51, 51, 51));
        contact_labelA.setText("Contact");
        panelA.add(contact_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1150, -1, 50));

        ICard_mobA.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        ICard_mobA.setForeground(new java.awt.Color(54, 33, 89));
        ICard_mobA.setText("> XXXXXXX");
        panelA.add(ICard_mobA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1250, -1, 30));

        CO_mob_labelA.setBackground(new java.awt.Color(255, 255, 255));
        CO_mob_labelA.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        CO_mob_labelA.setForeground(new java.awt.Color(66, 50, 77));
        CO_mob_labelA.setText("CO Mob");
        panelA.add(CO_mob_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 1210, -1, 50));

        CO_mobA.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        CO_mobA.setForeground(new java.awt.Color(54, 33, 89));
        CO_mobA.setText("> XXXXXXX");
        panelA.add(CO_mobA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 1250, -1, 30));

        indl_mob_labelA.setBackground(new java.awt.Color(255, 255, 255));
        indl_mob_labelA.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        indl_mob_labelA.setForeground(new java.awt.Color(66, 50, 77));
        indl_mob_labelA.setText("Indl Mob");
        panelA.add(indl_mob_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1290, -1, 50));

        indl_mobA.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        indl_mobA.setForeground(new java.awt.Color(54, 33, 89));
        indl_mobA.setText("> XXXXXXX");
        panelA.add(indl_mobA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1330, -1, 30));

        NOK_mob_labelA.setBackground(new java.awt.Color(255, 255, 255));
        NOK_mob_labelA.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        NOK_mob_labelA.setForeground(new java.awt.Color(66, 50, 77));
        NOK_mob_labelA.setText("NOK Mob");
        panelA.add(NOK_mob_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 1290, -1, 50));

        NOK_mobA.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        NOK_mobA.setForeground(new java.awt.Color(54, 33, 89));
        NOK_mobA.setText("> XXXXXXX");
        panelA.add(NOK_mobA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 1330, -1, 30));

        adjt_labelA.setBackground(new java.awt.Color(255, 255, 255));
        adjt_labelA.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        adjt_labelA.setForeground(new java.awt.Color(66, 50, 77));
        adjt_labelA.setText("Adjt Mob");
        panelA.add(adjt_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 1210, -1, 50));

        adjt_mobA.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        adjt_mobA.setForeground(new java.awt.Color(54, 33, 89));
        adjt_mobA.setText("> XXXXXXX");
        panelA.add(adjt_mobA, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 1250, -1, 30));

        ICard_labelA.setBackground(new java.awt.Color(255, 255, 255));
        ICard_labelA.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        ICard_labelA.setForeground(new java.awt.Color(66, 50, 77));
        ICard_labelA.setText("I-Card Number");
        panelA.add(ICard_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1210, -1, 50));

        midA1.setForeground(new java.awt.Color(204, 204, 255));
        panelA.add(midA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 1175, 440, 10));

        ScrollPaneA.setViewportView(panelA);

        bg.add(ScrollPaneA, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 500));

        panelB.setBackground(new java.awt.Color(255, 255, 255));
        panelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ScrollPaneB.setBackground(new java.awt.Color(255, 255, 255));
        ScrollPaneB.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        TableG_out.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        TableG_out.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "Army No.", "To Unit", "Departure Date", "Rationed Up To", "Purpose"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableG_out.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        TableG_out.setFocusable(false);
        TableG_out.setGridColor(new java.awt.Color(255, 255, 255));
        TableG_out.setMaximumSize(null);
        TableG_out.setRowHeight(30);
        TableG_out.setSelectionBackground(new java.awt.Color(54, 33, 89));
        TableG_out.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ScrollPaneB.setViewportView(TableG_out);
        if (TableG_out.getColumnModel().getColumnCount() > 0) {
            TableG_out.getColumnModel().getColumn(0).setMinWidth(50);
            TableG_out.getColumnModel().getColumn(0).setPreferredWidth(50);
            TableG_out.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        panelB.add(ScrollPaneB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 780, 300));

        service_number_labelB.setBackground(new java.awt.Color(255, 255, 255));
        service_number_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        service_number_labelB.setForeground(new java.awt.Color(51, 51, 51));
        service_number_labelB.setText("Army Number");
        panelB.add(service_number_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 40));

        service_numberB.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        service_numberB.setForeground(new java.awt.Color(54, 33, 89));
        service_numberB.setBorder(null);
        service_numberB.setMargin(new java.awt.Insets(2, 4, 2, 2));
        service_numberB.setSelectionColor(new java.awt.Color(204, 204, 255));
        panelB.add(service_numberB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 400, 40));

        textfield_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelB.add(textfield_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 400, 10));

        okayB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/check-mark.png"))); // NOI18N
        okayB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okayBMouseClicked(evt);
            }
        });
        panelB.add(okayB, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, -1, 40));

        bg.add(panelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 480));

        ScrollPaneC.setBorder(null);
        ScrollPaneC.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelC.setBackground(new java.awt.Color(255, 255, 255));
        panelC.setFocusable(false);
        panelC.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        service_number_labelC.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        service_number_labelC.setForeground(new java.awt.Color(51, 51, 51));
        service_number_labelC.setText("Army Number");
        panelC.add(service_number_labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, 40));

        name_labelC.setBackground(new java.awt.Color(255, 255, 255));
        name_labelC.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        name_labelC.setForeground(new java.awt.Color(51, 51, 51));
        name_labelC.setText("Name");
        panelC.add(name_labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, -1, 40));

        army_numberC.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        army_numberC.setForeground(new java.awt.Color(54, 33, 89));
        army_numberC.setText("> XXXXXXX");
        panelC.add(army_numberC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, 40));

        rank_labelC.setBackground(new java.awt.Color(255, 255, 255));
        rank_labelC.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        rank_labelC.setForeground(new java.awt.Color(51, 51, 51));
        rank_labelC.setText("Rank");
        panelC.add(rank_labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, -1, 40));

        rankC.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        rankC.setForeground(new java.awt.Color(54, 33, 89));
        rankC.setText("> XXXXXXX");
        panelC.add(rankC, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, -1, 40));

        nameC.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        nameC.setForeground(new java.awt.Color(54, 33, 89));
        nameC.setText("> XXXXXXX");
        panelC.add(nameC, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, -1, 40));

        midC4.setForeground(new java.awt.Color(204, 204, 255));
        midC4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        panelC.add(midC4, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 85, 20, 40));

        changing_for_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        changing_for_label.setText("Changing For");
        panelC.add(changing_for_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 20));

        midC0.setForeground(new java.awt.Color(204, 204, 255));
        panelC.add(midC0, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 390, 10));

        panelC_bottom_line2.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(panelC_bottom_line2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 930, 910, -1));

        DOE_labelA2.setBackground(new java.awt.Color(255, 255, 255));
        DOE_labelA2.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        DOE_labelA2.setForeground(new java.awt.Color(51, 51, 51));
        DOE_labelA2.setText("Distribution");
        panelC.add(DOE_labelA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 560, -1, 40));

        distribution_comboboxA2.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        distribution_comboboxA2.setForeground(new java.awt.Color(44, 62, 80));
        distribution_comboboxA2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Office Copy, ", "Unit Concerned", "Q Branch" }));
        distribution_comboboxA2.setBorder(null);
        panelC.add(distribution_comboboxA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 600, 320, 40));

        to_unit_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        to_unit_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        to_unit_labelA1.setText("To Unit");
        panelC.add(to_unit_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, 40));

        to_unit_textfieldA1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        to_unit_textfieldA1.setForeground(new java.awt.Color(54, 33, 89));
        to_unit_textfieldA1.setBorder(null);
        to_unit_textfieldA1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(to_unit_textfieldA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 320, 40));

        to_unit_underlineA1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(to_unit_underlineA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 320, 20));

        DOD_labelA1.setBackground(new java.awt.Color(255, 255, 255));
        DOD_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        DOD_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        DOD_labelA1.setText("Departure Date ");
        panelC.add(DOD_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 230, -1, 40));

        DOD_date_comboboxA1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        DOD_date_comboboxA1.setForeground(new java.awt.Color(44, 62, 80));
        DOD_date_comboboxA1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        DOD_date_comboboxA1.setBorder(null);
        panelC.add(DOD_date_comboboxA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 270, 100, 40));

        DOD_month_comboboxA1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        DOD_month_comboboxA1.setForeground(new java.awt.Color(44, 62, 80));
        DOD_month_comboboxA1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        DOD_month_comboboxA1.setBorder(null);
        panelC.add(DOD_month_comboboxA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 270, 100, 40));

        DOD_year_comboboxA1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        DOD_year_comboboxA1.setForeground(new java.awt.Color(44, 62, 80));
        DOD_year_comboboxA1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        DOD_year_comboboxA1.setBorder(null);
        panelC.add(DOD_year_comboboxA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 270, 100, 40));

        case_file_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        case_file_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        case_file_labelA1.setText("Case File Number");
        panelC.add(case_file_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 790, -1, 40));

        case_file_textfieldA1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        case_file_textfieldA1.setForeground(new java.awt.Color(54, 33, 89));
        case_file_textfieldA1.setBorder(null);
        case_file_textfieldA1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(case_file_textfieldA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 830, 320, 40));

        case_file_underlineA1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(case_file_underlineA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 870, 320, 20));

        FNAN_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        FNAN_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        FNAN_labelA1.setText("FN/AN");
        panelC.add(FNAN_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, -1, 40));

        FNAN_textfieldA1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        FNAN_textfieldA1.setForeground(new java.awt.Color(54, 33, 89));
        FNAN_textfieldA1.setBorder(null);
        FNAN_textfieldA1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(FNAN_textfieldA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 320, 40));

        FNAN_underlineA1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(FNAN_underlineA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 420, 320, 20));

        Offr_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        Offr_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        Offr_labelA1.setText("Offr/ JCO/ OR ");
        panelC.add(Offr_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 340, -1, 40));

        Offr_textfieldA1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        Offr_textfieldA1.setForeground(new java.awt.Color(54, 33, 89));
        Offr_textfieldA1.setBorder(null);
        Offr_textfieldA1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(Offr_textfieldA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 380, 320, 40));

        Offr_underlineA1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(Offr_underlineA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 420, 320, 20));

        SORS_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        SORS_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        SORS_labelA1.setText("SORS ");
        panelC.add(SORS_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 450, -1, 40));

        SORS_underlineA1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(SORS_underlineA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 530, 320, 20));

        SORS_textfieldA1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        SORS_textfieldA1.setForeground(new java.awt.Color(54, 33, 89));
        SORS_textfieldA1.setBorder(null);
        SORS_textfieldA1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(SORS_textfieldA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 490, 320, 40));

        rationed_labelA1.setBackground(new java.awt.Color(255, 255, 255));
        rationed_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        rationed_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        rationed_labelA1.setText("Rationed Up to ");
        panelC.add(rationed_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 450, -1, 40));

        rationed_date_comboboxA1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        rationed_date_comboboxA1.setForeground(new java.awt.Color(44, 62, 80));
        rationed_date_comboboxA1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        rationed_date_comboboxA1.setBorder(null);
        panelC.add(rationed_date_comboboxA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 490, 100, 40));

        rationed_month_comboboxA1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        rationed_month_comboboxA1.setForeground(new java.awt.Color(44, 62, 80));
        rationed_month_comboboxA1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        rationed_month_comboboxA1.setBorder(null);
        panelC.add(rationed_month_comboboxA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 490, 100, 40));

        rationed_year_comboboxA1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        rationed_year_comboboxA1.setForeground(new java.awt.Color(44, 62, 80));
        rationed_year_comboboxA1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        rationed_year_comboboxA1.setBorder(null);
        panelC.add(rationed_year_comboboxA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 490, 100, 40));

        authority_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        authority_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        authority_labelA1.setText("Authority for Mov ");
        panelC.add(authority_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 560, -1, 40));

        authority_textfieldA1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        authority_textfieldA1.setForeground(new java.awt.Color(54, 33, 89));
        authority_textfieldA1.setBorder(null);
        authority_textfieldA1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(authority_textfieldA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 600, 320, 40));

        authority_underlineA1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(authority_underlineA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 640, 320, 20));

        purpose_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        purpose_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        purpose_labelA1.setText("Purpose of Duty");
        panelC.add(purpose_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 680, -1, 40));

        purpose_textfieldA1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        purpose_textfieldA1.setForeground(new java.awt.Color(54, 33, 89));
        purpose_textfieldA1.setBorder(null);
        purpose_textfieldA1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(purpose_textfieldA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 720, 320, 40));

        purpose_underlineA1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(purpose_underlineA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 760, 320, 20));

        report_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        report_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        report_labelA1.setText("Report To");
        panelC.add(report_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 680, 190, 40));

        report_textfieldA1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        report_textfieldA1.setForeground(new java.awt.Color(54, 33, 89));
        report_textfieldA1.setBorder(null);
        report_textfieldA1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(report_textfieldA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 720, 320, 40));

        report_underlineA1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(report_underlineA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 760, 320, 20));

        ScrollPaneC.setViewportView(panelC);

        bg.add(ScrollPaneC, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 480));

        print_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        print_buttonA.setMaximumSize(new java.awt.Dimension(95, 25));
        print_buttonA.setMinimumSize(new java.awt.Dimension(95, 25));
        print_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                print_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                print_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                print_buttonAMouseExited(evt);
            }
        });
        print_buttonA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        print_label.setBackground(new java.awt.Color(54, 33, 89));
        print_label.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        print_label.setForeground(new java.awt.Color(54, 33, 89));
        print_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print_label.setText("PRINT");
        print_label.setFocusable(false);
        print_label.setRequestFocusEnabled(false);
        print_label.setVerifyInputWhenFocusTarget(false);
        print_buttonA.add(print_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 0, 71, 50));

        bg.add(print_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, 50));

        insert_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        insert_buttonA.setMaximumSize(new java.awt.Dimension(95, 25));
        insert_buttonA.setMinimumSize(new java.awt.Dimension(95, 25));
        insert_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insert_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insert_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insert_buttonAMouseExited(evt);
            }
        });
        insert_buttonA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        insert_label.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        insert_label.setForeground(new java.awt.Color(54, 33, 89));
        insert_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        insert_label.setText("INSERT");
        insert_buttonA.add(insert_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 13, 71, 24));

        bg.add(insert_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 180, 50));

        edit_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        edit_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        edit_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        edit_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edit_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                edit_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                edit_buttonBMouseExited(evt);
            }
        });
        edit_buttonB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        edit_labelB.setBackground(new java.awt.Color(54, 33, 89));
        edit_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        edit_labelB.setForeground(new java.awt.Color(54, 33, 89));
        edit_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        edit_labelB.setText("EDIT");
        edit_buttonB.add(edit_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 80, 50));

        bg.add(edit_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 180, 50));

        refresh_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        refresh_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        refresh_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        refresh_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refresh_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refresh_buttonBMouseExited(evt);
            }
        });
        refresh_buttonB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        refresh_labelB.setBackground(new java.awt.Color(54, 33, 89));
        refresh_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        refresh_labelB.setForeground(new java.awt.Color(54, 33, 89));
        refresh_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refresh_labelB.setText("REFRESH");
        refresh_buttonB.add(refresh_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 80, 50));

        bg.add(refresh_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 180, 50));

        print_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        print_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        print_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        print_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                print_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                print_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                print_buttonBMouseExited(evt);
            }
        });
        print_buttonB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        print_labelB.setBackground(new java.awt.Color(54, 33, 89));
        print_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        print_labelB.setForeground(new java.awt.Color(54, 33, 89));
        print_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print_labelB.setText("PRINT");
        print_buttonB.add(print_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 80, 50));

        bg.add(print_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 120, 180, 50));

        update_buttonC.setForeground(new java.awt.Color(240, 240, 240));
        update_buttonC.setMaximumSize(new java.awt.Dimension(200, 200));
        update_buttonC.setMinimumSize(new java.awt.Dimension(200, 200));
        update_buttonC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                update_buttonCMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                update_buttonCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                update_buttonCMouseExited(evt);
            }
        });
        update_buttonC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        update_labelC.setBackground(new java.awt.Color(54, 33, 89));
        update_labelC.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        update_labelC.setForeground(new java.awt.Color(54, 33, 89));
        update_labelC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        update_labelC.setText("UPDATE");
        update_buttonC.add(update_labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 120, 50));

        bg.add(update_buttonC, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, 50));

        fullscreen_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        fullscreen_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        fullscreen_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        fullscreen_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fullscreen_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fullscreen_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fullscreen_buttonBMouseExited(evt);
            }
        });
        fullscreen_buttonB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fullscreen_labelB.setBackground(new java.awt.Color(54, 33, 89));
        fullscreen_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        fullscreen_labelB.setForeground(new java.awt.Color(54, 33, 89));
        fullscreen_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fullscreen_labelB.setText("FULLSCREEN");
        fullscreen_buttonB.add(fullscreen_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 120, 50));

        bg.add(fullscreen_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, -1));

        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        fullscreen_panelB.setBackground(new java.awt.Color(255, 255, 255));
        fullscreen_panelB.setMaximumSize(new java.awt.Dimension(1280, 720));
        fullscreen_panelB.setMinimumSize(new java.awt.Dimension(1280, 720));
        fullscreen_panelB.setPreferredSize(new java.awt.Dimension(1280, 720));
        fullscreen_panelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fullscreen_ScrollPaneB.setBackground(new java.awt.Color(255, 255, 255));
        fullscreen_ScrollPaneB.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        fullscreen_tableB.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        fullscreen_tableB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "Army No.", "Unti To", "Departure Date", "FN/AN", "Offr / JCO / OR", "SORS", "Rationed Up To", "Authority for Mov", "Distribution", "Purpose Of Duty", "Report To", "Case File Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fullscreen_tableB.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fullscreen_tableB.setFocusable(false);
        fullscreen_tableB.setGridColor(new java.awt.Color(255, 255, 255));
        fullscreen_tableB.setMaximumSize(new java.awt.Dimension(300, 60));
        fullscreen_tableB.setMinimumSize(new java.awt.Dimension(300, 60));
        fullscreen_tableB.setRowHeight(30);
        fullscreen_tableB.setSelectionBackground(new java.awt.Color(54, 33, 89));
        fullscreen_ScrollPaneB.setViewportView(fullscreen_tableB);
        if (fullscreen_tableB.getColumnModel().getColumnCount() > 0) {
            fullscreen_tableB.getColumnModel().getColumn(0).setMinWidth(50);
            fullscreen_tableB.getColumnModel().getColumn(0).setPreferredWidth(50);
            fullscreen_tableB.getColumnModel().getColumn(0).setMaxWidth(50);
            fullscreen_tableB.getColumnModel().getColumn(1).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(1).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(1).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(2).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(2).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(2).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(3).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(3).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(3).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(4).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(4).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(4).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(5).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(5).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(5).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(6).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(6).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(6).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(7).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(7).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(7).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(8).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(8).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(8).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(9).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(9).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(9).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(10).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(10).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(10).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(11).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(11).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(11).setMaxWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(12).setMinWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(12).setPreferredWidth(150);
            fullscreen_tableB.getColumnModel().getColumn(12).setMaxWidth(150);
        }

        fullscreen_panelB.add(fullscreen_ScrollPaneB, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 1200, 580));

        exit_fullscreen_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        exit_fullscreen_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        exit_fullscreen_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        exit_fullscreen_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonBMouseExited(evt);
            }
        });
        exit_fullscreen_buttonB.setLayout(null);

        exit_fullscreen_labelB.setBackground(new java.awt.Color(54, 33, 89));
        exit_fullscreen_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        exit_fullscreen_labelB.setForeground(new java.awt.Color(54, 33, 89));
        exit_fullscreen_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit_fullscreen_labelB.setText("GO BACK");
        exit_fullscreen_buttonB.add(exit_fullscreen_labelB);
        exit_fullscreen_labelB.setBounds(30, 0, 120, 50);

        fullscreen_panelB.add(exit_fullscreen_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 640, 180, 50));

        getContentPane().add(fullscreen_panelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //--------------------------------------------------------------------------
    //--------------------------------------------------------------------------Printing using book class -start
     
    class Page1 implements Printable  
    {    
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                
                // Check If No Printable Content
                if (pageIndex >= 2) return Printable.NO_SUCH_PAGE;
                Graphics2D graphics2D = (Graphics2D)graphics;

                graphics2D.setClip(0, 0, 690, 800); //shapes the printing rectangle in respect to translate
                graphics2D.translate(10, 0); //marks the top of the page
                
                graphics2D.scale(0.68,0.7);
                panelA.paint(graphics2D);
                
                // return if page exists
                return Printable.PAGE_EXISTS;
            }
    }    
    class Page2 implements Printable  
    {    
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                Graphics2D graphics2D = (Graphics2D)graphics;

                graphics2D.setClip(0, 25, 690, 700); //shapes the printing rectangle in respect to translate
                graphics2D.translate(10, -775); //marks the top of the page
                
                graphics2D.scale(0.68,0.7);
                panelA.paint(graphics2D);
                
                // return if page exists
                return Printable.PAGE_EXISTS;
            }
    }

    private void PrintRecord()  
    {         
    PrinterJob printerjob = PrinterJob.getPrinterJob();          
    PageFormat pageformat = printerjob.defaultPage();     
    Book bk = new Book();    
    
    bk.append(new Page1(), pageformat);
    bk.append(new Page2(), pageformat);
    
    // Pass the book to the PrinterJob      
    printerjob.setPageable(bk);         
    if (printerjob.printDialog())  
    {
      try { printerjob.print(); }  
      catch (Exception e) { JOptionPane.showMessageDialog(null, "Could not print"); }      
    }}

    //--------------------------------------------------------------------------Printing using book class -end
    //--------------------------------------------------------------------------
    private void viewall(String a){
        try{
            ResultSet rs = null;
            int i = 0;
            if(a.equals("null")){
            rs = s.executeQuery("Select * from temp;");
            rs.next();
            }
            
            else{
                rs = s.executeQuery("Select * from temp where Army_no = '"+a+"';");
                if(rs.next() == false){
                    i = 1;
                    JOptionPane.showMessageDialog(null, "Army Number not found.");
                }
            }
            String service_no, unti, dep, fnan, offr, sors, rat, auth, distri, pur, report , cas;
            model_table.setRowCount(0);
            model_fullscreen.setRowCount(0);
            //int row = 0;
            i = 1;
            
            do{
//                row = row + 30;
//                Table.setPreferredSize(new java.awt.Dimension(300,row));
//                fullscreen_table.setPreferredSize(new java.awt.Dimension(300,row));
                service_no=rs.getString("army_no");                
                unti=rs.getString("unit_to");                
                dep=rs.getString("dep_date");
                fnan=rs.getString("fnan");
                offr=rs.getString("offr");
                sors=rs.getString("sors");
                rat=rs.getString("rationed");
                auth=rs.getString("auth");
                distri=rs.getString("distri");
                pur=rs.getString("purpose");
                report=rs.getString("report");
                cas=rs.getString("case_file");
                model_table.addRow(new Object[]{
                   i,
                   service_no, 
                   unti,
                   dep,
                   rat,
                   pur
                });
                 model_fullscreen.addRow( new Object[]{
                   i,
                   service_no, 
                   unti,
                   dep,
                   fnan, 
                   offr,
                   sors,
                   rat,
                   auth,
                   distri,
                   pur,
                   report,
                   cas,
                });
            i++;
            } while(rs.next());
        }catch(Exception e){System.out.println(e);}   
    }
    
    public void scaleImage(String n){
        path_file paths=new path_file();
    ImageIcon icon=new ImageIcon(paths.images + "\\" +n);
    Image img=icon.getImage();
    Image imgScale=img.getScaledInstance(photo_label.getWidth(), photo_label.getHeight(), Image.SCALE_SMOOTH);
    ImageIcon scaledIcon =new ImageIcon(imgScale);
    photo_label.setIcon(scaledIcon);
    }
    
    private void move_panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMouseDragged
        this.setLocation(this.getX() +evt.getX() -mouseX, this.getY() + evt.getY() -mouseY);
    }//GEN-LAST:event_move_panelMouseDragged

    private void move_panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMousePressed
        mouseX =evt.getX();
        mouseY =evt.getY();
    }//GEN-LAST:event_move_panelMousePressed

    private void exit_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_iconMouseClicked
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit the program?", "Exit Program", JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            dispose();
            try {
                c.close();
            } catch (SQLException ex) {
                System.out.println("connection ended");
            }
        }
    }//GEN-LAST:event_exit_iconMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        setState(this.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void go_back_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_go_back_labelMouseClicked
        if(flag){
        new Modules(0).setVisible(true);
        this.setVisible(false);
        flag = false;
        }
    }//GEN-LAST:event_go_back_labelMouseClicked

    private void menuAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAMouseClicked
        menuA.setBackground(new java.awt.Color(85,65,118));
        menuB.setBackground(new java.awt.Color(64,43,100));

        print_buttonA.setVisible(true);
        insert_buttonA.setVisible(true);
        print_buttonB.setVisible(false);
        edit_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);

        ScrollPaneA.setVisible(true);
        panelB.setVisible(false);
        ScrollPaneC.setVisible(false);
        fullscreen_panelB.setVisible(false);
    }//GEN-LAST:event_menuAMouseClicked

    private void menuBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBMouseClicked
        menuB.setBackground(new java.awt.Color(85,65,118));
        menuA.setBackground(new java.awt.Color(64,43,100));

        print_buttonA.setVisible(false);
        insert_buttonA.setVisible(false);
        print_buttonB.setVisible(true);
        edit_buttonB.setVisible(true);
        refresh_buttonB.setVisible(true);
        fullscreen_buttonB.setVisible(true);
        update_buttonC.setVisible(false);

        ScrollPaneA.setVisible(false);
        panelB.setVisible(true);
        ScrollPaneC.setVisible(false);
        fullscreen_panelB.setVisible(false);
        
        viewall("null");
    }//GEN-LAST:event_menuBMouseClicked

    private void okayAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okayAMouseClicked
        if(service_number_textfieldA.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Please Enter Army Number");
            nameA.setText("> XXXXXXX");
            rankA.setText("> XXXXXXX");
            tradeA.setText("> XXXXXXX");
            companyA.setText("> XXXXXXX");
            unitA.setText("> XXXXXXX");
            DOB_A.setText("> XXXXXXX");
            indl_mobA.setText("> XXXXXXX");
            NOK_mobA.setText("> XXXXXXX");
            ICard_mobA.setText("> XXXXXXX");
            service_number_textfieldA.setText("");
            photo_label.setIcon(null);
        }
        else{
        try {
            // TODO add your handling code here:
            String query1 = "select * from new_registration where service_no = '"+service_number_textfieldA.getText()+"' ;";
            ResultSet rs    = s.executeQuery(query1); // Retrieving last stored password in database
             // Retrieving last stored password in database
             int i = 0;
            if(rs.next() == false){
                i = 1;
            }
            if(i==1){
            query1 = "select * from attach_in where Service_no = '"+service_number_textfieldA.getText()+"' ;";
            ResultSet rs1    = s.executeQuery(query1);
            
                if(rs1.next() == false){
                i = 2;
            }
            }
            if(i==2){
                query1 = "select * from post_in where Service_no = '"+service_number_textfieldA.getText()+"' ;";
                ResultSet rs1    = s.executeQuery(query1);
                if(rs1.next() ==false){
                i=3;
                JOptionPane.showMessageDialog(rootPane, "Invalid Army Number");
                nameA.setText("> XXXXXXX");
                rankA.setText("> XXXXXXX");
                tradeA.setText("> XXXXXXX");
                companyA.setText("> XXXXXXX");
                unitA.setText("> XXXXXXX");
                DOB_A.setText("> XXXXXXX");
                indl_mobA.setText("> XXXXXXX");
                NOK_mobA.setText("> XXXXXXX");
                ICard_mobA.setText("> XXXXXXX");
                service_number_textfieldA.setText("");
                photo_label.setIcon(null);
                }
            }
            if(i!=3){
                String[] r = new String[9];
                if(i==1){
                    query1 = "select * from attach_in where Service_no = '"+service_number_textfieldA.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[2] = rs1.getString("trade");
                        r[3] = rs1.getString("company");
                        r[4] = rs1.getString("unit");
                        r[5] = rs1.getString("DOB");
                        r[6] = rs1.getString("Contact_no");
                        r[7] = rs1.getString("kin_contact");
                        r[8] = rs1.getString("indl_id");
                    }
                nameA.setText(r[0]);
                rankA.setText(r[1]);
                tradeA.setText(r[2]);
                companyA.setText(r[3]);
                unitA.setText(r[4]);
                DOB_A.setText(r[5]);
                indl_mobA.setText(r[6]);
                NOK_mobA.setText(r[7]);
                ICard_mobA.setText(r[8]);
                }
                if(i==2){
                    query1 = "select * from post_in where Service_no = '"+service_number_textfieldA.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[3] = rs1.getString("company");
                        r[2] = rs1.getString("DOB");
                        r[6] = rs1.getString("Contact_no");
                        r[7] = rs1.getString("kin_contact");
                        r[8] = rs1.getString("indl_id");
                    }
                nameA.setText(r[0]);
                rankA.setText(r[1]);
                tradeA.setText("> XXXXXXX");
                companyA.setText(r[3]);
                unitA.setText("> XXXXXXX");
                DOB_A.setText(r[2]);
                indl_mobA.setText(r[6]);
                NOK_mobA.setText(r[7]);
                ICard_mobA.setText(r[8]);
                }
                else if(i==0){
                query1 = "select * from new_registration where service_no = '"+service_number_textfieldA.getText()+"' ;";
                    rs    = s.executeQuery(query1);
                while(rs.next()){
                    r[0] = rs.getString("name");
                    r[1] = rs.getString("rank_");
                    r[2] = rs.getString("company");
                    r[3] = rs.getString("Birth_date");
                    r[6] = rs.getString("Indl_Contact_No");
                    r[7] = rs.getString("Kin_Contact_No");
                    r[8] = rs.getString("Indl_ICard_Number");
                }
                nameA.setText(r[0]);
                rankA.setText(r[1]);
                tradeA.setText("> XXXXXXX");
                companyA.setText(r[2]);
                unitA.setText("> XXXXXXX");
                DOB_A.setText(r[3]);
                indl_mobA.setText(r[6]);
                NOK_mobA.setText(r[7]);
                ICard_mobA.setText(r[8]);
                } 
                
                scaleImage(service_number_textfieldA.getText()+".jpg");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Update_data.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_okayAMouseClicked

    private void Photo_individualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Photo_individualMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Photo_individualMouseClicked

    private void Photo_individualMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Photo_individualMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Photo_individualMouseEntered

    private void Photo_individualMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Photo_individualMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_Photo_individualMouseExited

    private void okayBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okayBMouseClicked
        if((service_numberB.getText()!=null && !service_numberB.getText().trim().isEmpty()) ){
            viewall(service_numberB.getText());
        }
        else{
            JOptionPane.showMessageDialog(null, "Please Enter Army Number.");
        }
    }//GEN-LAST:event_okayBMouseClicked

    private void print_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseClicked
        title_label.grabFocus();
        PrintRecord();
    }//GEN-LAST:event_print_buttonAMouseClicked

    private void print_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseEntered
        print_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_print_buttonAMouseEntered

    private void print_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseExited
        print_buttonA.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_print_buttonAMouseExited

    private void insert_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_buttonAMouseEntered
        insert_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_insert_buttonAMouseEntered

    private void insert_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_buttonAMouseExited
        insert_buttonA.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_insert_buttonAMouseExited

    private void edit_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_buttonBMouseClicked
        if(TableG_out.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Please select element from table to edit.");
        }
        else{
        ScrollPaneA.setVisible(false);
        panelB.setVisible(false);
        ScrollPaneC.setVisible(true);
        fullscreen_panelB.setVisible(false);

        print_buttonA.setVisible(false);
        insert_buttonA.setVisible(false);
        print_buttonB.setVisible(false);
        edit_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);
        update_buttonC.setVisible(true);
        
            
            String q = "select * from new_registration where service_no = '"+(String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1)+"';";
             ResultSet rs = null;
             boolean a = false,b = false, c = false;
            try {
               rs = s.executeQuery(q);
               a = rs.next();
               
               q = "select * from attach_in where Service_no = '"+(String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1)+"';";
               rs = s.executeQuery(q);
               b = rs.next();
               
               q = "select * from post_in where Service_no = '"+(String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1)+"';";
               rs = s.executeQuery(q);
               c = rs.next();
               
            } catch (SQLException ex) {
                Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
            }
            String rank = "",name = "", army = (String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1);
            
            
            if(a == true){
                try {
                    q = "select * from new_registration where service_no= '"+army+"';";
                    rs = s.executeQuery(q);
                    while(rs.next()){
                        rank = rs.getString("Rank_");
                        name = rs.getString("Name");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(b == true){
                try {
                    q = "select * from attach_in where Service_no= '"+army+"';";
                    rs = s.executeQuery(q);
                    while(rs.next()){
                        rank = rs.getString("Rank_");
                        name = rs.getString("Name");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(c == true){
                try {
                    q = "select * from post_in where Service_no= '"+army+"';";
                    rs = s.executeQuery(q);
                    while(rs.next()){
                        rank = rs.getString("Rank_");
                        name = rs.getString("Name");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            army_numberC.setText(army);
            nameC.setText(name);
            rankC.setText(rank);
            String[] arr = new String[11];
            try {
                    String to = (String) TableG_out.getValueAt(TableG_out.getSelectedRow(),3);
                    q = "select * from temp where Army_no= '"+army+"' and dep_date = '"+to+"';";
                    rs = s.executeQuery(q);
                    
                    while(rs.next()){
                        arr[0] = rs.getString("unit_to");
                        arr[1] = rs.getString("dep_date");
                        arr[2] = rs.getString("fnan");
                        arr[3] = rs.getString("offr");
                        arr[4] = rs.getString("sors");
                        arr[5] = rs.getString("rationed");
                        arr[6] = rs.getString("auth");
                        arr[7] = rs.getString("distri");
                        arr[8] = rs.getString("purpose");
                        arr[9] = rs.getString("report");
                        arr[10] = rs.getString("case_file");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
                }
            DOD_date_comboboxA1.setSelectedItem(arr[1].split("-")[0]);
            DOD_month_comboboxA1.setSelectedItem(arr[1].split("-")[1]);
            DOD_year_comboboxA1.setSelectedItem(arr[1].split("-")[2]);
            rationed_date_comboboxA1.setSelectedItem(arr[5].split("-")[0]);
            rationed_month_comboboxA1.setSelectedItem(arr[5].split("-")[1]);
            rationed_year_comboboxA1.setSelectedItem(arr[5].split("-")[2]);
            to_unit_textfieldA1.setText(arr[0]);
            FNAN_textfieldA1.setText(arr[2]);
            Offr_textfieldA1.setText(arr[3]);
            SORS_textfieldA1.setText(arr[4]);
            authority_textfieldA1.setText(arr[6]);
            distribution_comboboxA2.setSelectedItem(arr[7]);
            purpose_textfieldA1.setText(arr[8]);
            report_textfieldA1.setText(arr[9]);
            case_file_textfieldA1.setText(arr[10]);
        }
    }//GEN-LAST:event_edit_buttonBMouseClicked

    private void edit_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_buttonBMouseEntered
        edit_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_edit_buttonBMouseEntered

    private void edit_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_buttonBMouseExited
        edit_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_edit_buttonBMouseExited

    private void refresh_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonBMouseClicked
        viewall("null");
    }//GEN-LAST:event_refresh_buttonBMouseClicked

    private void refresh_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonBMouseEntered
        refresh_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_refresh_buttonBMouseEntered

    private void refresh_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonBMouseExited
        refresh_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_refresh_buttonBMouseExited

    private void print_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseClicked
        /*try{
            path_file paths=new path_file();
            PrintWriter pw=new PrintWriter(new File(paths.csv + "\\" +"temp.csv"));
            StringBuilder sb=new StringBuilder();
            String query="Select * from temp";
            
            sb.append("Army Number      \t");
            sb.append(",");
            sb.append("To Unit            \t");
            sb.append(",");
            sb.append("Departure Date             \t");
            sb.append(",");
            sb.append("FN/AN         \t");
            sb.append(",");
            sb.append("Offr / JCO / OR        \t");
            sb.append(",");
            sb.append("SORS      \t");
            sb.append(",");
            sb.append("Rationed Up To         \t");
            sb.append(",");
            sb.append("Authority for Mov         \t");
            sb.append(",");
            sb.append("Distribution         \t");
            sb.append(",");
            sb.append("Purpose of duty     \t");
            sb.append(",");
            sb.append("Report To         \t");
            sb.append(",");
            sb.append("Case File Number         \t");
            
            sb.append("\r\n");
            ResultSet rs = null;
            Statement st = c.createStatement();
            rs=st.executeQuery(query);  
            
            while(rs.next()){
            sb.append(rs.getString("army_no"));
            sb.append(",");
            sb.append(rs.getString("unit_to"));
            sb.append(",");
            sb.append(rs.getString("dep_date"));
            sb.append(",");
            sb.append(rs.getString("fnan"));
            sb.append(",");
            sb.append(rs.getString("offr"));
            sb.append(",");
            sb.append(rs.getString("sors"));
            sb.append(",");
            sb.append(rs.getString("rationed"));
            sb.append(",");
            sb.append(rs.getString("auth"));
            sb.append(",");
            sb.append(rs.getString("distri"));
            sb.append(",");
            sb.append(rs.getString("purpose"));
            sb.append(",");
            sb.append(rs.getString("report"));
            sb.append(",");
            sb.append(rs.getString("case_file"));
                
                sb.append("\r\n");
            }
            pw.write(sb.toString());
            pw.close();
            JOptionPane.showMessageDialog(null,"Successfully Converted to CSV");
        }
        catch(Exception e){
            System.out.print("\n"+e);
            String er=e.getMessage();
            if(er.contains("The process cannot access the file because it is being used by another process")){
                JOptionPane.showMessageDialog(null,"Please close the CSV file first!");
            }
        }*/
        try{

        Statement statement = c.createStatement();
            ResultSet resultSet = statement.executeQuery("select * from temp");
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet spreadsheet =null;
            spreadsheet = workbook.createSheet("temporary");
            
            XSSFRow row = spreadsheet.createRow(0);
            XSSFCell cell;
            cell = row.createCell(0);
            cell.setCellValue("Army Number");
            cell = row.createCell(1);
            cell.setCellValue("To Unit");
            cell = row.createCell(2);
            cell.setCellValue("Departure Date");
            cell = row.createCell(3);
            cell.setCellValue("FN/AN");
            cell = row.createCell(4);
            cell.setCellValue("Offr / JCO / OR");
            cell = row.createCell(5);
            cell.setCellValue("SORS");
            cell = row.createCell(6);
            cell.setCellValue("Rationed Up To");
            cell = row.createCell(7);
            cell.setCellValue("Authority for Mov");
            cell = row.createCell(8);
            cell.setCellValue("Distribution");
            cell = row.createCell(9);
            cell.setCellValue("Purpose of Duty");
            cell = row.createCell(10);
            cell.setCellValue("Report To");
            cell = row.createCell(11);
            cell.setCellValue("Case File Number");
            int i = 1;
            
            while(resultSet.next()) {
                row = spreadsheet.createRow(i);
                cell = row.createCell(0);
                cell.setCellValue(resultSet.getString("army_no"));
                cell = row.createCell(1);
                cell.setCellValue(resultSet.getString("unit_to"));
                cell = row.createCell(2);
                cell.setCellValue(resultSet.getString("dep_date"));
                cell = row.createCell(3);
                cell.setCellValue(resultSet.getString("fnan"));
                cell = row.createCell(4);
                cell.setCellValue(resultSet.getString("offr"));
                cell = row.createCell(5);
                cell.setCellValue(resultSet.getString("sors"));
                cell = row.createCell(6);
                cell.setCellValue(resultSet.getString("rationed"));
                cell = row.createCell(7);
                cell.setCellValue(resultSet.getString("auth"));
                cell = row.createCell(8);
                cell.setCellValue(resultSet.getString("distri"));
                cell = row.createCell(9);
                cell.setCellValue(resultSet.getString("purpose"));
                cell = row.createCell(10);
                cell.setCellValue(resultSet.getString("report"));
                cell = row.createCell(11);
                cell.setCellValue(resultSet.getString("case_file"));
                i++;
            }
            path_file paths=new path_file();
            FileOutputStream out = new FileOutputStream(new File(paths.csv + "\\" +"Mov_Order_temp.xlsx"));
            workbook.write(out);
            JOptionPane.showMessageDialog(null,"Mov_Order_Temp.xlsx written successfully");
            Desktop.getDesktop().open(new File(paths.csv + "/Mov_Order_temp.xlsx"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"Mov_Order_Temp.xlsx not created");
        }
    }//GEN-LAST:event_print_buttonBMouseClicked

    private void print_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseEntered
        print_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_print_buttonBMouseEntered

    private void print_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseExited
        print_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_print_buttonBMouseExited

    private void update_buttonCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonCMouseEntered
        update_buttonC.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_update_buttonCMouseEntered

    private void update_buttonCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonCMouseExited
        update_buttonC.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_update_buttonCMouseExited

    private void fullscreen_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonBMouseClicked
        fullscreen_panelB.setVisible(true);
        bg.setVisible(false);
    }//GEN-LAST:event_fullscreen_buttonBMouseClicked

    private void fullscreen_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonBMouseEntered
        fullscreen_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_fullscreen_buttonBMouseEntered

    private void fullscreen_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonBMouseExited
        fullscreen_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_fullscreen_buttonBMouseExited

    private void exit_fullscreen_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonBMouseClicked
        fullscreen_panelB.setVisible(false);
        bg.setVisible(true);
    }//GEN-LAST:event_exit_fullscreen_buttonBMouseClicked

    private void exit_fullscreen_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonBMouseEntered
        exit_fullscreen_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_exit_fullscreen_buttonBMouseEntered

    private void exit_fullscreen_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonBMouseExited
        exit_fullscreen_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_exit_fullscreen_buttonBMouseExited

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //for a centered frame
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        //for a centered frame
        
        menuA.setBackground(new java.awt.Color(85,65,118));
        menuB.setBackground(new java.awt.Color(64,43,100));
        
        print_buttonA.setVisible(true);
        insert_buttonA.setVisible(true);
        print_buttonB.setVisible(false);
        edit_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);
        
        ScrollPaneA.setVisible(true);
        panelB.setVisible(false);
        ScrollPaneC.setVisible(false);
        fullscreen_panelB.setVisible(false);
        
        viewall("null");
        
    }//GEN-LAST:event_formWindowOpened

    private void insert_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_buttonAMouseClicked
        // TODO add your handling code here:
        if(service_number_textfieldA.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Please Enter Army Number");
            nameA.setText("> XXXXXXX");
            rankA.setText("> XXXXXXX");
            tradeA.setText("> XXXXXXX");
            companyA.setText("> XXXXXXX");
            unitA.setText("> XXXXXXX");
            DOB_A.setText("> XXXXXXX");
            indl_mobA.setText("> XXXXXXX");
            NOK_mobA.setText("> XXXXXXX");
            ICard_mobA.setText("> XXXXXXX");
            service_number_textfieldA.setText("");
            photo_label.setIcon(null);
        }
        else{
        try {
            // TODO add your handling code here:
            String query1 = "select * from new_registration where service_no = '"+service_number_textfieldA.getText()+"' ;";
            ResultSet rs    = s.executeQuery(query1); // Retrieving last stored password in database
             // Retrieving last stored password in database
             int i = 0;
            if(rs.next() == false){
                i = 1;
            }
            if(i==1){
            query1 = "select * from attach_in where Service_no = '"+service_number_textfieldA.getText()+"' ;";
            ResultSet rs1    = s.executeQuery(query1);
            
                if(rs1.next() == false){
                i = 2;
            }
            }
            if(i==2){
                query1 = "select * from post_in where Service_no = '"+service_number_textfieldA.getText()+"' ;";
                ResultSet rs1    = s.executeQuery(query1);
                if(rs1.next() ==false){
                i=3;
                JOptionPane.showMessageDialog(rootPane, "Invalid Army Number");
                nameA.setText("> XXXXXXX");
                rankA.setText("> XXXXXXX");
                tradeA.setText("> XXXXXXX");
                companyA.setText("> XXXXXXX");
                unitA.setText("> XXXXXXX");
                DOB_A.setText("> XXXXXXX");
                indl_mobA.setText("> XXXXXXX");
                NOK_mobA.setText("> XXXXXXX");
                ICard_mobA.setText("> XXXXXXX");
                service_number_textfieldA.setText("");
                photo_label.setIcon(null);
                }
            }
            if(i!=3){
                String[] r = new String[9];
                if(i==1){
                    query1 = "select * from attach_in where Service_no = '"+service_number_textfieldA.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[2] = rs1.getString("trade");
                        r[3] = rs1.getString("company");
                        r[4] = rs1.getString("unit");
                        r[5] = rs1.getString("DOB");
                        r[6] = rs1.getString("Contact_no");
                        r[7] = rs1.getString("kin_contact");
                        r[8] = rs1.getString("indl_id");
                    }
                nameA.setText(r[0]);
                rankA.setText(r[1]);
                tradeA.setText(r[2]);
                companyA.setText(r[3]);
                unitA.setText(r[4]);
                DOB_A.setText(r[5]);
                indl_mobA.setText(r[6]);
                NOK_mobA.setText(r[7]);
                ICard_mobA.setText(r[8]);
                }
                if(i==2){
                    query1 = "select * from post_in where Service_no = '"+service_number_textfieldA.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[3] = rs1.getString("company");
                        r[2] = rs1.getString("DOB");
                        r[6] = rs1.getString("Contact_no");
                        r[7] = rs1.getString("kin_contact");
                        r[8] = rs1.getString("indl_id");
                    }
                nameA.setText(r[0]);
                rankA.setText(r[1]);
                tradeA.setText("> XXXXXXX");
                companyA.setText(r[3]);
                unitA.setText("> XXXXXXX");
                DOB_A.setText(r[2]);
                indl_mobA.setText(r[6]);
                NOK_mobA.setText(r[7]);
                ICard_mobA.setText(r[8]);
                }
                else if(i==0){
                query1 = "select * from new_registration where service_no = '"+service_number_textfieldA.getText()+"' ;";
                    rs    = s.executeQuery(query1);
                while(rs.next()){
                    r[0] = rs.getString("name");
                    r[1] = rs.getString("rank_");
                    r[2] = rs.getString("company");
                    r[3] = rs.getString("Birth_date");
                    r[6] = rs.getString("Indl_Contact_No");
                    r[7] = rs.getString("Kin_Contact_No");
                    r[8] = rs.getString("Indl_ICard_Number");
                }
                nameA.setText(r[0]);
                rankA.setText(r[1]);
                tradeA.setText("> XXXXXXX");
                companyA.setText(r[2]);
                unitA.setText("> XXXXXXX");
                DOB_A.setText(r[3]);
                indl_mobA.setText(r[6]);
                NOK_mobA.setText(r[7]);
                ICard_mobA.setText(r[8]);
                }
                scaleImage(service_number_textfieldA.getText()+".jpg");
                String year = (String)DOD_year_comboboxA.getSelectedItem();
                String month = (String)DOD_month_comboboxA.getSelectedItem();
                String date = (String)DOD_date_comboboxA.getSelectedItem();
                String dod = date+"-"+month+"-"+year;
                
                
                String year1 = (String)rationed_year_comboboxA.getSelectedItem();
                String month1 = (String)rationed_month_comboboxA.getSelectedItem();
                String date1 = (String)rationed_date_comboboxA.getSelectedItem();
                String rationed = date1+"-"+month1+"-"+year1;
                boolean cal = false;
                    boolean cal1 = false;
                    boolean da = year!= "YYYY" && year1!= "YYYY" && month!= "MM" && month1!= "MM" && date!= "DD" && date1!= "DD";
                    if(da){
                    int y = Integer.parseInt(year);
                    int m = Integer.parseInt(month);
                    int d = Integer.parseInt(date);
                    int y1 = Integer.parseInt(year1);
                    int m1 = Integer.parseInt(month1);
                    int d1 = Integer.parseInt(date1);
                    cal = !((y%4==0 && m==2 &&  (d>29)  )   || (  (m==2 || m==4 || m==6 || m==9 || m==11)  && d==31  )    ||  (m==2 && d>28 && y%4!=0));
                    cal1 = !((y1%4==0 && m1==2 &&  (d1>29)  )   || (  (m1==2 || m1==4 || m1==6 || m1==9 || m1==11)  && d1==31  )    ||  (m1==2 && d1>28 && y1%4!=0));
                    }
                    boolean all_check= (to_unit_textfieldA.getText()!=null && !to_unit_textfieldA.getText().trim().isEmpty())&& (FNAN_textfieldA.getText()!=null && !FNAN_textfieldA.getText().trim().isEmpty())&& (Offr_textfieldA.getText()!=null && !Offr_textfieldA.getText().trim().isEmpty())&&(SORS_textfieldA.getText()!=null && !SORS_textfieldA.getText().trim().isEmpty())&&(authority_textfieldA.getText()!=null && !authority_textfieldA.getText().trim().isEmpty())&&(purpose_textfieldA.getText()!=null && !purpose_textfieldA.getText().trim().isEmpty())&&(report_textfieldA.getText()!=null && !report_textfieldA.getText().trim().isEmpty()) &&(case_file_textfieldA.getText()!=null && !case_file_textfieldA.getText().trim().isEmpty());
                    
                    if(cal == true && cal1 == true && all_check == true){
                        String q = "insert into temp "+"values(?,?,?,?,?,?,?,?,?,?,?,?)";
                                java.sql.PreparedStatement st = c.prepareStatement(q);
                                st.setString(1,service_number_textfieldA.getText().trim());
                                st.setString(2,to_unit_textfieldA.getText().trim());
                                st.setString(3,dod);
                                st.setString(4,FNAN_textfieldA.getText().trim());
                                st.setString(5,Offr_textfieldA.getText().trim());
                                st.setString(6,SORS_textfieldA.getText().trim());
                                st.setString(7,rationed);
                                st.setString(8,authority_textfieldA.getText().trim());
                                st.setString(9, (String) distribution_comboboxA.getSelectedItem()); 
                                st.setString(10,purpose_textfieldA.getText().trim());
                                st.setString(11,report_textfieldA.getText().trim());
                                st.setString(12,case_file_textfieldA.getText().trim());
                                service_number_textfieldA.grabFocus();
                //ResultSet rs=st.executeQuery(); 
                                st.execute();
                                JOptionPane.showMessageDialog(null,"Data inserted successfully!");
                                nameA.setText("> XXXXXXX");
                                photo_label.setIcon(null);
                                rankA.setText("> XXXXXXX");
                                tradeA.setText("> XXXXXXX");
                                companyA.setText("> XXXXXXX");
                                unitA.setText("> XXXXXXX");
                                DOB_A.setText("> XXXXXXX");
                                indl_mobA.setText("> XXXXXXX");
                                NOK_mobA.setText("> XXXXXXX");
                                ICard_mobA.setText("> XXXXXXX");
                                service_number_textfieldA.setText("");
                                DOD_date_comboboxA.setSelectedItem("DD");
                                DOD_month_comboboxA.setSelectedItem("MM");
                                DOD_year_comboboxA.setSelectedItem("YYYY");
                                rationed_date_comboboxA.setSelectedItem("DD");
                                rationed_month_comboboxA.setSelectedItem("MM");
                                rationed_year_comboboxA.setSelectedItem("YYYY");
                                to_unit_textfieldA.setText("");
                                FNAN_textfieldA.setText("");
                                Offr_textfieldA.setText("");
                                SORS_textfieldA.setText("");
                                authority_textfieldA.setText("");
                                purpose_textfieldA.setText("");
                                report_textfieldA.setText("");
                                case_file_textfieldA.setText("");
                                distribution_comboboxA.setSelectedItem("Office Copy");
                    }
                    else{
                        if(cal == false || cal1 == false){
                            JOptionPane.showMessageDialog(null, "Invalid Date");
                        }
                        else if(all_check == false){
                            if((to_unit_textfieldA.getText()==null || to_unit_textfieldA.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for To Unit");
                                to_unit_textfieldA.grabFocus();
                            }
                            else if((FNAN_textfieldA.getText()==null || FNAN_textfieldA.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for FN/AN");
                                FNAN_textfieldA.grabFocus();
                            }
                            else if((Offr_textfieldA.getText()==null || Offr_textfieldA.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for Offr/ JCO/ OR");
                                Offr_textfieldA.grabFocus();
                            }
                            else if((SORS_textfieldA.getText()==null || SORS_textfieldA.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for SORS");
                                SORS_textfieldA.grabFocus();
                            }
                            else if((authority_textfieldA.getText()==null || authority_textfieldA.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for Authority for Mov");
                                authority_textfieldA.grabFocus();
                            }
                            else if((purpose_textfieldA.getText()==null || purpose_textfieldA.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for Purpose of duty");
                                purpose_textfieldA.grabFocus();
                            }
                            else if((report_textfieldA.getText()==null || report_textfieldA.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for Report To");
                                report_textfieldA.grabFocus();
                            }
                            else if((case_file_textfieldA.getText()==null || case_file_textfieldA.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for Case File Number");
                                case_file_textfieldA.grabFocus();
                            }
                        }
                   
                    }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Update_data.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_insert_buttonAMouseClicked

    private void update_buttonCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonCMouseClicked
        // TODO add your handling code here:
                String year = (String)DOD_year_comboboxA1.getSelectedItem();
                String month = (String)DOD_month_comboboxA1.getSelectedItem();
                String date = (String)DOD_date_comboboxA1.getSelectedItem();
                String dod = date+"-"+month+"-"+year;
                
                
                String year1 = (String)rationed_year_comboboxA1.getSelectedItem();
                String month1 = (String)rationed_month_comboboxA1.getSelectedItem();
                String date1 = (String)rationed_date_comboboxA1.getSelectedItem();
                String rationed = date1+"-"+month1+"-"+year1;
                boolean cal = false;
                    boolean cal1 = false;
                    boolean da = year!= "YYYY" && year1!= "YYYY" && month!= "MM" && month1!= "MM" && date!= "DD" && date1!= "DD";
                    if(da){
                    int y = Integer.parseInt(year);
                    int m = Integer.parseInt(month);
                    int d = Integer.parseInt(date);
                    int y1 = Integer.parseInt(year1);
                    int m1 = Integer.parseInt(month1);
                    int d1 = Integer.parseInt(date1);
                    cal = !((y%4==0 && m==2 &&  (d>29)  )   || (  (m==2 || m==4 || m==6 || m==9 || m==11)  && d==31  )    ||  (m==2 && d>28 && y%4!=0));
                    cal1 = !((y1%4==0 && m1==2 &&  (d1>29)  )   || (  (m1==2 || m1==4 || m1==6 || m1==9 || m1==11)  && d1==31  )    ||  (m1==2 && d1>28 && y1%4!=0));
                    }
                    boolean all_check= (to_unit_textfieldA1.getText()!=null && !to_unit_textfieldA1.getText().trim().isEmpty())&& (FNAN_textfieldA1.getText()!=null && !FNAN_textfieldA1.getText().trim().isEmpty())&& (Offr_textfieldA1.getText()!=null && !Offr_textfieldA1.getText().trim().isEmpty())&&(SORS_textfieldA1.getText()!=null && !SORS_textfieldA1.getText().trim().isEmpty())&&(authority_textfieldA1.getText()!=null && !authority_textfieldA1.getText().trim().isEmpty())&&(purpose_textfieldA1.getText()!=null && !purpose_textfieldA1.getText().trim().isEmpty())&&(report_textfieldA1.getText()!=null && !report_textfieldA1.getText().trim().isEmpty()) &&(case_file_textfieldA1.getText()!=null && !case_file_textfieldA1.getText().trim().isEmpty());
                    
                    if(cal == true && cal1 == true && all_check == true){
            try {
                String q = "update temp set unit_to = ? , dep_date = ? , fnan = ? , offr = ? , sors = ? , rationed = ? , auth = ? , distri = ? , purpose = ? , report = ? , case_file = ? where  army_no = ? and dep_date = ?";
                java.sql.PreparedStatement st = c.prepareStatement(q);
                st.setString(1,to_unit_textfieldA1.getText().trim());
                st.setString(2,dod);
                st.setString(3,FNAN_textfieldA1.getText().trim());
                st.setString(4,Offr_textfieldA1.getText().trim());
                st.setString(5,SORS_textfieldA1.getText().trim());
                st.setString(6,rationed);
                st.setString(7,authority_textfieldA1.getText().trim());
                st.setString(8, (String) distribution_comboboxA2.getSelectedItem());
                st.setString(9,purpose_textfieldA1.getText().trim());
                st.setString(10,report_textfieldA1.getText().trim());
                st.setString(11,case_file_textfieldA1.getText().trim());
                st.setString(12,(String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1));
                st.setString(13,(String) TableG_out.getValueAt(TableG_out.getSelectedRow(),3));
                //ResultSet rs=st.executeQuery();
                st.execute();
                JOptionPane.showMessageDialog(null,"Data updated successfully!");
                nameC.setText("> XXXXXXX");
                rankC.setText("> XXXXXXX");
                army_numberC.setText("> XXXXXXX");
                DOD_date_comboboxA1.setSelectedItem("DD");
                DOD_month_comboboxA1.setSelectedItem("MM");
                DOD_year_comboboxA1.setSelectedItem("YYYY");
                rationed_date_comboboxA1.setSelectedItem("DD");
                rationed_month_comboboxA1.setSelectedItem("MM");
                rationed_year_comboboxA1.setSelectedItem("YYYY");
                to_unit_textfieldA1.setText("");
                FNAN_textfieldA1.setText("");
                Offr_textfieldA1.setText("");
                SORS_textfieldA1.setText("");
                authority_textfieldA1.setText("");
                purpose_textfieldA1.setText("");
                report_textfieldA1.setText("");
                case_file_textfieldA1.setText("");
                distribution_comboboxA2.setSelectedItem("Office Copy");
                menuB.setBackground(new java.awt.Color(85,65,118));
        menuA.setBackground(new java.awt.Color(64,43,100));

        print_buttonA.setVisible(false);
        insert_buttonA.setVisible(false);
        print_buttonB.setVisible(true);
        edit_buttonB.setVisible(true);
        refresh_buttonB.setVisible(true);
        fullscreen_buttonB.setVisible(true);
        update_buttonC.setVisible(false);

        ScrollPaneA.setVisible(false);
        panelB.setVisible(true);
        ScrollPaneC.setVisible(false);
        fullscreen_panelB.setVisible(false);
        
        viewall("null");
            } catch (SQLException ex) {
                Logger.getLogger(Mov_Order_Temp.class.getName()).log(Level.SEVERE, null, ex);
            }
                    }
                    else{
                        if(cal == false || cal1 == false){
                            JOptionPane.showMessageDialog(null, "Invalid Date");
                        }
                        else if(all_check == false){
                            if((to_unit_textfieldA1.getText()==null || to_unit_textfieldA1.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for To Unit");
                                to_unit_textfieldA1.grabFocus();
                            }
                            else if((FNAN_textfieldA1.getText()==null || FNAN_textfieldA1.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for FN/AN");
                                FNAN_textfieldA1.grabFocus();
                            }
                            else if((Offr_textfieldA1.getText()==null || Offr_textfieldA1.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for Offr/ JCO/ OR");
                                Offr_textfieldA1.grabFocus();
                            }
                            else if((SORS_textfieldA1.getText()==null || SORS_textfieldA1.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for SORS");
                                SORS_textfieldA1.grabFocus();
                            }
                            else if((authority_textfieldA1.getText()==null || authority_textfieldA1.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for Authority for Mov");
                                authority_textfieldA1.grabFocus();
                            }
                            else if((purpose_textfieldA1.getText()==null || purpose_textfieldA1.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for Purpose of duty");
                                purpose_textfieldA1.grabFocus();
                            }
                            else if((report_textfieldA1.getText()==null || report_textfieldA1.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for Report To");
                                report_textfieldA1.grabFocus();
                            }
                            else if((case_file_textfieldA1.getText()==null || case_file_textfieldA1.getText().trim().isEmpty())){
                                JOptionPane.showMessageDialog(null, "Please Enter some value for Case File Number");
                                case_file_textfieldA1.grabFocus();
                            }
                        }
                   
                    }
    }//GEN-LAST:event_update_buttonCMouseClicked

    private void service_number_textfieldAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_service_number_textfieldAKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            okayAMouseClicked(null);
        }
    }//GEN-LAST:event_service_number_textfieldAKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mov_Order_Temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mov_Order_Temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mov_Order_Temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mov_Order_Temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mov_Order_Temp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CO_mobA;
    private javax.swing.JLabel CO_mob_labelA;
    private javax.swing.JLabel DOB_A;
    private javax.swing.JLabel DOB_labelA;
    private javax.swing.JComboBox<String> DOD_date_comboboxA;
    private javax.swing.JComboBox<String> DOD_date_comboboxA1;
    private javax.swing.JLabel DOD_labelA;
    private javax.swing.JLabel DOD_labelA1;
    private javax.swing.JComboBox<String> DOD_month_comboboxA;
    private javax.swing.JComboBox<String> DOD_month_comboboxA1;
    private javax.swing.JComboBox<String> DOD_year_comboboxA;
    private javax.swing.JComboBox<String> DOD_year_comboboxA1;
    private javax.swing.JLabel DOE_labelA;
    private javax.swing.JLabel DOE_labelA2;
    private javax.swing.JLabel FNAN_labelA;
    private javax.swing.JLabel FNAN_labelA1;
    private javax.swing.JTextField FNAN_textfieldA;
    private javax.swing.JTextField FNAN_textfieldA1;
    private javax.swing.JSeparator FNAN_underlineA;
    private javax.swing.JSeparator FNAN_underlineA1;
    private javax.swing.JLabel ICard_labelA;
    private javax.swing.JLabel ICard_mobA;
    private javax.swing.JLabel NOK_mobA;
    private javax.swing.JLabel NOK_mob_labelA;
    private javax.swing.JLabel Offr_labelA;
    private javax.swing.JLabel Offr_labelA1;
    private javax.swing.JTextField Offr_textfieldA;
    private javax.swing.JTextField Offr_textfieldA1;
    private javax.swing.JSeparator Offr_underlineA;
    private javax.swing.JSeparator Offr_underlineA1;
    private javax.swing.JPanel Photo_individual;
    private javax.swing.JLabel SORS_labelA;
    private javax.swing.JLabel SORS_labelA1;
    private javax.swing.JTextField SORS_textfieldA;
    private javax.swing.JTextField SORS_textfieldA1;
    private javax.swing.JSeparator SORS_underlineA;
    private javax.swing.JSeparator SORS_underlineA1;
    private javax.swing.JScrollPane ScrollPaneA;
    private javax.swing.JScrollPane ScrollPaneB;
    private javax.swing.JScrollPane ScrollPaneC;
    private javax.swing.JSeparator Separator;
    private javax.swing.JTable TableG_out;
    private javax.swing.JLabel adjt_labelA;
    private javax.swing.JLabel adjt_mobA;
    private javax.swing.JLabel army_numberC;
    private javax.swing.JLabel authority_labelA;
    private javax.swing.JLabel authority_labelA1;
    private javax.swing.JTextField authority_textfieldA;
    private javax.swing.JTextField authority_textfieldA1;
    private javax.swing.JSeparator authority_underlineA;
    private javax.swing.JSeparator authority_underlineA1;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel case_file_labelA;
    private javax.swing.JLabel case_file_labelA1;
    private javax.swing.JTextField case_file_textfieldA;
    private javax.swing.JTextField case_file_textfieldA1;
    private javax.swing.JSeparator case_file_underlineA;
    private javax.swing.JSeparator case_file_underlineA1;
    private javax.swing.JLabel changing_for_label;
    private javax.swing.JLabel companyA;
    private javax.swing.JLabel company_labelA;
    private javax.swing.JLabel contact_labelA;
    private javax.swing.JComboBox<String> distribution_comboboxA;
    private javax.swing.JComboBox<String> distribution_comboboxA2;
    private javax.swing.JPanel edit_buttonB;
    private javax.swing.JLabel edit_labelB;
    private javax.swing.JPanel exit_fullscreen_buttonB;
    private javax.swing.JLabel exit_fullscreen_labelB;
    private javax.swing.JLabel exit_icon;
    private javax.swing.JScrollPane fullscreen_ScrollPaneB;
    private javax.swing.JPanel fullscreen_buttonB;
    private javax.swing.JLabel fullscreen_labelB;
    private javax.swing.JPanel fullscreen_panelB;
    private javax.swing.JTable fullscreen_tableB;
    private javax.swing.JLabel go_back_label;
    private javax.swing.JLabel indl_mobA;
    private javax.swing.JLabel indl_mob_labelA;
    private javax.swing.JPanel insert_buttonA;
    private javax.swing.JLabel insert_label;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel menuA;
    private javax.swing.JLabel menuA_icon;
    private javax.swing.JLabel menuA_label;
    private javax.swing.JPanel menuB;
    private javax.swing.JLabel menuB_icon;
    private javax.swing.JLabel menuB_label;
    private javax.swing.JSeparator midA1;
    private javax.swing.JSeparator midC0;
    private javax.swing.JSeparator midC4;
    private javax.swing.JLabel minimize;
    private javax.swing.JPanel move_panel;
    private javax.swing.JLabel nameA;
    private javax.swing.JLabel nameC;
    private javax.swing.JLabel name_labelA;
    private javax.swing.JLabel name_labelC;
    private javax.swing.JLabel okayA;
    private javax.swing.JLabel okayB;
    private javax.swing.JPanel panelA;
    private javax.swing.JPanel panelB;
    private javax.swing.JPanel panelC;
    private javax.swing.JSeparator panelC_bottom_line1;
    private javax.swing.JSeparator panelC_bottom_line2;
    private javax.swing.JLabel photo_label;
    private javax.swing.JPanel print_buttonA;
    private javax.swing.JPanel print_buttonB;
    private javax.swing.JLabel print_label;
    private javax.swing.JLabel print_labelB;
    private javax.swing.JLabel purpose_labelA;
    private javax.swing.JLabel purpose_labelA1;
    private javax.swing.JTextField purpose_textfieldA;
    private javax.swing.JTextField purpose_textfieldA1;
    private javax.swing.JSeparator purpose_underlineA;
    private javax.swing.JSeparator purpose_underlineA1;
    private javax.swing.JLabel rankA;
    private javax.swing.JLabel rankC;
    private javax.swing.JLabel rank_labelA;
    private javax.swing.JLabel rank_labelC;
    private javax.swing.JComboBox<String> rationed_date_comboboxA;
    private javax.swing.JComboBox<String> rationed_date_comboboxA1;
    private javax.swing.JLabel rationed_labelA;
    private javax.swing.JLabel rationed_labelA1;
    private javax.swing.JComboBox<String> rationed_month_comboboxA;
    private javax.swing.JComboBox<String> rationed_month_comboboxA1;
    private javax.swing.JComboBox<String> rationed_year_comboboxA;
    private javax.swing.JComboBox<String> rationed_year_comboboxA1;
    private javax.swing.JPanel refresh_buttonB;
    private javax.swing.JLabel refresh_labelB;
    private javax.swing.JLabel report_labelA;
    private javax.swing.JLabel report_labelA1;
    private javax.swing.JTextField report_textfieldA;
    private javax.swing.JTextField report_textfieldA1;
    private javax.swing.JSeparator report_underlineA;
    private javax.swing.JSeparator report_underlineA1;
    private javax.swing.JTextField service_numberB;
    private javax.swing.JLabel service_number_labelA;
    private javax.swing.JLabel service_number_labelB;
    private javax.swing.JLabel service_number_labelC;
    private javax.swing.JTextField service_number_textfieldA;
    private javax.swing.JSeparator service_number_underlineA;
    private javax.swing.JPanel side_pane;
    private javax.swing.JSeparator textfield_underline;
    private javax.swing.JLabel title_icon;
    private javax.swing.JLabel title_label;
    private javax.swing.JLabel title_label1;
    private javax.swing.JLabel to_unit_labelA;
    private javax.swing.JLabel to_unit_labelA1;
    private javax.swing.JTextField to_unit_textfieldA;
    private javax.swing.JTextField to_unit_textfieldA1;
    private javax.swing.JSeparator to_unit_underlineA;
    private javax.swing.JSeparator to_unit_underlineA1;
    private javax.swing.JLabel tradeA;
    private javax.swing.JLabel trade_labelA;
    private javax.swing.JLabel unitA;
    private javax.swing.JLabel unit_labelA;
    private javax.swing.JPanel update_buttonC;
    private javax.swing.JLabel update_labelC;
    // End of variables declaration//GEN-END:variables
}
