
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Toolkit;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author chise
 */
public class Punishment extends javax.swing.JFrame {

    /**
     * Creates new form Punishment
     */
    Database db = new Database();
    Connection c = db.create_connection(true);
    Statement s;
    private int mouseX, mouseY;
    boolean flag = true;
    DefaultTableModel model_fullscreen, model_table;
    public Punishment() {
        initComponents();
        
        ScrollPaneA.getVerticalScrollBar().setUnitIncrement(16);
        ScrollPaneB.getVerticalScrollBar().setUnitIncrement(16);
        ScrollPaneC.getVerticalScrollBar().setUnitIncrement(16);
        fullscreen_ScrollPaneB.getVerticalScrollBar().setUnitIncrement(16);
        
        
        print_buttonA.setVisible(true);
        insert_buttonA.setVisible(true);
        print_buttonB.setVisible(false);
        edit_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);
        
        model_fullscreen=(DefaultTableModel) fullscreen_tableB.getModel();
        model_table=(DefaultTableModel) TableG_out.getModel();
         try {
            s = c.createStatement();
        } catch (Exception ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        move_panel = new javax.swing.JPanel();
        bg = new javax.swing.JPanel();
        exit_icon = new javax.swing.JLabel();
        minimize_icon = new javax.swing.JLabel();
        Separator = new javax.swing.JSeparator();
        side_pane = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        go_back_label = new javax.swing.JLabel();
        title_label = new javax.swing.JLabel();
        title_icon = new javax.swing.JLabel();
        menuA = new javax.swing.JPanel();
        menuA_icon = new javax.swing.JLabel();
        menuA_label = new javax.swing.JLabel();
        menuB = new javax.swing.JPanel();
        menuB_icon = new javax.swing.JLabel();
        menuB_label = new javax.swing.JLabel();
        ScrollPaneA = new javax.swing.JScrollPane();
        panelA = new javax.swing.JPanel();
        service_number_underline = new javax.swing.JSeparator();
        service_number_textfield = new javax.swing.JTextField();
        service_number_label = new javax.swing.JLabel();
        panelA_bottom_line = new javax.swing.JSeparator();
        okay = new javax.swing.JLabel();
        name_label = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        rank_label = new javax.swing.JLabel();
        rank = new javax.swing.JLabel();
        company_label = new javax.swing.JLabel();
        company = new javax.swing.JLabel();
        trade_label = new javax.swing.JLabel();
        trade = new javax.swing.JLabel();
        unit_label = new javax.swing.JLabel();
        unit = new javax.swing.JLabel();
        AA_label = new javax.swing.JLabel();
        midA1 = new javax.swing.JSeparator();
        by_label = new javax.swing.JLabel();
        by_textfield = new javax.swing.JTextField();
        by_underline = new javax.swing.JSeparator();
        punishment_label = new javax.swing.JLabel();
        punishment_textfield = new javax.swing.JTextField();
        punishment_underline = new javax.swing.JSeparator();
        AA_textfield = new javax.swing.JTextField();
        AA_underline = new javax.swing.JSeparator();
        date_labelA = new javax.swing.JLabel();
        date_comboboxA = new javax.swing.JComboBox<>();
        month_comboboxA = new javax.swing.JComboBox<>();
        year_comboboxA = new javax.swing.JComboBox<>();
        current_dateA = new javax.swing.JLabel();
        panelB = new javax.swing.JPanel();
        ScrollPaneB = new javax.swing.JScrollPane();
        TableG_out = new javax.swing.JTable();
        service_number_labelB = new javax.swing.JLabel();
        service_numberB = new javax.swing.JTextField();
        textfield_underline = new javax.swing.JSeparator();
        okayB = new javax.swing.JLabel();
        ScrollPaneC = new javax.swing.JScrollPane();
        panelC = new javax.swing.JPanel();
        service_number_labelC = new javax.swing.JLabel();
        name_labelC = new javax.swing.JLabel();
        army_numberC = new javax.swing.JLabel();
        rank_labelC = new javax.swing.JLabel();
        rankC = new javax.swing.JLabel();
        nameC = new javax.swing.JLabel();
        midC4 = new javax.swing.JSeparator();
        changing_for_label = new javax.swing.JLabel();
        panelA_bottom_line1 = new javax.swing.JSeparator();
        AA_label1 = new javax.swing.JLabel();
        midA2 = new javax.swing.JSeparator();
        by_label1 = new javax.swing.JLabel();
        by_textfield1 = new javax.swing.JTextField();
        by_underline1 = new javax.swing.JSeparator();
        punishment_label1 = new javax.swing.JLabel();
        punishment_textfield1 = new javax.swing.JTextField();
        punishment_underline1 = new javax.swing.JSeparator();
        AA_textfield1 = new javax.swing.JTextField();
        AA_underline1 = new javax.swing.JSeparator();
        date_labelA1 = new javax.swing.JLabel();
        date_comboboxA1 = new javax.swing.JComboBox<>();
        month_comboboxA1 = new javax.swing.JComboBox<>();
        year_comboboxA1 = new javax.swing.JComboBox<>();
        print_buttonA = new javax.swing.JPanel();
        print_label = new javax.swing.JLabel();
        insert_buttonA = new javax.swing.JPanel();
        insert_label = new javax.swing.JLabel();
        edit_buttonB = new javax.swing.JPanel();
        edit_labelB = new javax.swing.JLabel();
        refresh_buttonB = new javax.swing.JPanel();
        refresh_labelB = new javax.swing.JLabel();
        print_buttonB = new javax.swing.JPanel();
        print_labelB = new javax.swing.JLabel();
        update_buttonC = new javax.swing.JPanel();
        update_labelC = new javax.swing.JLabel();
        fullscreen_buttonB = new javax.swing.JPanel();
        fullscreen_labelB = new javax.swing.JLabel();
        fullscreen_panelB = new javax.swing.JPanel();
        fullscreen_ScrollPaneB = new javax.swing.JScrollPane();
        fullscreen_tableB = new javax.swing.JTable();
        exit_fullscreen_buttonB = new javax.swing.JPanel();
        exit_fullscreen_labelB = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1280, 720));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        move_panel.setFocusable(false);
        move_panel.setOpaque(false);
        move_panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                move_panelMouseDragged(evt);
            }
        });
        move_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                move_panelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout move_panelLayout = new javax.swing.GroupLayout(move_panel);
        move_panel.setLayout(move_panelLayout);
        move_panelLayout.setHorizontalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        move_panelLayout.setVerticalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(move_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setPreferredSize(new java.awt.Dimension(93, 93));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exit_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/remove_purple.png"))); // NOI18N
        exit_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_iconMouseClicked(evt);
            }
        });
        bg.add(exit_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1215, 30, -1, -1));

        minimize_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/minimize-purple.png"))); // NOI18N
        minimize_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimize_iconMouseClicked(evt);
            }
        });
        bg.add(minimize_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 30, -1, 40));

        Separator.setForeground(new java.awt.Color(54, 33, 89));
        Separator.setPreferredSize(new java.awt.Dimension(50, 20));
        bg.add(Separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 890, 10));

        side_pane.setBackground(new java.awt.Color(54, 33, 89));
        side_pane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        side_pane.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 280, 50));

        go_back_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/left-arrow.png"))); // NOI18N
        go_back_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                go_back_labelMouseClicked(evt);
            }
        });
        side_pane.add(go_back_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        title_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        title_label.setForeground(new java.awt.Color(255, 255, 255));
        title_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_label.setText("Punishment");
        side_pane.add(title_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 135, 180, 40));

        title_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/punishment_white.png"))); // NOI18N
        side_pane.add(title_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 50, 80));

        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAMouseClicked(evt);
            }
        });

        menuA_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuA_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuA_icon.setText("A");

        menuA_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuA_label.setForeground(new java.awt.Color(255, 255, 255));
        menuA_label.setText("Create Record");

        javax.swing.GroupLayout menuALayout = new javax.swing.GroupLayout(menuA);
        menuA.setLayout(menuALayout);
        menuALayout.setHorizontalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuA_icon)
                .addGap(33, 33, 33)
                .addComponent(menuA_label)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        menuALayout.setVerticalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuA_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuA_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 330, 60));

        menuB.setBackground(new java.awt.Color(85, 65, 118));
        menuB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBMouseClicked(evt);
            }
        });

        menuB_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuB_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuB_icon.setText("B");

        menuB_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuB_label.setForeground(new java.awt.Color(255, 255, 255));
        menuB_label.setText("View by Army Number");

        javax.swing.GroupLayout menuBLayout = new javax.swing.GroupLayout(menuB);
        menuB.setLayout(menuBLayout);
        menuBLayout.setHorizontalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuB_icon)
                .addGap(33, 33, 33)
                .addComponent(menuB_label)
                .addContainerGap(65, Short.MAX_VALUE))
        );
        menuBLayout.setVerticalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuB_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuB_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 330, 60));

        bg.add(side_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 740));

        ScrollPaneA.setBorder(null);
        ScrollPaneA.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelA.setBackground(new java.awt.Color(255, 255, 255));
        panelA.setFocusable(false);
        panelA.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        service_number_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(service_number_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 400, 20));

        service_number_textfield.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        service_number_textfield.setForeground(new java.awt.Color(54, 33, 89));
        service_number_textfield.setBorder(null);
        service_number_textfield.setMargin(new java.awt.Insets(2, 4, 2, 2));
        service_number_textfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                service_number_textfieldKeyPressed(evt);
            }
        });
        panelA.add(service_number_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 400, 40));

        service_number_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        service_number_label.setForeground(new java.awt.Color(51, 51, 51));
        service_number_label.setText("Army Number");
        panelA.add(service_number_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 40));

        panelA_bottom_line.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(panelA_bottom_line, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 700, 910, -1));

        okay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/check-mark.png"))); // NOI18N
        okay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okayMouseClicked(evt);
            }
        });
        panelA.add(okay, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, -1, 40));

        name_label.setBackground(new java.awt.Color(255, 255, 255));
        name_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        name_label.setForeground(new java.awt.Color(51, 51, 51));
        name_label.setText("Name");
        panelA.add(name_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, 40));

        name.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        name.setForeground(new java.awt.Color(54, 33, 89));
        name.setText("> XXXXXXX");
        panelA.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, -1, 30));

        rank_label.setBackground(new java.awt.Color(255, 255, 255));
        rank_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        rank_label.setForeground(new java.awt.Color(51, 51, 51));
        rank_label.setText("Rank");
        panelA.add(rank_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, -1, 40));

        rank.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        rank.setForeground(new java.awt.Color(54, 33, 89));
        rank.setText("> XXXXXXX");
        panelA.add(rank, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, -1, 30));

        company_label.setBackground(new java.awt.Color(255, 255, 255));
        company_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        company_label.setForeground(new java.awt.Color(51, 51, 51));
        company_label.setText("Company");
        panelA.add(company_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, -1, 40));

        company.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        company.setForeground(new java.awt.Color(54, 33, 89));
        company.setText("> XXXXXXX");
        panelA.add(company, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, -1, 30));

        trade_label.setBackground(new java.awt.Color(255, 255, 255));
        trade_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        trade_label.setForeground(new java.awt.Color(51, 51, 51));
        trade_label.setText("Trade");
        panelA.add(trade_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 170, -1, 40));

        trade.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        trade.setForeground(new java.awt.Color(54, 33, 89));
        trade.setText("> XXXXXXX");
        panelA.add(trade, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 210, -1, 30));

        unit_label.setBackground(new java.awt.Color(255, 255, 255));
        unit_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        unit_label.setForeground(new java.awt.Color(51, 51, 51));
        unit_label.setText("Unit");
        panelA.add(unit_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, -1, 40));

        unit.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        unit.setForeground(new java.awt.Color(54, 33, 89));
        unit.setText("> XXXXXXX");
        panelA.add(unit, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 300, -1, 30));

        AA_label.setBackground(new java.awt.Color(255, 255, 255));
        AA_label.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        AA_label.setForeground(new java.awt.Color(66, 50, 77));
        AA_label.setText("AA Sec");
        panelA.add(AA_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 420, -1, 40));

        midA1.setForeground(new java.awt.Color(204, 204, 255));
        panelA.add(midA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 385, 570, 10));

        by_label.setBackground(new java.awt.Color(255, 255, 255));
        by_label.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        by_label.setForeground(new java.awt.Color(66, 50, 77));
        by_label.setText("Awarded By");
        panelA.add(by_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 530, -1, 40));

        by_textfield.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        by_textfield.setForeground(new java.awt.Color(54, 33, 89));
        by_textfield.setBorder(null);
        by_textfield.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(by_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 570, 210, 40));

        by_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(by_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 610, 210, 20));

        punishment_label.setBackground(new java.awt.Color(255, 255, 255));
        punishment_label.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        punishment_label.setForeground(new java.awt.Color(66, 50, 77));
        punishment_label.setText("Punishment Awarded");
        panelA.add(punishment_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, -1, 40));

        punishment_textfield.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        punishment_textfield.setForeground(new java.awt.Color(54, 33, 89));
        punishment_textfield.setBorder(null);
        punishment_textfield.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(punishment_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 460, 440, 40));

        punishment_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(punishment_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 500, 440, 20));

        AA_textfield.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        AA_textfield.setForeground(new java.awt.Color(54, 33, 89));
        AA_textfield.setBorder(null);
        AA_textfield.setMargin(new java.awt.Insets(2, 4, 2, 2));
        AA_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AA_textfieldActionPerformed(evt);
            }
        });
        panelA.add(AA_textfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 460, 210, 40));

        AA_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(AA_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 500, 210, 20));

        date_labelA.setBackground(new java.awt.Color(255, 255, 255));
        date_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        date_labelA.setForeground(new java.awt.Color(51, 51, 51));
        date_labelA.setText("Date");
        panelA.add(date_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 530, -1, 40));

        date_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        date_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        date_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        date_comboboxA.setBorder(null);
        panelA.add(date_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 570, 100, 40));

        month_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        month_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        month_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        month_comboboxA.setBorder(null);
        panelA.add(month_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(465, 570, 100, 40));

        year_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        year_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        year_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        year_comboboxA.setBorder(null);
        panelA.add(year_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 570, 100, 40));

        current_dateA.setBackground(new java.awt.Color(255, 255, 255));
        current_dateA.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        current_dateA.setForeground(new java.awt.Color(60, 63, 65));
        current_dateA.setText("Get Current Date");
        current_dateA.setOpaque(true);
        current_dateA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                current_dateAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                current_dateAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                current_dateAMouseExited(evt);
            }
        });
        panelA.add(current_dateA, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 620, -1, -1));

        ScrollPaneA.setViewportView(panelA);

        bg.add(ScrollPaneA, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 480));

        panelB.setBackground(new java.awt.Color(255, 255, 255));
        panelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ScrollPaneB.setBackground(new java.awt.Color(255, 255, 255));
        ScrollPaneB.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        TableG_out.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        TableG_out.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "Service Number", "Date", "AA Sec", "Punishment", "Awarded By"
            }
        ));
        TableG_out.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        TableG_out.setFocusable(false);
        TableG_out.setGridColor(new java.awt.Color(255, 255, 255));
        TableG_out.setMaximumSize(null);
        TableG_out.setRowHeight(30);
        TableG_out.setSelectionBackground(new java.awt.Color(54, 33, 89));
        TableG_out.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ScrollPaneB.setViewportView(TableG_out);
        if (TableG_out.getColumnModel().getColumnCount() > 0) {
            TableG_out.getColumnModel().getColumn(0).setMinWidth(50);
            TableG_out.getColumnModel().getColumn(0).setPreferredWidth(50);
            TableG_out.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        panelB.add(ScrollPaneB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 780, 300));

        service_number_labelB.setBackground(new java.awt.Color(255, 255, 255));
        service_number_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        service_number_labelB.setForeground(new java.awt.Color(51, 51, 51));
        service_number_labelB.setText("Army Number");
        panelB.add(service_number_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 40));

        service_numberB.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        service_numberB.setForeground(new java.awt.Color(54, 33, 89));
        service_numberB.setBorder(null);
        service_numberB.setMargin(new java.awt.Insets(2, 4, 2, 2));
        service_numberB.setSelectionColor(new java.awt.Color(204, 204, 255));
        service_numberB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                service_numberBKeyPressed(evt);
            }
        });
        panelB.add(service_numberB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 400, 40));

        textfield_underline.setForeground(new java.awt.Color(54, 33, 89));
        panelB.add(textfield_underline, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 400, 10));

        okayB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/check-mark.png"))); // NOI18N
        okayB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okayBMouseClicked(evt);
            }
        });
        panelB.add(okayB, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, -1, 40));

        bg.add(panelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 480));

        ScrollPaneC.setBorder(null);
        ScrollPaneC.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ScrollPaneC.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        panelC.setBackground(new java.awt.Color(255, 255, 255));
        panelC.setFocusable(false);
        panelC.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        service_number_labelC.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        service_number_labelC.setForeground(new java.awt.Color(51, 51, 51));
        service_number_labelC.setText("Army Number");
        panelC.add(service_number_labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, -1, 40));

        name_labelC.setBackground(new java.awt.Color(255, 255, 255));
        name_labelC.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        name_labelC.setForeground(new java.awt.Color(51, 51, 51));
        name_labelC.setText("Name");
        panelC.add(name_labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, -1, 40));

        army_numberC.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        army_numberC.setForeground(new java.awt.Color(54, 33, 89));
        army_numberC.setText("> XXXXXXX");
        panelC.add(army_numberC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, 40));

        rank_labelC.setBackground(new java.awt.Color(255, 255, 255));
        rank_labelC.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        rank_labelC.setForeground(new java.awt.Color(51, 51, 51));
        rank_labelC.setText("Rank");
        panelC.add(rank_labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, -1, 40));

        rankC.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        rankC.setForeground(new java.awt.Color(54, 33, 89));
        rankC.setText("> XXXXXXX");
        panelC.add(rankC, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 100, -1, 40));

        nameC.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        nameC.setForeground(new java.awt.Color(54, 33, 89));
        nameC.setText("> XXXXXXX");
        panelC.add(nameC, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, -1, 40));

        midC4.setForeground(new java.awt.Color(204, 204, 255));
        midC4.setOrientation(javax.swing.SwingConstants.VERTICAL);
        panelC.add(midC4, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 85, 20, 40));

        changing_for_label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        changing_for_label.setText("Changing For");
        panelC.add(changing_for_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 20));

        panelA_bottom_line1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(panelA_bottom_line1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 600, 910, -1));

        AA_label1.setBackground(new java.awt.Color(255, 255, 255));
        AA_label1.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        AA_label1.setForeground(new java.awt.Color(66, 50, 77));
        AA_label1.setText("AA Sec");
        panelC.add(AA_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, 40));

        midA2.setForeground(new java.awt.Color(204, 204, 255));
        panelC.add(midA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 570, 10));

        by_label1.setBackground(new java.awt.Color(255, 255, 255));
        by_label1.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        by_label1.setForeground(new java.awt.Color(66, 50, 77));
        by_label1.setText("Awarded By");
        panelC.add(by_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, -1, 40));

        by_textfield1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        by_textfield1.setForeground(new java.awt.Color(54, 33, 89));
        by_textfield1.setBorder(null);
        by_textfield1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(by_textfield1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 270, 210, 40));

        by_underline1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(by_underline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, 210, 20));

        punishment_label1.setBackground(new java.awt.Color(255, 255, 255));
        punishment_label1.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        punishment_label1.setForeground(new java.awt.Color(66, 50, 77));
        punishment_label1.setText("Punishment Awarded");
        panelC.add(punishment_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, -1, 40));

        punishment_textfield1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        punishment_textfield1.setForeground(new java.awt.Color(54, 33, 89));
        punishment_textfield1.setBorder(null);
        punishment_textfield1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelC.add(punishment_textfield1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, 680, 40));

        punishment_underline1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(punishment_underline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 420, 680, 20));

        AA_textfield1.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        AA_textfield1.setForeground(new java.awt.Color(54, 33, 89));
        AA_textfield1.setBorder(null);
        AA_textfield1.setMargin(new java.awt.Insets(2, 4, 2, 2));
        AA_textfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AA_textfield1ActionPerformed(evt);
            }
        });
        panelC.add(AA_textfield1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 210, 40));

        AA_underline1.setForeground(new java.awt.Color(54, 33, 89));
        panelC.add(AA_underline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 210, 20));

        date_labelA1.setBackground(new java.awt.Color(255, 255, 255));
        date_labelA1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        date_labelA1.setForeground(new java.awt.Color(51, 51, 51));
        date_labelA1.setText("Date");
        panelC.add(date_labelA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 450, -1, 40));

        date_comboboxA1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        date_comboboxA1.setForeground(new java.awt.Color(44, 62, 80));
        date_comboboxA1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        date_comboboxA1.setBorder(null);
        panelC.add(date_comboboxA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 490, 100, 40));

        month_comboboxA1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        month_comboboxA1.setForeground(new java.awt.Color(44, 62, 80));
        month_comboboxA1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        month_comboboxA1.setBorder(null);
        panelC.add(month_comboboxA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 490, 100, 40));

        year_comboboxA1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        year_comboboxA1.setForeground(new java.awt.Color(44, 62, 80));
        year_comboboxA1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        year_comboboxA1.setBorder(null);
        panelC.add(year_comboboxA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 490, 100, 40));

        ScrollPaneC.setViewportView(panelC);

        bg.add(ScrollPaneC, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 480));

        print_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        print_buttonA.setMaximumSize(new java.awt.Dimension(95, 25));
        print_buttonA.setMinimumSize(new java.awt.Dimension(95, 25));
        print_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                print_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                print_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                print_buttonAMouseExited(evt);
            }
        });
        print_buttonA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        print_label.setBackground(new java.awt.Color(54, 33, 89));
        print_label.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        print_label.setForeground(new java.awt.Color(54, 33, 89));
        print_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print_label.setText("PRINT");
        print_label.setFocusable(false);
        print_label.setRequestFocusEnabled(false);
        print_label.setVerifyInputWhenFocusTarget(false);
        print_buttonA.add(print_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 0, 71, 50));

        bg.add(print_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, 50));

        insert_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        insert_buttonA.setMaximumSize(new java.awt.Dimension(95, 25));
        insert_buttonA.setMinimumSize(new java.awt.Dimension(95, 25));
        insert_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insert_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                insert_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                insert_buttonAMouseExited(evt);
            }
        });
        insert_buttonA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        insert_label.setBackground(new java.awt.Color(54, 33, 89));
        insert_label.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        insert_label.setForeground(new java.awt.Color(54, 33, 89));
        insert_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        insert_label.setText("INSERT");
        insert_buttonA.add(insert_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 13, 71, 24));

        bg.add(insert_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 180, 50));

        edit_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        edit_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        edit_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        edit_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edit_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                edit_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                edit_buttonBMouseExited(evt);
            }
        });
        edit_buttonB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        edit_labelB.setBackground(new java.awt.Color(54, 33, 89));
        edit_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        edit_labelB.setForeground(new java.awt.Color(54, 33, 89));
        edit_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        edit_labelB.setText("EDIT");
        edit_buttonB.add(edit_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 80, 50));

        bg.add(edit_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 180, 50));

        refresh_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        refresh_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        refresh_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        refresh_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refresh_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refresh_buttonBMouseExited(evt);
            }
        });
        refresh_buttonB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        refresh_labelB.setBackground(new java.awt.Color(54, 33, 89));
        refresh_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        refresh_labelB.setForeground(new java.awt.Color(54, 33, 89));
        refresh_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refresh_labelB.setText("REFRESH");
        refresh_buttonB.add(refresh_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 80, 50));

        bg.add(refresh_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 180, 50));

        print_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        print_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        print_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        print_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                print_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                print_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                print_buttonBMouseExited(evt);
            }
        });
        print_buttonB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        print_labelB.setBackground(new java.awt.Color(54, 33, 89));
        print_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        print_labelB.setForeground(new java.awt.Color(54, 33, 89));
        print_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print_labelB.setText("PRINT");
        print_buttonB.add(print_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 80, 50));

        bg.add(print_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 120, 180, 50));

        update_buttonC.setForeground(new java.awt.Color(240, 240, 240));
        update_buttonC.setMaximumSize(new java.awt.Dimension(200, 200));
        update_buttonC.setMinimumSize(new java.awt.Dimension(200, 200));
        update_buttonC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                update_buttonCMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                update_buttonCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                update_buttonCMouseExited(evt);
            }
        });
        update_buttonC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        update_labelC.setBackground(new java.awt.Color(54, 33, 89));
        update_labelC.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        update_labelC.setForeground(new java.awt.Color(54, 33, 89));
        update_labelC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        update_labelC.setText("UPDATE");
        update_buttonC.add(update_labelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 120, 50));

        bg.add(update_buttonC, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, 50));

        fullscreen_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        fullscreen_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        fullscreen_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        fullscreen_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fullscreen_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fullscreen_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fullscreen_buttonBMouseExited(evt);
            }
        });
        fullscreen_buttonB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fullscreen_labelB.setBackground(new java.awt.Color(54, 33, 89));
        fullscreen_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        fullscreen_labelB.setForeground(new java.awt.Color(54, 33, 89));
        fullscreen_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fullscreen_labelB.setText("FULLSCREEN");
        fullscreen_buttonB.add(fullscreen_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 120, 50));

        bg.add(fullscreen_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, -1));

        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 740));

        fullscreen_panelB.setBackground(new java.awt.Color(255, 255, 255));
        fullscreen_panelB.setMaximumSize(new java.awt.Dimension(1280, 720));
        fullscreen_panelB.setMinimumSize(new java.awt.Dimension(1280, 720));
        fullscreen_panelB.setPreferredSize(new java.awt.Dimension(1280, 720));
        fullscreen_panelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fullscreen_ScrollPaneB.setBackground(new java.awt.Color(255, 255, 255));
        fullscreen_ScrollPaneB.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        fullscreen_tableB.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        fullscreen_tableB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "Service Num", "Name", "Date", "AA Sec", "Punishment Awarded", "Awarded By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fullscreen_tableB.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        fullscreen_tableB.setFocusable(false);
        fullscreen_tableB.setGridColor(new java.awt.Color(255, 255, 255));
        fullscreen_tableB.setMaximumSize(new java.awt.Dimension(300, 60));
        fullscreen_tableB.setMinimumSize(new java.awt.Dimension(300, 60));
        fullscreen_tableB.setRowHeight(30);
        fullscreen_tableB.setSelectionBackground(new java.awt.Color(54, 33, 89));
        fullscreen_ScrollPaneB.setViewportView(fullscreen_tableB);
        if (fullscreen_tableB.getColumnModel().getColumnCount() > 0) {
            fullscreen_tableB.getColumnModel().getColumn(0).setMinWidth(50);
            fullscreen_tableB.getColumnModel().getColumn(0).setPreferredWidth(50);
            fullscreen_tableB.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        fullscreen_panelB.add(fullscreen_ScrollPaneB, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 1200, 580));

        exit_fullscreen_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        exit_fullscreen_buttonB.setMaximumSize(new java.awt.Dimension(200, 200));
        exit_fullscreen_buttonB.setMinimumSize(new java.awt.Dimension(200, 200));
        exit_fullscreen_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonBMouseExited(evt);
            }
        });
        exit_fullscreen_buttonB.setLayout(null);

        exit_fullscreen_labelB.setBackground(new java.awt.Color(54, 33, 89));
        exit_fullscreen_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        exit_fullscreen_labelB.setForeground(new java.awt.Color(54, 33, 89));
        exit_fullscreen_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit_fullscreen_labelB.setText("GO BACK");
        exit_fullscreen_buttonB.add(exit_fullscreen_labelB);
        exit_fullscreen_labelB.setBounds(30, 0, 120, 50);

        fullscreen_panelB.add(exit_fullscreen_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 640, 180, 50));

        getContentPane().add(fullscreen_panelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void printRecord(JPanel panel){
        // Create PrinterJob Here
        PrinterJob printerJob = PrinterJob.getPrinterJob();
        // Set Printer Job Name
        printerJob.setJobName("Print Record");
        // Set Printable
        printerJob.setPrintable(new Printable() {
            @Override
            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                // Check If No Printable Content
                if(pageIndex > 0){
                    return Printable.NO_SUCH_PAGE;
                }
                
                // Make 2D Graphics to map content
                Graphics2D graphics2D = (Graphics2D)graphics;
                graphics2D.translate(pageFormat.getImageableX()+10, pageFormat.getImageableY()+10);
                graphics2D.scale(0.68,0.7);
                
                // Now paint panel as graphics2D
                panel.paint(graphics2D);
                
                // return if page exists
                return Printable.PAGE_EXISTS;
            }
        });
        // Store printerDialog as boolean
        boolean returningResult = printerJob.printDialog();
        // check if dilog is showing
        if(returningResult){
            // Use try catch exeption for failure
            try{
                // Now call print method inside printerJob to print
                printerJob.print();
            }catch (PrinterException printerException){
                JOptionPane.showMessageDialog(this, "Print Error: " + printerException.getMessage());
            }
        }}
    private void current_time_date(){
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");  
        LocalDateTime now = LocalDateTime.now();  
        String[] day=dtf.format(now).split(" ");
            String date[]=day[0].split("-");
            date_comboboxA.setSelectedItem(date[0]);
            month_comboboxA.setSelectedItem(date[1]);
            year_comboboxA.setSelectedItem(date[2]);
          
    }
    
    private void viewall(String a){
        try{
            ResultSet rs = null;
            int i = 0;
            if(a.equals("null")){
            rs = s.executeQuery("Select * from punishment;");
            rs.next();
            }
            
            else{
                rs = s.executeQuery("Select * from punishment where Army_no = '"+a+"';");
                if(rs.next() == false){
                    i = 1;
                    JOptionPane.showMessageDialog(null, "Army Number not found.");
                }
            }
            String service_no, date, aa, punish, award, name1;
            model_table.setRowCount(0);
            model_fullscreen.setRowCount(0);
            //int row = 0;
            i = 1;
            
            do{
//                row = row + 30;
//                Table.setPreferredSize(new java.awt.Dimension(300,row));
//                fullscreen_table.setPreferredSize(new java.awt.Dimension(300,row));
                service_no=rs.getString("Army_no");                
                date=rs.getString("Pun_Date");                
                aa=rs.getString("aa");
                punish=rs.getString("punish");
                award=rs.getString("awarded_by");
                name1 = rs.getString("name");
                model_table.addRow(new Object[]{
                   i,
                   service_no, 
                   date,
                   aa,
                   punish,
                   award
                });
                 model_fullscreen.addRow( new Object[]{
                   i,
                   service_no, 
                   name1,
                   date,
                   aa,
                   punish,
                   award
                });
            i++;
            } while(rs.next());
        }catch(Exception e){System.out.println(e);}   
    }
    
    private void move_panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMouseDragged
        this.setLocation(this.getX() +evt.getX() -mouseX, this.getY() + evt.getY() -mouseY);
    }//GEN-LAST:event_move_panelMouseDragged

    private void move_panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMousePressed
        mouseX =evt.getX();
        mouseY =evt.getY();
    }//GEN-LAST:event_move_panelMousePressed

    private void exit_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_iconMouseClicked
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit the program?", "Exit Program", JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            dispose();
            try {
                c.close();
            } catch (SQLException ex) {
                System.out.println("connection ended");
            }
        }
    }//GEN-LAST:event_exit_iconMouseClicked

    private void minimize_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimize_iconMouseClicked
        setState(this.ICONIFIED);
    }//GEN-LAST:event_minimize_iconMouseClicked

    private void go_back_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_go_back_labelMouseClicked
        if(flag){
        new Modules(0).setVisible(true);
        this.setVisible(false);
        flag = false;
        }
    }//GEN-LAST:event_go_back_labelMouseClicked

    private void menuAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAMouseClicked
        menuA.setBackground(new java.awt.Color(85,65,118));
        menuB.setBackground(new java.awt.Color(64,43,100));

        print_buttonA.setVisible(true);
        insert_buttonA.setVisible(true);
        print_buttonB.setVisible(false);
        edit_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);

        ScrollPaneA.setVisible(true);
        panelB.setVisible(false);
        ScrollPaneC.setVisible(false);
        fullscreen_panelB.setVisible(false);
    }//GEN-LAST:event_menuAMouseClicked

    private void menuBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBMouseClicked
        menuB.setBackground(new java.awt.Color(85,65,118));
        menuA.setBackground(new java.awt.Color(64,43,100));

        print_buttonA.setVisible(false);
        insert_buttonA.setVisible(false);
        print_buttonB.setVisible(true);
        edit_buttonB.setVisible(true);
        refresh_buttonB.setVisible(true);
        fullscreen_buttonB.setVisible(true);
        update_buttonC.setVisible(false);

        ScrollPaneA.setVisible(false);
        panelB.setVisible(true);
        ScrollPaneC.setVisible(false);
        fullscreen_panelB.setVisible(false);
        
        viewall("null");
    }//GEN-LAST:event_menuBMouseClicked

    private void okayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okayMouseClicked
        if(service_number_textfield.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Please Enter Army Number");
            name.setText("> XXXXXXX");
            rank.setText("> XXXXXXX");
            trade.setText("> XXXXXXX");
            company.setText("> XXXXXXX");
            unit.setText("> XXXXXXX");
            unit_label.setText("Unit");
            trade_label.setText("Trade");
            service_number_textfield.setText("");
        }
        else{
        try {
            // TODO add your handling code here:
            String query1 = "select * from new_registration where service_no = '"+service_number_textfield.getText()+"' ;";
            ResultSet rs    = s.executeQuery(query1); // Retrieving last stored password in database
             // Retrieving last stored password in database
             int i = 0;
            if(rs.next() == false){
                i = 1;
            }
            if(i==1){
            query1 = "select * from attach_in where Service_no = '"+service_number_textfield.getText()+"' ;";
            ResultSet rs1    = s.executeQuery(query1);
            
                if(rs1.next() == false){
                i = 2;

            }
            }
            if(i==2){
                query1 = "select * from post_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                ResultSet rs1    = s.executeQuery(query1);
                if(rs1.next() ==false){
                i=3;
                JOptionPane.showMessageDialog(rootPane, "Invalid Army Number");
                service_number_textfield.setText("");
                name.setText("> XXXXXXX");
                rank.setText("> XXXXXXX");
                trade.setText("> XXXXXXX");
                company.setText("> XXXXXXX");
                unit.setText("> XXXXXXX");
                unit_label.setText("Unit");
                trade_label.setText("Trade");
                service_number_textfield.setText("");
                }
            }
            if(i!=3){
                String[] r = new String[5];
                if(i==1){
                    query1 = "select * from attach_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[2] = rs1.getString("trade");
                        r[3] = rs1.getString("company");
                        r[4] = rs1.getString("unit");
                    }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText(r[2]);
                company.setText(r[3]);
                unit.setText(r[4]);
                }
                if(i==2){
                    query1 = "select * from post_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[3] = rs1.getString("company");
                    }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText("> XXXXXXX");
                company.setText(r[3]);
                unit.setText("> XXXXXXX");
                }
                else if (i==0){
                query1 = "select * from new_registration where service_no = '"+service_number_textfield.getText()+"' ;";
                    rs    = s.executeQuery(query1);
                while(rs.next()){
                    r[0] = rs.getString("name");
                    r[1] = rs.getString("rank_");
                    r[2] = rs.getString("company");
                }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText("> XXXXXXX");
                company.setText(r[2]);
                unit.setText("> XXXXXXX");
                }  
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Update_data.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_okayMouseClicked

    private void okayBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okayBMouseClicked
        if((service_numberB.getText()!=null && !service_numberB.getText().trim().isEmpty()) ){
            viewall(service_numberB.getText());
        }
        else{
            JOptionPane.showMessageDialog(null, "Please Enter Army Number.");
        }
    }//GEN-LAST:event_okayBMouseClicked

    private void print_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseClicked
        try{
            printRecord(panelA);
        }
        catch(Exception e){
            System.err.format("Error! Cannot Print.", e.getMessage());
        }
    }//GEN-LAST:event_print_buttonAMouseClicked

    private void print_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseEntered
        print_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_print_buttonAMouseEntered

    private void print_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseExited
        print_buttonA.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_print_buttonAMouseExited

    private void insert_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_buttonAMouseClicked
        if(service_number_textfield.getText().equals("")){
            JOptionPane.showMessageDialog(rootPane, "Please Enter Army Number");
            name.setText("> XXXXXXX");
            rank.setText("> XXXXXXX");
            trade.setText("> XXXXXXX");
            company.setText("> XXXXXXX");
            unit.setText("> XXXXXXX");
            unit_label.setText("Unit");
            trade_label.setText("Trade");
            service_number_textfield.setText("");
        }
        else{
        try {
            // TODO add your handling code here:
            String query1 = "select * from new_registration where service_no = '"+service_number_textfield.getText()+"' ;";
            ResultSet rs    = s.executeQuery(query1); // Retrieving last stored password in database
             // Retrieving last stored password in database
             int i = 0;
            if(rs.next() == false){
                i = 1;
            }
            if(i==1){
            query1 = "select * from attach_in where Service_no = '"+service_number_textfield.getText()+"' ;";
            ResultSet rs1    = s.executeQuery(query1);
            
                if(rs1.next() == false){
                i = 2;
            }
            }
            if(i==2){
                query1 = "select * from post_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                ResultSet rs1    = s.executeQuery(query1);
                if(rs1.next() ==false){
                i=3;
                JOptionPane.showMessageDialog(rootPane, "Invalid Army Number");
                service_number_textfield.setText("");
                name.setText("> XXXXXXX");
                rank.setText("> XXXXXXX");
                trade.setText("> XXXXXXX");
                company.setText("> XXXXXXX");
                unit.setText("> XXXXXXX");
                unit_label.setText("Unit");
                trade_label.setText("Trade");
                service_number_textfield.setText("");
                }
            }
            if(i!=3){
                String[] r = new String[5];
                if(i==1){
                    query1 = "select * from attach_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[2] = rs1.getString("trade");
                        r[3] = rs1.getString("company");
                        r[4] = rs1.getString("unit");
                    }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText(r[2]);
                company.setText(r[3]);
                unit.setText(r[4]);
                }
                if(i==2){
                    query1 = "select * from post_in where Service_no = '"+service_number_textfield.getText()+"' ;";
                    ResultSet rs1    = s.executeQuery(query1); 
                    while(rs1.next()){
                        r[0] = rs1.getString("name");
                        r[1] = rs1.getString("rank_");
                        r[3] = rs1.getString("company");
                    }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText("> XXXXXXX");
                company.setText(r[3]);
                unit.setText("> XXXXXXX");
                }
                else if(i==0){
                query1 = "select * from new_registration where service_no = '"+service_number_textfield.getText()+"' ;";
                    rs    = s.executeQuery(query1);
                while(rs.next()){
                    r[0] = rs.getString("name");
                    r[1] = rs.getString("rank_");
                    r[2] = rs.getString("company");
                }
                name.setText(r[0]);
                rank.setText(r[1]);
                trade.setText("> XXXXXXX");
                company.setText(r[2]);
                unit.setText("> XXXXXXX");
                } 
                String year = (String)year_comboboxA.getSelectedItem();
                String month = (String)month_comboboxA.getSelectedItem();
                String date = (String)date_comboboxA.getSelectedItem();
                boolean cal = false;
                String date1 = "";
                boolean all_check = (AA_textfield.getText()!=null && !AA_textfield.getText().trim().isEmpty())&& (punishment_textfield.getText()!=null && !punishment_textfield.getText().trim().isEmpty())&& (by_textfield.getText()!=null && !by_textfield.getText().trim().isEmpty()) ;
                boolean da = year!= "YYYY" && month!= "MM" && date!= "DD";
                if(da){
                    int y = Integer.parseInt(year);
                    int m = Integer.parseInt(month);
                    int d = Integer.parseInt(date);
                    cal = !((y%4==0 && m==2 &&  (d>29)  )   || (  (m==2 || m==4 || m==6 || m==9 || m==11)  && d==31  )    ||  (m==2 && d>28 && y%4!=0));
                    date1 = date+"-"+month+"-"+year;
                }
                if(da && all_check && cal){
                    String q = "insert into punishment "+"values(?,?,?,?,?,?)";
                    java.sql.PreparedStatement st = c.prepareStatement(q);
                    st.setString(1,service_number_textfield.getText().trim());
                    st.setString(2,r[0]);
                    st.setString(3,AA_textfield.getText());
                    st.setString(4,punishment_textfield.getText());
                    st.setString(5,by_textfield.getText());
                    st.setString(6,date1);
                    service_number_textfield.grabFocus();
                //ResultSet rs=st.executeQuery(); 
                    st.execute();
                    JOptionPane.showMessageDialog(null,"Data inserted successfully!");
                    name.setText("> XXXXXXX");
                    rank.setText("> XXXXXXX");
                    trade.setText("> XXXXXXX");
                    company.setText("> XXXXXXX");
                    unit.setText("> XXXXXXX");
                    unit_label.setText("Unit");
                    trade_label.setText("Trade");
                    service_number_textfield.setText("");
                    date_comboboxA.setSelectedItem("DD");
                    month_comboboxA.setSelectedItem("MM");
                    year_comboboxA.setSelectedItem("YYYY");
                    AA_textfield.setText("");
                    punishment_textfield.setText("");
                    by_textfield.setText("");
                                
                }
                else{
                    if(da == false || cal == false){
                        JOptionPane.showMessageDialog(null, "Invalid Date");
                    }
                    else if(all_check == false){
                        if((AA_textfield.getText()==null || AA_textfield.getText().trim().isEmpty())){
                            JOptionPane.showMessageDialog(null, "Please Enter Some value for AA Sec.");
                            AA_textfield.grabFocus();
                        }
                        else if((punishment_textfield.getText()==null || punishment_textfield.getText().trim().isEmpty())){
                            JOptionPane.showMessageDialog(null, "Please Enter Some value for Punishment Awarded.");
                            punishment_textfield.grabFocus();
                        }
                        else if((by_textfield.getText()==null || by_textfield.getText().trim().isEmpty())){
                            JOptionPane.showMessageDialog(null, "Please Enter Some value for Awarded By.");
                            by_textfield.grabFocus();
                        }
                    }
                }
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Update_data.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_insert_buttonAMouseClicked

    private void insert_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_buttonAMouseEntered
        insert_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_insert_buttonAMouseEntered

    private void insert_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insert_buttonAMouseExited
        insert_buttonA.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_insert_buttonAMouseExited

    private void edit_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_buttonBMouseClicked
        if(TableG_out.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Please select element from table to edit.");
        }
        else{
        ScrollPaneA.setVisible(false);
        panelB.setVisible(false);
        ScrollPaneC.setVisible(true);
        fullscreen_panelB.setVisible(false);

        print_buttonA.setVisible(false);
        insert_buttonA.setVisible(false);
        print_buttonB.setVisible(false);
        edit_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);
        update_buttonC.setVisible(true);
        String q = "select * from new_registration where service_no = '"+(String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1)+"';";
             ResultSet rs = null;
             boolean a = false,b = false, c = false;
            try {
               rs = s.executeQuery(q);
               a = rs.next();
               
               q = "select * from attach_in where Service_no = '"+(String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1)+"';";
               rs = s.executeQuery(q);
               b = rs.next();
               
               q = "select * from post_in where Service_no = '"+(String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1)+"';";
               rs = s.executeQuery(q);
               c = rs.next();
               
            } catch (SQLException ex) {
                Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
            }
            String rank = "",name = "", army = (String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1);
            
            
            if(a == true){
                try {
                    q = "select * from new_registration where service_no= '"+army+"';";
                    rs = s.executeQuery(q);
                    while(rs.next()){
                        rank = rs.getString("Rank_");
                        name = rs.getString("Name");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(b == true){
                try {
                    q = "select * from attach_in where Service_no= '"+army+"';";
                    rs = s.executeQuery(q);
                    while(rs.next()){
                        rank = rs.getString("Rank_");
                        name = rs.getString("Name");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(c == true){
                try {
                    q = "select * from post_in where Service_no= '"+army+"';";
                    rs = s.executeQuery(q);
                    while(rs.next()){
                        rank = rs.getString("Rank_");
                        name = rs.getString("Name");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            army_numberC.setText(army);
            nameC.setText(name);
            rankC.setText(rank);
            String[] arr = new String[4];
            try {
                    String from = (String) TableG_out.getValueAt(TableG_out.getSelectedRow(),2);
                    q = "select * from punishment where Army_no= '"+army+"' and Pun_Date = '"+from+"';";
                    rs = s.executeQuery(q);
                    
                    while(rs.next()){
                        arr[0] = rs.getString("Pun_Date");
                        arr[1] = rs.getString("aa");
                        arr[2] = rs.getString("punish");
                        arr[3] = rs.getString("awarded_by");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
                }
            date_comboboxA1.setSelectedItem(arr[0].split("-")[0]);
            month_comboboxA1.setSelectedItem(arr[0].split("-")[1]);
            year_comboboxA1.setSelectedItem(arr[0].split("-")[2]);
            AA_textfield1.setText(arr[1]);
            punishment_textfield1.setText(arr[2]);
            by_textfield1.setText(arr[3]);
        
        }

    }//GEN-LAST:event_edit_buttonBMouseClicked

    private void edit_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_buttonBMouseEntered
        edit_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_edit_buttonBMouseEntered

    private void edit_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edit_buttonBMouseExited
        edit_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_edit_buttonBMouseExited

    private void refresh_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonBMouseClicked
        viewall("null");
    }//GEN-LAST:event_refresh_buttonBMouseClicked

    private void refresh_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonBMouseEntered
        refresh_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_refresh_buttonBMouseEntered

    private void refresh_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonBMouseExited
        refresh_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_refresh_buttonBMouseExited

    private void print_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseClicked
        /*try{path_file path = new path_file();
            PrintWriter pw=new PrintWriter(new File(path.csv+"\\pun.csv"));
            StringBuilder sb=new StringBuilder();
            String query="Select * from punishment";
            
            sb.append("Army Number      \t");
            sb.append(",");
            sb.append("Name            \t");
            sb.append(",");
            sb.append("AA Sec             \t");
            sb.append(",");
            sb.append("Punishment Awarded          \t");
            sb.append(",");
            sb.append("Awarded By         \t");
            sb.append(",");
            sb.append("Punishment Date      \t");
            
            sb.append("\r\n");
            ResultSet rs = null;
            Statement st = c.createStatement();
            rs=st.executeQuery(query);  
            
            while(rs.next()){
                sb.append(rs.getString("Army_no"));
                sb.append(",");
                sb.append(rs.getString("name"));
                sb.append(",");
                sb.append(rs.getString("aa"));
                sb.append(",");
                sb.append(rs.getString("punish"));
                sb.append(",");
                sb.append(rs.getString("awarded_by"));
                sb.append(",");
                sb.append(rs.getString("Pun_Date"));
                
                sb.append("\r\n");
            }
            pw.write(sb.toString());
            pw.close();
            JOptionPane.showMessageDialog(null,"Successfully Converted to CSV");
        }
        catch(Exception e){
            System.out.print("\n"+e);
            String er=e.getMessage();
            if(er.contains("The process cannot access the file because it is being used by another process")){
                JOptionPane.showMessageDialog(null,"Please close the CSV file first!");
            }
        }*/
        try{

        java.sql.Statement statement = c.createStatement();
            ResultSet resultSet = statement.executeQuery("select * from punishment");
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet spreadsheet =null;
            spreadsheet = workbook.createSheet("punishment");
            
            XSSFRow row = spreadsheet.createRow(0);
            XSSFCell cell;
            cell = row.createCell(0);
            cell.setCellValue("Army Number");
            cell = row.createCell(1);
            cell.setCellValue("Name");
            cell = row.createCell(2);
            cell.setCellValue("AA Sec");
            cell = row.createCell(3);
            cell.setCellValue("Punishment Awarded");
            cell = row.createCell(4);
            cell.setCellValue("Awarded By");
            cell = row.createCell(5);
            cell.setCellValue("Punishment Date");
            int i = 1;
            
            while(resultSet.next()) {
                row = spreadsheet.createRow(i);
                cell = row.createCell(0);
                cell.setCellValue(resultSet.getString("Army_no"));
                cell = row.createCell(1);
                cell.setCellValue(resultSet.getString("name"));
                cell = row.createCell(2);
                cell.setCellValue(resultSet.getString("aa"));
                cell = row.createCell(3);
                cell.setCellValue(resultSet.getString("punish"));
                cell = row.createCell(4);
                cell.setCellValue(resultSet.getString("awarded_by"));
                cell = row.createCell(5);
                cell.setCellValue(resultSet.getString("Pun_Date"));
                i++;
            }
            path_file paths=new path_file();
            FileOutputStream out = new FileOutputStream(new File(paths.csv + "\\" +"punishment.xlsx"));
            workbook.write(out);
            JOptionPane.showMessageDialog(null,"punishment.xlsx written successfully");
            Desktop.getDesktop().open(new File(paths.csv + "/punishment.xlsx"));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,"punishment.xlsx not created");
        }
    }//GEN-LAST:event_print_buttonBMouseClicked

    private void print_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseEntered
        print_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_print_buttonBMouseEntered

    private void print_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseExited
        print_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_print_buttonBMouseExited

    private void update_buttonCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonCMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here
                String year = (String)year_comboboxA1.getSelectedItem();
                String month = (String)month_comboboxA1.getSelectedItem();
                String date = (String)date_comboboxA1.getSelectedItem();
                boolean cal = false;
                String date1 = "";
                boolean da = year!= "YYYY" && month!= "MM" && date!= "DD";
                if(da){
                    int y = Integer.parseInt(year);
                    int m = Integer.parseInt(month);
                    int d = Integer.parseInt(date);
                    cal = !((y%4==0 && m==2 &&  (d>29)  )   || (  (m==2 || m==4 || m==6 || m==9 || m==11)  && d==31  )    ||  (m==2 && d>28 && y%4!=0));
                    date1 = date+"-"+month+"-"+year;
                }
                
                String arr[] = new String[3];
                try{
                    String a =((String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1));
                    String b = ((String) TableG_out.getValueAt(TableG_out.getSelectedRow(),2));
                String q = "select * from punishment where Army_no= '"+a+"' and Pun_Date = '"+b+"';";
                 ResultSet   rs = s.executeQuery(q);
                    
                    while(rs.next()){
                        arr[0] = rs.getString("aa");
                        arr[1] = rs.getString("punish");
                        arr[2] = rs.getString("awarded_by");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Cadre.class.getName()).log(Level.SEVERE, null, ex);
                }
                if((AA_textfield1.getText()==null || AA_textfield1.getText().trim().isEmpty())){
                    AA_textfield1.setText(arr[0]);
                }
                if((punishment_textfield1.getText()==null || punishment_textfield1.getText().trim().isEmpty())){
                    punishment_textfield1.setText(arr[1]);
                }
                if((by_textfield1.getText()==null || by_textfield1.getText().trim().isEmpty())){
                    by_textfield1.setText(arr[2]);
                }
                if(da && cal){
                    String q = "update punishment set Pun_Date = ?, aa = ?, awarded_by = ?, punish = ? where Army_no = ?";
                    java.sql.PreparedStatement st = c.prepareStatement(q);
                    st.setString(1,date1);
                    st.setString(2,AA_textfield1.getText());
                    st.setString(4,punishment_textfield1.getText());
                    st.setString(3,by_textfield1.getText());
                    st.setString(5,(String) TableG_out.getValueAt(TableG_out.getSelectedRow(),1));
                //ResultSet rs=st.executeQuery(); 
                    st.execute();
                    JOptionPane.showMessageDialog(null,"Data updated successfully!");
                    service_numberB.setText("");
                    menuB.setBackground(new java.awt.Color(85,65,118));
        menuA.setBackground(new java.awt.Color(64,43,100));

        print_buttonA.setVisible(false);
        insert_buttonA.setVisible(false);
        print_buttonB.setVisible(true);
        edit_buttonB.setVisible(true);
        refresh_buttonB.setVisible(true);
        fullscreen_buttonB.setVisible(true);
        update_buttonC.setVisible(false);

        ScrollPaneA.setVisible(false);
        panelB.setVisible(true);
        ScrollPaneC.setVisible(false);
        fullscreen_panelB.setVisible(false);
        
        viewall("null");        
                }
                else{
                        JOptionPane.showMessageDialog(null, "Invalid Date");

                }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Update_data.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_update_buttonCMouseClicked

    private void update_buttonCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonCMouseEntered
        update_buttonC.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_update_buttonCMouseEntered

    private void update_buttonCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_update_buttonCMouseExited
        update_buttonC.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_update_buttonCMouseExited

    private void fullscreen_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonBMouseClicked
        fullscreen_panelB.setVisible(true);
        bg.setVisible(false);
    }//GEN-LAST:event_fullscreen_buttonBMouseClicked

    private void fullscreen_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonBMouseEntered
        fullscreen_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_fullscreen_buttonBMouseEntered

    private void fullscreen_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonBMouseExited
        fullscreen_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_fullscreen_buttonBMouseExited

    private void AA_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AA_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AA_textfieldActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //for a centered frame
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        //for a centered frame
        
        menuA.setBackground(new java.awt.Color(85,65,118));
        menuB.setBackground(new java.awt.Color(64,43,100));
        
        print_buttonA.setVisible(true);
        insert_buttonA.setVisible(true);
        print_buttonB.setVisible(false);
        edit_buttonB.setVisible(false);
        refresh_buttonB.setVisible(false);
        fullscreen_buttonB.setVisible(false);
        
        ScrollPaneA.setVisible(true);
        panelB.setVisible(false);
        ScrollPaneC.setVisible(false);
        fullscreen_panelB.setVisible(false);
        
      
        
        viewall("null");
    }//GEN-LAST:event_formWindowOpened

    private void AA_textfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AA_textfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AA_textfield1ActionPerformed

    private void exit_fullscreen_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonBMouseClicked
        fullscreen_panelB.setVisible(false);
        bg.setVisible(true);
    }//GEN-LAST:event_exit_fullscreen_buttonBMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void service_number_textfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_service_number_textfieldKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            okayMouseClicked(null);
        }
    }//GEN-LAST:event_service_number_textfieldKeyPressed

    private void service_numberBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_service_numberBKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            okayBMouseClicked(null);
        }
    }//GEN-LAST:event_service_numberBKeyPressed

    private void exit_fullscreen_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonBMouseEntered
        exit_fullscreen_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_exit_fullscreen_buttonBMouseEntered

    private void exit_fullscreen_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonBMouseExited
        exit_fullscreen_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_exit_fullscreen_buttonBMouseExited

    private void current_dateAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_current_dateAMouseClicked
        current_time_date();
    }//GEN-LAST:event_current_dateAMouseClicked

    private void current_dateAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_current_dateAMouseEntered
        current_dateA.setForeground(new java.awt.Color(54, 33, 89));
        current_dateA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_current_dateAMouseEntered

    private void current_dateAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_current_dateAMouseExited
        current_dateA.setForeground(new java.awt.Color(60, 63, 65));
        current_dateA.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_current_dateAMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Punishment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Punishment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Punishment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Punishment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Punishment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AA_label;
    private javax.swing.JLabel AA_label1;
    private javax.swing.JTextField AA_textfield;
    private javax.swing.JTextField AA_textfield1;
    private javax.swing.JSeparator AA_underline;
    private javax.swing.JSeparator AA_underline1;
    private javax.swing.JScrollPane ScrollPaneA;
    private javax.swing.JScrollPane ScrollPaneB;
    private javax.swing.JScrollPane ScrollPaneC;
    private javax.swing.JSeparator Separator;
    private javax.swing.JTable TableG_out;
    private javax.swing.JLabel army_numberC;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel by_label;
    private javax.swing.JLabel by_label1;
    private javax.swing.JTextField by_textfield;
    private javax.swing.JTextField by_textfield1;
    private javax.swing.JSeparator by_underline;
    private javax.swing.JSeparator by_underline1;
    private javax.swing.JLabel changing_for_label;
    private javax.swing.JLabel company;
    private javax.swing.JLabel company_label;
    private javax.swing.JLabel current_dateA;
    private javax.swing.JComboBox<String> date_comboboxA;
    private javax.swing.JComboBox<String> date_comboboxA1;
    private javax.swing.JLabel date_labelA;
    private javax.swing.JLabel date_labelA1;
    private javax.swing.JPanel edit_buttonB;
    private javax.swing.JLabel edit_labelB;
    private javax.swing.JPanel exit_fullscreen_buttonB;
    private javax.swing.JLabel exit_fullscreen_labelB;
    private javax.swing.JLabel exit_icon;
    private javax.swing.JScrollPane fullscreen_ScrollPaneB;
    private javax.swing.JPanel fullscreen_buttonB;
    private javax.swing.JLabel fullscreen_labelB;
    private javax.swing.JPanel fullscreen_panelB;
    private javax.swing.JTable fullscreen_tableB;
    private javax.swing.JLabel go_back_label;
    private javax.swing.JPanel insert_buttonA;
    private javax.swing.JLabel insert_label;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel menuA;
    private javax.swing.JLabel menuA_icon;
    private javax.swing.JLabel menuA_label;
    private javax.swing.JPanel menuB;
    private javax.swing.JLabel menuB_icon;
    private javax.swing.JLabel menuB_label;
    private javax.swing.JSeparator midA1;
    private javax.swing.JSeparator midA2;
    private javax.swing.JSeparator midC4;
    private javax.swing.JLabel minimize_icon;
    private javax.swing.JComboBox<String> month_comboboxA;
    private javax.swing.JComboBox<String> month_comboboxA1;
    private javax.swing.JPanel move_panel;
    private javax.swing.JLabel name;
    private javax.swing.JLabel nameC;
    private javax.swing.JLabel name_label;
    private javax.swing.JLabel name_labelC;
    private javax.swing.JLabel okay;
    private javax.swing.JLabel okayB;
    private javax.swing.JPanel panelA;
    private javax.swing.JSeparator panelA_bottom_line;
    private javax.swing.JSeparator panelA_bottom_line1;
    private javax.swing.JPanel panelB;
    private javax.swing.JPanel panelC;
    private javax.swing.JPanel print_buttonA;
    private javax.swing.JPanel print_buttonB;
    private javax.swing.JLabel print_label;
    private javax.swing.JLabel print_labelB;
    private javax.swing.JLabel punishment_label;
    private javax.swing.JLabel punishment_label1;
    private javax.swing.JTextField punishment_textfield;
    private javax.swing.JTextField punishment_textfield1;
    private javax.swing.JSeparator punishment_underline;
    private javax.swing.JSeparator punishment_underline1;
    private javax.swing.JLabel rank;
    private javax.swing.JLabel rankC;
    private javax.swing.JLabel rank_label;
    private javax.swing.JLabel rank_labelC;
    private javax.swing.JPanel refresh_buttonB;
    private javax.swing.JLabel refresh_labelB;
    private javax.swing.JTextField service_numberB;
    private javax.swing.JLabel service_number_label;
    private javax.swing.JLabel service_number_labelB;
    private javax.swing.JLabel service_number_labelC;
    private javax.swing.JTextField service_number_textfield;
    private javax.swing.JSeparator service_number_underline;
    private javax.swing.JPanel side_pane;
    private javax.swing.JSeparator textfield_underline;
    private javax.swing.JLabel title_icon;
    private javax.swing.JLabel title_label;
    private javax.swing.JLabel trade;
    private javax.swing.JLabel trade_label;
    private javax.swing.JLabel unit;
    private javax.swing.JLabel unit_label;
    private javax.swing.JPanel update_buttonC;
    private javax.swing.JLabel update_labelC;
    private javax.swing.JComboBox<String> year_comboboxA;
    private javax.swing.JComboBox<String> year_comboboxA1;
    // End of variables declaration//GEN-END:variables
}
