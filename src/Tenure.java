
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author chise
 */
public class Tenure extends javax.swing.JFrame {

    /**
     * Creates new form Tenure
     */
    private int mouseX, mouseY;
    boolean back_button=true;
    Database db = new Database();
    Connection con=db.create_connection(true);
    DefaultTableModel small;
    public Tenure() {
        initComponents();
        
        ScrollPaneA.getVerticalScrollBar().setUnitIncrement(16);
        
        
        menuA.setBackground(new java.awt.Color(85,65,118));
        menuB.setBackground(new java.awt.Color(64,43,100));
        small=(DefaultTableModel) TableA.getModel();
        ScrollPaneB.setVisible(false);
        panelA.setVisible(true);
        
        refresh_buttonA.setVisible(true);
        print_buttonA.setVisible(true);
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        move_panel = new javax.swing.JPanel();
        bg = new javax.swing.JPanel();
        exit_icon = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        separator = new javax.swing.JSeparator();
        side_pane = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        go_back_label = new javax.swing.JLabel();
        menuA = new javax.swing.JPanel();
        menuA_icon = new javax.swing.JLabel();
        menuA_label = new javax.swing.JLabel();
        menuB = new javax.swing.JPanel();
        menuB_icon = new javax.swing.JLabel();
        menuB_label = new javax.swing.JLabel();
        title_icon = new javax.swing.JLabel();
        title_label = new javax.swing.JLabel();
        title_label1 = new javax.swing.JLabel();
        panelA = new javax.swing.JPanel();
        ScrollPaneA = new javax.swing.JScrollPane();
        TableA = new javax.swing.JTable();
        ScrollPaneB = new javax.swing.JScrollPane();
        panelB = new javax.swing.JPanel();
        location_underlineB = new javax.swing.JSeparator();
        location_textfieldB = new javax.swing.JTextField();
        location_labelB = new javax.swing.JLabel();
        from_labelB = new javax.swing.JLabel();
        from_year_comboboxB = new javax.swing.JComboBox<>();
        from_date_comboboxB = new javax.swing.JComboBox<>();
        from_month_comboboxB = new javax.swing.JComboBox<>();
        to_labelB = new javax.swing.JLabel();
        to_date_comboboxB = new javax.swing.JComboBox<>();
        to_month_comboboxB = new javax.swing.JComboBox<>();
        to_year_comboboxB = new javax.swing.JComboBox<>();
        add_buttonA = new javax.swing.JPanel();
        add_labelB = new javax.swing.JLabel();
        refresh_buttonA = new javax.swing.JPanel();
        refresh_labelC = new javax.swing.JLabel();
        print_buttonA = new javax.swing.JPanel();
        print_labelB = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1280, 720));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        move_panel.setFocusable(false);
        move_panel.setOpaque(false);
        move_panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                move_panelMouseDragged(evt);
            }
        });
        move_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                move_panelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout move_panelLayout = new javax.swing.GroupLayout(move_panel);
        move_panel.setLayout(move_panelLayout);
        move_panelLayout.setHorizontalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        move_panelLayout.setVerticalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(move_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 30));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setMaximumSize(new java.awt.Dimension(1280, 720));
        bg.setMinimumSize(new java.awt.Dimension(1280, 720));
        bg.setPreferredSize(new java.awt.Dimension(1280, 720));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exit_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/remove_purple.png"))); // NOI18N
        exit_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_iconMouseClicked(evt);
            }
        });
        bg.add(exit_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1215, 30, -1, -1));

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/minimize-purple.png"))); // NOI18N
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        bg.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 30, -1, 40));

        separator.setForeground(new java.awt.Color(54, 33, 89));
        separator.setPreferredSize(new java.awt.Dimension(50, 20));
        bg.add(separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 890, 10));

        side_pane.setBackground(new java.awt.Color(54, 33, 89));
        side_pane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        side_pane.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 280, 50));

        go_back_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/left-arrow.png"))); // NOI18N
        go_back_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                go_back_labelMouseClicked(evt);
            }
        });
        side_pane.add(go_back_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAMouseClicked(evt);
            }
        });

        menuA_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuA_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuA_icon.setText("A");

        menuA_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuA_label.setForeground(new java.awt.Color(255, 255, 255));
        menuA_label.setText("Tenure History");

        javax.swing.GroupLayout menuALayout = new javax.swing.GroupLayout(menuA);
        menuA.setLayout(menuALayout);
        menuALayout.setHorizontalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuA_icon)
                .addGap(33, 33, 33)
                .addComponent(menuA_label, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        menuALayout.setVerticalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuA_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuA_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 330, 60));

        menuB.setBackground(new java.awt.Color(64, 43, 100));
        menuB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBMouseClicked(evt);
            }
        });

        menuB_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuB_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuB_icon.setText("B");

        menuB_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuB_label.setForeground(new java.awt.Color(255, 255, 255));
        menuB_label.setText("Create Record");

        javax.swing.GroupLayout menuBLayout = new javax.swing.GroupLayout(menuB);
        menuB.setLayout(menuBLayout);
        menuBLayout.setHorizontalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuB_icon)
                .addGap(33, 33, 33)
                .addComponent(menuB_label, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );
        menuBLayout.setVerticalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuB_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
            .addComponent(menuB_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        side_pane.add(menuB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 320, 60));

        title_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/tenure_white.png"))); // NOI18N
        side_pane.add(title_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 70, 70));

        title_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        title_label.setForeground(new java.awt.Color(255, 255, 255));
        title_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_label.setText("Battalion");
        side_pane.add(title_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 180, 40));

        title_label1.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        title_label1.setForeground(new java.awt.Color(255, 255, 255));
        title_label1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_label1.setText("Tenure");
        side_pane.add(title_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(93, 140, 150, 40));

        bg.add(side_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 740));

        panelA.setBackground(new java.awt.Color(255, 255, 255));
        panelA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ScrollPaneA.setBackground(new java.awt.Color(255, 255, 255));
        ScrollPaneA.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TableA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        TableA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No.", "From", "To", "Location"
            }
        ));
        TableA.setFocusable(false);
        TableA.setGridColor(new java.awt.Color(255, 255, 255));
        TableA.setMaximumSize(new java.awt.Dimension(300, 150));
        TableA.setMinimumSize(new java.awt.Dimension(300, 60));
        TableA.setRowHeight(30);
        TableA.setSelectionBackground(new java.awt.Color(54, 33, 89));
        ScrollPaneA.setViewportView(TableA);
        if (TableA.getColumnModel().getColumnCount() > 0) {
            TableA.getColumnModel().getColumn(0).setMinWidth(50);
            TableA.getColumnModel().getColumn(0).setPreferredWidth(50);
            TableA.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        panelA.add(ScrollPaneA, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 790, 420));

        bg.add(panelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 890, 500));

        ScrollPaneB.setBorder(null);
        ScrollPaneB.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ScrollPaneB.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        panelB.setBackground(new java.awt.Color(255, 255, 255));
        panelB.setFocusable(false);
        panelB.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        location_underlineB.setForeground(new java.awt.Color(54, 33, 89));
        panelB.add(location_underlineB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 320, 20));

        location_textfieldB.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        location_textfieldB.setForeground(new java.awt.Color(54, 33, 89));
        location_textfieldB.setBorder(null);
        location_textfieldB.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelB.add(location_textfieldB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 320, 40));

        location_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        location_labelB.setForeground(new java.awt.Color(51, 51, 51));
        location_labelB.setText("Location");
        panelB.add(location_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, -1, 40));

        from_labelB.setBackground(new java.awt.Color(255, 255, 255));
        from_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        from_labelB.setForeground(new java.awt.Color(51, 51, 51));
        from_labelB.setText("From");
        panelB.add(from_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, -1, 40));

        from_year_comboboxB.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        from_year_comboboxB.setForeground(new java.awt.Color(44, 62, 80));
        from_year_comboboxB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        from_year_comboboxB.setBorder(null);
        panelB.add(from_year_comboboxB, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 100, 40));

        from_date_comboboxB.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        from_date_comboboxB.setForeground(new java.awt.Color(44, 62, 80));
        from_date_comboboxB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        from_date_comboboxB.setBorder(null);
        panelB.add(from_date_comboboxB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 100, 40));

        from_month_comboboxB.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        from_month_comboboxB.setForeground(new java.awt.Color(44, 62, 80));
        from_month_comboboxB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        from_month_comboboxB.setBorder(null);
        panelB.add(from_month_comboboxB, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 100, 40));

        to_labelB.setBackground(new java.awt.Color(255, 255, 255));
        to_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        to_labelB.setForeground(new java.awt.Color(51, 51, 51));
        to_labelB.setText("To");
        panelB.add(to_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 170, -1, 40));

        to_date_comboboxB.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        to_date_comboboxB.setForeground(new java.awt.Color(44, 62, 80));
        to_date_comboboxB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        to_date_comboboxB.setBorder(null);
        to_date_comboboxB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                to_date_comboboxBActionPerformed(evt);
            }
        });
        panelB.add(to_date_comboboxB, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 210, 100, 40));

        to_month_comboboxB.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        to_month_comboboxB.setForeground(new java.awt.Color(44, 62, 80));
        to_month_comboboxB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        to_month_comboboxB.setBorder(null);
        panelB.add(to_month_comboboxB, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 210, 100, 40));

        to_year_comboboxB.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        to_year_comboboxB.setForeground(new java.awt.Color(44, 62, 80));
        to_year_comboboxB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        to_year_comboboxB.setBorder(null);
        panelB.add(to_year_comboboxB, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 210, 100, 40));

        add_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        add_buttonA.setMaximumSize(new java.awt.Dimension(200, 200));
        add_buttonA.setMinimumSize(new java.awt.Dimension(200, 200));
        add_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                add_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                add_buttonAMouseExited(evt);
            }
        });
        add_buttonA.setLayout(null);

        add_labelB.setBackground(new java.awt.Color(54, 33, 89));
        add_labelB.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        add_labelB.setForeground(new java.awt.Color(54, 33, 89));
        add_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_labelB.setText("ADD");
        add_buttonA.add(add_labelB);
        add_labelB.setBounds(30, 0, 120, 50);

        panelB.add(add_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 180, 50));

        ScrollPaneB.setViewportView(panelB);

        bg.add(ScrollPaneB, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 500));

        refresh_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        refresh_buttonA.setMaximumSize(new java.awt.Dimension(200, 200));
        refresh_buttonA.setMinimumSize(new java.awt.Dimension(200, 200));
        refresh_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refresh_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refresh_buttonAMouseExited(evt);
            }
        });
        refresh_buttonA.setLayout(null);

        refresh_labelC.setBackground(new java.awt.Color(54, 33, 89));
        refresh_labelC.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        refresh_labelC.setForeground(new java.awt.Color(54, 33, 89));
        refresh_labelC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refresh_labelC.setText("REFRESH");
        refresh_buttonA.add(refresh_labelC);
        refresh_labelC.setBounds(50, 0, 80, 50);

        bg.add(refresh_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 180, 50));

        print_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        print_buttonA.setMaximumSize(new java.awt.Dimension(95, 25));
        print_buttonA.setMinimumSize(new java.awt.Dimension(95, 25));
        print_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                print_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                print_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                print_buttonAMouseExited(evt);
            }
        });
        print_buttonA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        print_labelB.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        print_labelB.setForeground(new java.awt.Color(54, 33, 89));
        print_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print_labelB.setText("PRINT");
        print_buttonA.add(print_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 13, 71, 24));

        bg.add(print_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, 50));

        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void move_panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMouseDragged
        this.setLocation(this.getX() +evt.getX() -mouseX, this.getY() + evt.getY() -mouseY);
    }//GEN-LAST:event_move_panelMouseDragged

    private void move_panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMousePressed
        mouseX =evt.getX();
        mouseY =evt.getY();
    }//GEN-LAST:event_move_panelMousePressed

    private void exit_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_iconMouseClicked
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit the program?", "Exit Program", JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            dispose();
            db.create_connection(false);
        }
    }//GEN-LAST:event_exit_iconMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        setState(this.ICONIFIED);// TODO add your handling code here:
    }//GEN-LAST:event_minimizeMouseClicked

    private void go_back_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_go_back_labelMouseClicked
        if(back_button){
          
            new home(1).setVisible(true);
            this.setVisible(false);
            back_button=false;
        }
    }//GEN-LAST:event_go_back_labelMouseClicked

    private void menuAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAMouseClicked
        menuA.setBackground(new java.awt.Color(85,65,118));
        menuB.setBackground(new java.awt.Color(64,43,100));

        ScrollPaneB.setVisible(false);
        panelA.setVisible(true);
        
        refresh_buttonA.setVisible(true);
        print_buttonA.setVisible(true);
        
        try{
            Statement st = con.createStatement();
            String query ="select *from bat_tenure";
            ResultSet rs = st.executeQuery(query);
            small.setRowCount(0);
            int count =0;
            String loc,to,from;
            while(rs.next()){
                count=count+1;
                loc=rs.getString("Location");
                from=rs.getString("from_");
                to=rs.getString("to_");
                small.addRow(new Object[]{
                   count,from,to,loc
                });
            }
        }
        catch(Exception e){
            System.out.print("\n"+e);
        }
    }//GEN-LAST:event_menuAMouseClicked

    private void menuBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBMouseClicked
        menuB.setBackground(new java.awt.Color(85,65,118));
        menuA.setBackground(new java.awt.Color(64,43,100));
        
        ScrollPaneB.setVisible(true);
        panelA.setVisible(false);
        
        refresh_buttonA.setVisible(false);
        print_buttonA.setVisible(false);
    }//GEN-LAST:event_menuBMouseClicked

    private void print_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseClicked
        title_label.grabFocus();
        try{ 
            path_file paths=new path_file();
            PrintWriter pw=new PrintWriter(new File((paths.csv + "\\bat_tenure.csv")));
            StringBuilder sb=new StringBuilder();
            String query="Select * from bat_tenure";
            
            sb.append("Location      \t");
            sb.append(",");
            sb.append("Date From            \t");
            sb.append(",");
            sb.append("Date To            \t");
            sb.append("\r\n");
            ResultSet rs = null;
            Statement st = con.createStatement();
            rs=st.executeQuery(query);  
            
            while(rs.next()){
                if(rs.getString("Location").contains(","))
                    sb.append("\""+rs.getString("Location")+"\"");
                else
                    sb.append(rs.getString("Location"));
                sb.append(",");
                sb.append(rs.getString("from_"));
                sb.append(",");
                sb.append(rs.getString("to_"));
                sb.append("\r\n");
            }
            pw.write(sb.toString());
            pw.close();
            JOptionPane.showMessageDialog(null,"Successfully Converted to CSV");
            Desktop.getDesktop().open(new File(paths.csv + "/bat_tenure.csv"));
        }
        catch(Exception e){
            System.out.print("\n"+e);
            String er=e.getMessage();
            if(er.contains("The process cannot access the file because it is being used by another process")){
                JOptionPane.showMessageDialog(null,"Please close the CSV file first!");
            }
        }
    }//GEN-LAST:event_print_buttonAMouseClicked

    private void print_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseEntered
        print_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_print_buttonAMouseEntered

    private void print_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonAMouseExited
        print_buttonA.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_print_buttonAMouseExited

    private void add_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_buttonAMouseClicked
        try{
            PreparedStatement stmt = null;
            String loc=location_textfieldB.getText();
            //from date 
            String year = (String) from_year_comboboxB.getSelectedItem();
            String month = (String) from_month_comboboxB.getSelectedItem();
            String date = (String) from_date_comboboxB.getSelectedItem();
            String date_from = date + "-" + month + "-" + year;
            int y = Integer.parseInt(year);
            int m = Integer.parseInt(month);
            int d = Integer.parseInt(date);
            //to date 
            String year1 = (String) to_year_comboboxB.getSelectedItem();
            String month1 = (String) to_month_comboboxB.getSelectedItem();
            String date1 = (String) to_date_comboboxB.getSelectedItem();
            String date_to = date1 + "-" + month1 + "-" + year1;
            int y1 = Integer.parseInt(year1);
            int m1 = Integer.parseInt(month1);
            int d1 = Integer.parseInt(date1);
            String err="";
            boolean check_all_tf = (loc != null && !loc.trim().isEmpty());
            boolean check_all_dd = !((y % 4 == 0 && m == 2 && (d > 29)) || ((m == 2 || m == 4 || m == 6 || m == 9 || m == 11) && d == 31) || (m == 2 && d > 28 && y % 4 != 0))&&!((y1 % 4 == 0 && m1 == 2 && (d1 > 29)) || ((m1 == 2 || m1 == 4 || m1 == 6 || m1 == 9 || m1 == 11) && d1 == 31) || (m1 == 2 && d1 > 28 && y1 % 4 != 0));
            if(check_all_tf && check_all_dd){
                String query = "insert into bat_tenure " + "values(?,?,?)";
                stmt = con.prepareStatement(query);
                stmt.setString(1, loc);
                stmt.setString(2, date_from);
                stmt.setString(3, date_to);
                stmt.execute();
                JOptionPane.showMessageDialog(null, "Data inserted successfully");
                //date to
                to_year_comboboxB.setSelectedIndex(0);
                to_month_comboboxB.setSelectedIndex(0);
                to_date_comboboxB.setSelectedIndex(0);
                
                //date from
                from_year_comboboxB.setSelectedIndex(0);
                from_month_comboboxB.setSelectedIndex(0);
                from_date_comboboxB.setSelectedIndex(0);
                location_textfieldB.setText("");
            }
            else{
                System.out.print("\ninside else");
                if (loc == null || loc.trim().isEmpty()) {
                        err = err + "\nLocation Field Empty";
                }
                if (((y % 4 == 0 && m == 2 && (d > 29)) || ((m == 2 || m == 4 || m == 6 || m == 9 || m == 11) && d == 31) || (m == 2 && d > 28 && y % 4 != 0))) {
                        err = err + "\nInvalid From Date Format";
                }
                if (((y1 % 4 == 0 && m1 == 2 && (d1 > 29)) || ((m1 == 2 || m1 == 4 || m1 == 6 || m1 == 9 || m1 == 11) && d1 == 31) || (m1 == 2 && d1 > 28 && y1 % 4 != 0))) {
                        err = err + "\nInvalid To Date Format";
                }
                if (!err.trim().isEmpty()) {
                        JOptionPane.showMessageDialog(null, err);
                }
            }
        }
        catch(Exception e){
            System.out.print("\n"+e);
            String exe = e.getMessage();
                if (exe.contains("Duplicate entry")) {
                    JOptionPane.showMessageDialog(null, "Data not inserted!\nEntered Location exists!");
                } else if (exe.contains("For input")) {
                    JOptionPane.showMessageDialog(null, "\nPlease Re-Check Date Formats");
                } else {
                    JOptionPane.showMessageDialog(null, "Data not inserted!");
                }
        }
    }//GEN-LAST:event_add_buttonAMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //for a centered frame
       
        try{
            Statement st = con.createStatement();
            String query ="select *from bat_tenure";
            ResultSet rs = st.executeQuery(query);
            small.setRowCount(0);
            int count =0;
            String loc,to,from;
            while(rs.next()){
                count=count+1;
                loc=rs.getString("Location");
                from=rs.getString("from_");
                to=rs.getString("to_");
                small.addRow(new Object[]{
                   count,from,to,loc
                });
            }
        }
        catch(Exception e){
            System.out.print("\n"+e);
        }
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        
        //for a centered frame
    }//GEN-LAST:event_formWindowOpened

    private void to_date_comboboxBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_to_date_comboboxBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_to_date_comboboxBActionPerformed

    private void refresh_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonAMouseEntered
        refresh_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_refresh_buttonAMouseEntered

    private void refresh_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonAMouseExited
        refresh_buttonA.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_refresh_buttonAMouseExited

    private void add_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_buttonAMouseEntered
        add_buttonA.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_add_buttonAMouseEntered

    private void add_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_buttonAMouseExited
        add_buttonA.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_add_buttonAMouseExited

    private void refresh_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonAMouseClicked
        // TODO add your handling code here:
        try{
            Statement st = con.createStatement();
            String query ="select *from bat_tenure";
            ResultSet rs = st.executeQuery(query);
            small.setRowCount(0);
            int count =0;
            String loc,to,from;
            while(rs.next()){
                count=count+1;
                loc=rs.getString("Location");
                from=rs.getString("from_");
                to=rs.getString("to_");
                small.addRow(new Object[]{
                   count,from,to,loc
                });
            }
        }
        catch(Exception e){
            System.out.print("\n"+e);
        }
    }//GEN-LAST:event_refresh_buttonAMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tenure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tenure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tenure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tenure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tenure().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ScrollPaneA;
    private javax.swing.JScrollPane ScrollPaneB;
    private javax.swing.JTable TableA;
    private javax.swing.JPanel add_buttonA;
    private javax.swing.JLabel add_labelB;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel exit_icon;
    private javax.swing.JComboBox<String> from_date_comboboxB;
    private javax.swing.JLabel from_labelB;
    private javax.swing.JComboBox<String> from_month_comboboxB;
    private javax.swing.JComboBox<String> from_year_comboboxB;
    private javax.swing.JLabel go_back_label;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel location_labelB;
    private javax.swing.JTextField location_textfieldB;
    private javax.swing.JSeparator location_underlineB;
    private javax.swing.JPanel menuA;
    private javax.swing.JLabel menuA_icon;
    private javax.swing.JLabel menuA_label;
    private javax.swing.JPanel menuB;
    private javax.swing.JLabel menuB_icon;
    private javax.swing.JLabel menuB_label;
    private javax.swing.JLabel minimize;
    private javax.swing.JPanel move_panel;
    private javax.swing.JPanel panelA;
    private javax.swing.JPanel panelB;
    private javax.swing.JPanel print_buttonA;
    private javax.swing.JLabel print_labelB;
    private javax.swing.JPanel refresh_buttonA;
    private javax.swing.JLabel refresh_labelC;
    private javax.swing.JSeparator separator;
    private javax.swing.JPanel side_pane;
    private javax.swing.JLabel title_icon;
    private javax.swing.JLabel title_label;
    private javax.swing.JLabel title_label1;
    private javax.swing.JComboBox<String> to_date_comboboxB;
    private javax.swing.JLabel to_labelB;
    private javax.swing.JComboBox<String> to_month_comboboxB;
    private javax.swing.JComboBox<String> to_year_comboboxB;
    // End of variables declaration//GEN-END:variables
}
