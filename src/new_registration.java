
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.Book;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileOutputStream;
import java.nio.file.*;
import java.nio.file.Paths;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Aditya Pandey
 */
public class new_registration extends javax.swing.JFrame {

    /**
     * Creates new form new_registration
     */
    private boolean go_back = true;
    Database db = new Database();
    Connection c = db.create_connection(true);
    Statement s;

    //for storing filepath of selected file
    String filepath;

    private int mouseX, mouseY;
    
    DefaultTableModel model_fullscreen, model_table;
    public new_registration() {
        initComponents();
        
        
        ScrollPaneA.getVerticalScrollBar().setUnitIncrement(16);
        ScrollPaneB.getVerticalScrollBar().setUnitIncrement(16);
        ScrollPaneC.getVerticalScrollBar().setUnitIncrement(16);
        fullscreen_ScrollPane.getVerticalScrollBar().setUnitIncrement(16);
        
        
        print_buttonC.setVisible(false);
        refresh_buttonC.setVisible(false);
        fullscreen_buttonC.setVisible(false);
        print_buttonB.setVisible(false);
        remove_buttonB.setVisible(false);
        
        
        model_fullscreen=(DefaultTableModel) fullscreen_table.getModel();
        model_table=(DefaultTableModel) TableC.getModel();
        try {
            s = c.createStatement();
        } catch (Exception ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        move_panel = new javax.swing.JPanel();
        bg = new javax.swing.JPanel();
        exit_icon = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        separator = new javax.swing.JSeparator();
        side_pane = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        go_back_label = new javax.swing.JLabel();
        menuA = new javax.swing.JPanel();
        menuA_icon = new javax.swing.JLabel();
        menuA_label = new javax.swing.JLabel();
        menuC = new javax.swing.JPanel();
        menuC_icon = new javax.swing.JLabel();
        menuC_label = new javax.swing.JLabel();
        menuB = new javax.swing.JPanel();
        menuB_icon = new javax.swing.JLabel();
        menuB_label = new javax.swing.JLabel();
        title_label = new javax.swing.JLabel();
        title_icon = new javax.swing.JLabel();
        ScrollPaneA = new javax.swing.JScrollPane();
        panelA = new javax.swing.JPanel();
        upload_photo_labelA = new javax.swing.JLabel();
        rank_comboboxA = new javax.swing.JComboBox<>();
        name_underlineA = new javax.swing.JSeparator();
        name_textfieldA = new javax.swing.JTextField();
        name_labelA = new javax.swing.JLabel();
        medical_category_labelA = new javax.swing.JLabel();
        birth_labelA = new javax.swing.JLabel();
        birth_year_comboboxA = new javax.swing.JComboBox<>();
        birth_date_comboboxA = new javax.swing.JComboBox<>();
        birth_month_comboboxA = new javax.swing.JComboBox<>();
        courses_done_labelA = new javax.swing.JLabel();
        courses_underlineA = new javax.swing.JSeparator();
        courses_textfieldA = new javax.swing.JTextField();
        indl_ID_details_label = new javax.swing.JLabel();
        army_number_underlineA = new javax.swing.JSeparator();
        army_number_textfieldA = new javax.swing.JTextField();
        army_number_labelA = new javax.swing.JLabel();
        company_underlineA = new javax.swing.JSeparator();
        company_textfieldA = new javax.swing.JTextField();
        company_labelA = new javax.swing.JLabel();
        add_buttonA = new javax.swing.JPanel();
        add_labelA = new javax.swing.JLabel();
        panelA_bottom_line = new javax.swing.JSeparator();
        indl_mob_labelA = new javax.swing.JLabel();
        indl_mob_underlineA = new javax.swing.JSeparator();
        indl_mob_textfieldA = new javax.swing.JTextField();
        DOJ_labelA = new javax.swing.JLabel();
        DOJ_date_comboboxA = new javax.swing.JComboBox<>();
        DOJ_month_comboboxA = new javax.swing.JComboBox<>();
        DOJ_year_comboboxA = new javax.swing.JComboBox<>();
        medical_category_underlineA = new javax.swing.JSeparator();
        medical_category_textfieldA = new javax.swing.JTextField();
        rank_labelA = new javax.swing.JLabel();
        select_file_buttonA = new javax.swing.JPanel();
        select_file_labelA = new javax.swing.JLabel();
        indl_underline0 = new javax.swing.JSeparator();
        indl_Icard_numberA = new javax.swing.JTextField();
        indl_underline1 = new javax.swing.JSeparator();
        indl_PAN_A = new javax.swing.JTextField();
        indl_underline2 = new javax.swing.JSeparator();
        indl_aadharA = new javax.swing.JTextField();
        indl_underline3 = new javax.swing.JSeparator();
        indl_mailA = new javax.swing.JTextField();
        indl_bank_nameA = new javax.swing.JTextField();
        indl_account_numberA = new javax.swing.JTextField();
        indl_underline4 = new javax.swing.JSeparator();
        indl_underline5 = new javax.swing.JSeparator();
        midA1 = new javax.swing.JSeparator();
        village_underlineA = new javax.swing.JSeparator();
        villageA = new javax.swing.JTextField();
        teh_underlineA = new javax.swing.JSeparator();
        tehA = new javax.swing.JTextField();
        PO_underlineA = new javax.swing.JSeparator();
        PO_A = new javax.swing.JTextField();
        state_underlineA = new javax.swing.JSeparator();
        stateA = new javax.swing.JTextField();
        PIN_A = new javax.swing.JTextField();
        distA = new javax.swing.JTextField();
        dist_underlineA = new javax.swing.JSeparator();
        PIN_underlineA = new javax.swing.JSeparator();
        midA3 = new javax.swing.JSeparator();
        address_labelA = new javax.swing.JLabel();
        label_91A = new javax.swing.JLabel();
        indl_IFSC_A = new javax.swing.JTextField();
        indl_branchA = new javax.swing.JTextField();
        indl_underline6 = new javax.swing.JSeparator();
        indl_underline7 = new javax.swing.JSeparator();
        NOK_detailsA = new javax.swing.JLabel();
        kin_underlineA3 = new javax.swing.JSeparator();
        kin_PAN_A = new javax.swing.JTextField();
        kin_underlineA4 = new javax.swing.JSeparator();
        kin_aadharA = new javax.swing.JTextField();
        kin_underlineA5 = new javax.swing.JSeparator();
        kin_mailA = new javax.swing.JTextField();
        kin_bank_nameA = new javax.swing.JTextField();
        kin_account_numberA = new javax.swing.JTextField();
        kin_underlineA6 = new javax.swing.JSeparator();
        kin_underlineA7 = new javax.swing.JSeparator();
        midA2 = new javax.swing.JSeparator();
        kin_IFSC_A = new javax.swing.JTextField();
        kin_branchA = new javax.swing.JTextField();
        kin_underlineA8 = new javax.swing.JSeparator();
        kin_underlineA9 = new javax.swing.JSeparator();
        kin_underlineA0 = new javax.swing.JSeparator();
        kin_NOK_A = new javax.swing.JTextField();
        kin_underlineA1 = new javax.swing.JSeparator();
        kin_mobile_numberA = new javax.swing.JTextField();
        kin_underlineA2 = new javax.swing.JSeparator();
        kin_relation_A = new javax.swing.JTextField();
        ScrollPaneB = new javax.swing.JScrollPane();
        panelB = new javax.swing.JPanel();
        service_number_underlineB = new javax.swing.JSeparator();
        service_number_textfieldB = new javax.swing.JTextField();
        service_number_labelB = new javax.swing.JLabel();
        panelB_bottom_line = new javax.swing.JSeparator();
        okayB = new javax.swing.JLabel();
        name_labelB = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        Photo = new javax.swing.JPanel();
        photo_labelB = new javax.swing.JLabel();
        rank_labelB = new javax.swing.JLabel();
        rank = new javax.swing.JLabel();
        DOJ_labelB = new javax.swing.JLabel();
        DOJ = new javax.swing.JLabel();
        company_labelB = new javax.swing.JLabel();
        company = new javax.swing.JLabel();
        indl_mobileB = new javax.swing.JLabel();
        indl_mobile_labelB = new javax.swing.JLabel();
        NOK_name_labelB = new javax.swing.JLabel();
        medical_category_labelB = new javax.swing.JLabel();
        courses_done_labelB = new javax.swing.JLabel();
        courses_doneB = new javax.swing.JLabel();
        medical_category = new javax.swing.JLabel();
        NOK_nameB = new javax.swing.JLabel();
        DOB_labelB = new javax.swing.JLabel();
        DOB = new javax.swing.JLabel();
        NOK_relation_labelB = new javax.swing.JLabel();
        NOK_relationB = new javax.swing.JLabel();
        NOK_mobile_labelB = new javax.swing.JLabel();
        NOK_mobileB = new javax.swing.JLabel();
        address_labelB = new javax.swing.JLabel();
        villC = new javax.swing.JLabel();
        PO_labelB = new javax.swing.JLabel();
        PO_B = new javax.swing.JLabel();
        dist_labelB = new javax.swing.JLabel();
        distB = new javax.swing.JLabel();
        state_labelB = new javax.swing.JLabel();
        stateB = new javax.swing.JLabel();
        teh_labelB = new javax.swing.JLabel();
        tehsil = new javax.swing.JLabel();
        PIN_labelB = new javax.swing.JLabel();
        PIN_B = new javax.swing.JLabel();
        vill_labelB = new javax.swing.JLabel();
        midB1 = new javax.swing.JSeparator();
        panelC = new javax.swing.JPanel();
        ScrollPaneC = new javax.swing.JScrollPane();
        TableC = new javax.swing.JTable();
        fullscreen_buttonC = new javax.swing.JPanel();
        fullscreen_labelC = new javax.swing.JLabel();
        refresh_buttonC = new javax.swing.JPanel();
        refresh_labelC = new javax.swing.JLabel();
        remove_buttonB = new javax.swing.JPanel();
        remove_labelB = new javax.swing.JLabel();
        print_buttonB = new javax.swing.JPanel();
        print_labelB = new javax.swing.JLabel();
        print_buttonC = new javax.swing.JPanel();
        print_labelC = new javax.swing.JLabel();
        fullscreen_panel = new javax.swing.JPanel();
        fullscreen_ScrollPane = new javax.swing.JScrollPane();
        fullscreen_table = new javax.swing.JTable();
        exit_fullscreen_button = new javax.swing.JPanel();
        exit_fullscreen_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(0, 0));
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 1280, 720));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        move_panel.setFocusable(false);
        move_panel.setOpaque(false);
        move_panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                move_panelMouseDragged(evt);
            }
        });
        move_panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                move_panelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout move_panelLayout = new javax.swing.GroupLayout(move_panel);
        move_panel.setLayout(move_panelLayout);
        move_panelLayout.setHorizontalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
        );
        move_panelLayout.setVerticalGroup(
            move_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        getContentPane().add(move_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 30));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setMaximumSize(new java.awt.Dimension(1280, 720));
        bg.setMinimumSize(new java.awt.Dimension(1280, 720));
        bg.setPreferredSize(new java.awt.Dimension(1280, 720));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exit_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/remove_purple.png"))); // NOI18N
        exit_icon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_iconMouseClicked(evt);
            }
        });
        bg.add(exit_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1215, 30, -1, -1));

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/minimize-purple.png"))); // NOI18N
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });
        bg.add(minimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 30, -1, 40));

        separator.setForeground(new java.awt.Color(54, 33, 89));
        separator.setPreferredSize(new java.awt.Dimension(50, 20));
        bg.add(separator, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 890, 10));

        side_pane.setBackground(new java.awt.Color(54, 33, 89));
        side_pane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        side_pane.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 280, 50));

        go_back_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/left-arrow.png"))); // NOI18N
        go_back_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                go_back_labelMouseClicked(evt);
            }
        });
        side_pane.add(go_back_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAMouseClicked(evt);
            }
        });

        menuA_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuA_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuA_icon.setText("A");

        menuA_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuA_label.setForeground(new java.awt.Color(255, 255, 255));
        menuA_label.setText("New Registration");

        javax.swing.GroupLayout menuALayout = new javax.swing.GroupLayout(menuA);
        menuA.setLayout(menuALayout);
        menuALayout.setHorizontalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuA_icon)
                .addGap(33, 33, 33)
                .addComponent(menuA_label))
        );
        menuALayout.setVerticalGroup(
            menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuALayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuA_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuA_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 330, 60));

        menuC.setBackground(new java.awt.Color(64, 43, 100));
        menuC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuCMouseClicked(evt);
            }
        });

        menuC_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuC_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuC_icon.setText("C");

        menuC_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuC_label.setForeground(new java.awt.Color(255, 255, 255));
        menuC_label.setText("View All");

        javax.swing.GroupLayout menuCLayout = new javax.swing.GroupLayout(menuC);
        menuC.setLayout(menuCLayout);
        menuCLayout.setHorizontalGroup(
            menuCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuCLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuC_icon)
                .addGap(33, 33, 33)
                .addComponent(menuC_label))
        );
        menuCLayout.setVerticalGroup(
            menuCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuCLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(menuCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuC_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(menuC_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        side_pane.add(menuC, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 330, 60));

        menuB.setBackground(new java.awt.Color(64, 43, 100));
        menuB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuBMouseClicked(evt);
            }
        });

        menuB_icon.setForeground(new java.awt.Color(255, 255, 255));
        menuB_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        menuB_icon.setText("B");

        menuB_label.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        menuB_label.setForeground(new java.awt.Color(255, 255, 255));
        menuB_label.setText("View Registration");

        javax.swing.GroupLayout menuBLayout = new javax.swing.GroupLayout(menuB);
        menuB.setLayout(menuBLayout);
        menuBLayout.setHorizontalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuBLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(menuB_icon)
                .addGap(33, 33, 33)
                .addComponent(menuB_label)
                .addContainerGap(99, Short.MAX_VALUE))
        );
        menuBLayout.setVerticalGroup(
            menuBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuB_label, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
            .addComponent(menuB_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        side_pane.add(menuB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 320, 60));

        title_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        title_label.setForeground(new java.awt.Color(255, 255, 255));
        title_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_label.setText("Registration");
        side_pane.add(title_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 135, 190, 40));

        title_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title_icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/new user white.png"))); // NOI18N
        side_pane.add(title_icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 117, 70, 70));

        bg.add(side_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 740));

        ScrollPaneA.setBorder(null);
        ScrollPaneA.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelA.setBackground(new java.awt.Color(255, 255, 255));
        panelA.setFocusable(false);
        panelA.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        upload_photo_labelA.setBackground(new java.awt.Color(255, 255, 255));
        upload_photo_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        upload_photo_labelA.setForeground(new java.awt.Color(51, 51, 51));
        upload_photo_labelA.setText("Upload Photo");
        panelA.add(upload_photo_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 380, -1, 40));

        rank_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        rank_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        rank_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sepoy", "Naik", "Havildar", "Naib Subedar", "Subedar", "Subedar Major", "Lieutenant", "Captain", "Major", "Lt Colonel", "Colonel", "Brigadier", "Major General", "Lt General", "General" }));
        rank_comboboxA.setBorder(null);
        panelA.add(rank_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 420, 320, 40));

        name_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(name_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 320, 20));

        name_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        name_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        name_textfieldA.setBorder(null);
        name_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(name_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, 320, 40));

        name_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        name_labelA.setForeground(new java.awt.Color(51, 51, 51));
        name_labelA.setText("Name");
        panelA.add(name_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 50, -1, 40));

        medical_category_labelA.setBackground(new java.awt.Color(255, 255, 255));
        medical_category_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        medical_category_labelA.setForeground(new java.awt.Color(51, 51, 51));
        medical_category_labelA.setText("Medical Category");
        panelA.add(medical_category_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 160, -1, 40));

        birth_labelA.setBackground(new java.awt.Color(255, 255, 255));
        birth_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        birth_labelA.setForeground(new java.awt.Color(51, 51, 51));
        birth_labelA.setText("Date of Birth");
        panelA.add(birth_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, -1, 40));

        birth_year_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        birth_year_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        birth_year_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        birth_year_comboboxA.setBorder(null);
        panelA.add(birth_year_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, 100, 40));

        birth_date_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        birth_date_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        birth_date_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        birth_date_comboboxA.setBorder(null);
        panelA.add(birth_date_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 100, 40));

        birth_month_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        birth_month_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        birth_month_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        birth_month_comboboxA.setBorder(null);
        panelA.add(birth_month_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 100, 40));

        courses_done_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        courses_done_labelA.setForeground(new java.awt.Color(51, 51, 51));
        courses_done_labelA.setText("Courses Done");
        panelA.add(courses_done_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 490, -1, 40));

        courses_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(courses_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 570, 320, 20));

        courses_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        courses_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        courses_textfieldA.setBorder(null);
        courses_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(courses_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 530, 320, 40));

        indl_ID_details_label.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        indl_ID_details_label.setForeground(new java.awt.Color(51, 51, 51));
        indl_ID_details_label.setText("Indl ID Details");
        panelA.add(indl_ID_details_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 690, -1, 40));

        army_number_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(army_number_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 320, 20));

        army_number_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        army_number_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        army_number_textfieldA.setBorder(null);
        army_number_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        army_number_textfieldA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                army_number_textfieldAFocusGained(evt);
            }
        });
        army_number_textfieldA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                army_number_textfieldAActionPerformed(evt);
            }
        });
        panelA.add(army_number_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 320, 40));

        army_number_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        army_number_labelA.setForeground(new java.awt.Color(51, 51, 51));
        army_number_labelA.setText("Army Number");
        panelA.add(army_number_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 40));

        company_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(company_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 320, 20));

        company_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        company_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        company_textfieldA.setBorder(null);
        company_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(company_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 320, 40));

        company_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        company_labelA.setForeground(new java.awt.Color(51, 51, 51));
        company_labelA.setText("Company");
        panelA.add(company_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, -1, 40));

        add_buttonA.setForeground(new java.awt.Color(240, 240, 240));
        add_buttonA.setMaximumSize(new java.awt.Dimension(95, 25));
        add_buttonA.setMinimumSize(new java.awt.Dimension(95, 25));
        add_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                add_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                add_buttonAMouseExited(evt);
            }
        });
        add_buttonA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        add_labelA.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        add_labelA.setForeground(new java.awt.Color(54, 33, 89));
        add_labelA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add_labelA.setText("ADD");
        add_buttonA.add(add_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 13, 71, 24));

        panelA.add(add_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 1790, 180, 50));

        panelA_bottom_line.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(panelA_bottom_line, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 1900, 910, -1));

        indl_mob_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        indl_mob_labelA.setForeground(new java.awt.Color(51, 51, 51));
        indl_mob_labelA.setText("Indl Mob No.");
        panelA.add(indl_mob_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 490, -1, 40));

        indl_mob_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(indl_mob_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 570, 260, 20));

        indl_mob_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        indl_mob_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        indl_mob_textfieldA.setBorder(null);
        indl_mob_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(indl_mob_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 530, 260, 40));

        DOJ_labelA.setBackground(new java.awt.Color(255, 255, 255));
        DOJ_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        DOJ_labelA.setForeground(new java.awt.Color(51, 51, 51));
        DOJ_labelA.setText("Date of Joining");
        panelA.add(DOJ_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 270, -1, 40));

        DOJ_date_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        DOJ_date_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        DOJ_date_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        DOJ_date_comboboxA.setBorder(null);
        DOJ_date_comboboxA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DOJ_date_comboboxAActionPerformed(evt);
            }
        });
        panelA.add(DOJ_date_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 310, 100, 40));

        DOJ_month_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        DOJ_month_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        DOJ_month_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        DOJ_month_comboboxA.setBorder(null);
        panelA.add(DOJ_month_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 310, 100, 40));

        DOJ_year_comboboxA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        DOJ_year_comboboxA.setForeground(new java.awt.Color(44, 62, 80));
        DOJ_year_comboboxA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040", "2041", "2042", "2043", "2044", "2045", "2046", "2047", "2048", "2049", "2050", "2051", "2052", "2053", "2054", "2055", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2071", "2072", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2085", "2086", "2087", "2088", "2089", "2090", "2091", "2092", "2093", "2094", "2095", "2096", "2097", "2098", "2099", "2100", " " }));
        DOJ_year_comboboxA.setBorder(null);
        panelA.add(DOJ_year_comboboxA, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 310, 100, 40));

        medical_category_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(medical_category_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 240, 320, 20));

        medical_category_textfieldA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        medical_category_textfieldA.setForeground(new java.awt.Color(54, 33, 89));
        medical_category_textfieldA.setBorder(null);
        medical_category_textfieldA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        panelA.add(medical_category_textfieldA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 200, 320, 40));

        rank_labelA.setBackground(new java.awt.Color(255, 255, 255));
        rank_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        rank_labelA.setForeground(new java.awt.Color(51, 51, 51));
        rank_labelA.setText("Rank");
        panelA.add(rank_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, -1, 40));

        select_file_buttonA.setMaximumSize(new java.awt.Dimension(200, 200));
        select_file_buttonA.setMinimumSize(new java.awt.Dimension(200, 200));
        select_file_buttonA.setPreferredSize(new java.awt.Dimension(200, 200));
        select_file_buttonA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                select_file_buttonAMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                select_file_buttonAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                select_file_buttonAMouseExited(evt);
            }
        });
        select_file_buttonA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        select_file_labelA.setBackground(new java.awt.Color(54, 33, 89));
        select_file_labelA.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        select_file_labelA.setForeground(new java.awt.Color(54, 33, 89));
        select_file_labelA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        select_file_labelA.setText("Select File");
        select_file_buttonA.add(select_file_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 240, 40));

        panelA.add(select_file_buttonA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 420, 320, 40));

        indl_underline0.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(indl_underline0, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 780, 320, 10));

        indl_Icard_numberA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        indl_Icard_numberA.setForeground(new java.awt.Color(102, 102, 102));
        indl_Icard_numberA.setText("ICardNumber");
        indl_Icard_numberA.setBorder(null);
        indl_Icard_numberA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        indl_Icard_numberA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                indl_Icard_numberAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                indl_Icard_numberAFocusLost(evt);
            }
        });
        panelA.add(indl_Icard_numberA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 740, 320, 40));

        indl_underline1.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(indl_underline1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 780, 320, 10));

        indl_PAN_A.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        indl_PAN_A.setForeground(new java.awt.Color(102, 102, 102));
        indl_PAN_A.setText("PAN");
        indl_PAN_A.setBorder(null);
        indl_PAN_A.setMargin(new java.awt.Insets(2, 4, 2, 2));
        indl_PAN_A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                indl_PAN_AFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                indl_PAN_AFocusLost(evt);
            }
        });
        panelA.add(indl_PAN_A, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 740, 320, 40));

        indl_underline2.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(indl_underline2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 840, 320, 10));

        indl_aadharA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        indl_aadharA.setForeground(new java.awt.Color(102, 102, 102));
        indl_aadharA.setText("Aadhar");
        indl_aadharA.setBorder(null);
        indl_aadharA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        indl_aadharA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                indl_aadharAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                indl_aadharAFocusLost(evt);
            }
        });
        panelA.add(indl_aadharA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 800, 320, 40));

        indl_underline3.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(indl_underline3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 840, 320, 10));

        indl_mailA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        indl_mailA.setForeground(new java.awt.Color(102, 102, 102));
        indl_mailA.setText("E-Mail");
        indl_mailA.setBorder(null);
        indl_mailA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        indl_mailA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                indl_mailAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                indl_mailAFocusLost(evt);
            }
        });
        panelA.add(indl_mailA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 800, 320, 40));

        indl_bank_nameA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        indl_bank_nameA.setForeground(new java.awt.Color(102, 102, 102));
        indl_bank_nameA.setText("Bank Name");
        indl_bank_nameA.setBorder(null);
        indl_bank_nameA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        indl_bank_nameA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                indl_bank_nameAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                indl_bank_nameAFocusLost(evt);
            }
        });
        panelA.add(indl_bank_nameA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 860, 320, 40));

        indl_account_numberA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        indl_account_numberA.setForeground(new java.awt.Color(102, 102, 102));
        indl_account_numberA.setText("Account Number");
        indl_account_numberA.setBorder(null);
        indl_account_numberA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        indl_account_numberA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                indl_account_numberAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                indl_account_numberAFocusLost(evt);
            }
        });
        panelA.add(indl_account_numberA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 860, 320, 40));

        indl_underline4.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(indl_underline4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 900, 320, 10));

        indl_underline5.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(indl_underline5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 900, 320, 10));

        midA1.setForeground(new java.awt.Color(204, 204, 255));
        panelA.add(midA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 640, 390, 10));

        village_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(village_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1620, 320, 10));

        villageA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        villageA.setForeground(new java.awt.Color(102, 102, 102));
        villageA.setText("Vill");
        villageA.setBorder(null);
        villageA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        villageA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                villageAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                villageAFocusLost(evt);
            }
        });
        panelA.add(villageA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1580, 320, 40));

        teh_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(teh_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1620, 320, 10));

        tehA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        tehA.setForeground(new java.awt.Color(102, 102, 102));
        tehA.setText("Teh");
        tehA.setBorder(null);
        tehA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        tehA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tehAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tehAFocusLost(evt);
            }
        });
        panelA.add(tehA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1580, 320, 40));

        PO_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(PO_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1680, 320, 10));

        PO_A.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        PO_A.setForeground(new java.awt.Color(102, 102, 102));
        PO_A.setText("PO");
        PO_A.setBorder(null);
        PO_A.setMargin(new java.awt.Insets(2, 4, 2, 2));
        PO_A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PO_AFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PO_AFocusLost(evt);
            }
        });
        panelA.add(PO_A, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1640, 320, 40));

        state_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(state_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1680, 320, 10));

        stateA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        stateA.setForeground(new java.awt.Color(102, 102, 102));
        stateA.setText("State");
        stateA.setBorder(null);
        stateA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        stateA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                stateAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                stateAFocusLost(evt);
            }
        });
        panelA.add(stateA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1640, 320, 40));

        PIN_A.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        PIN_A.setForeground(new java.awt.Color(102, 102, 102));
        PIN_A.setText("PIN");
        PIN_A.setBorder(null);
        PIN_A.setMargin(new java.awt.Insets(2, 4, 2, 2));
        PIN_A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PIN_AFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PIN_AFocusLost(evt);
            }
        });
        panelA.add(PIN_A, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1700, 320, 40));

        distA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        distA.setForeground(new java.awt.Color(102, 102, 102));
        distA.setText("Dist");
        distA.setBorder(null);
        distA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        distA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                distAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                distAFocusLost(evt);
            }
        });
        panelA.add(distA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1700, 320, 40));

        dist_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(dist_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1740, 320, 10));

        PIN_underlineA.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(PIN_underlineA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1740, 320, 10));

        midA3.setForeground(new java.awt.Color(204, 204, 255));
        panelA.add(midA3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 1480, 390, 10));

        address_labelA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        address_labelA.setForeground(new java.awt.Color(51, 51, 51));
        address_labelA.setText("Address");
        panelA.add(address_labelA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1530, -1, 40));

        label_91A.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        label_91A.setForeground(new java.awt.Color(51, 51, 51));
        label_91A.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_91A.setText("+91");
        panelA.add(label_91A, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 530, 50, 40));

        indl_IFSC_A.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        indl_IFSC_A.setForeground(new java.awt.Color(102, 102, 102));
        indl_IFSC_A.setText("IFSC");
        indl_IFSC_A.setBorder(null);
        indl_IFSC_A.setMargin(new java.awt.Insets(2, 4, 2, 2));
        indl_IFSC_A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                indl_IFSC_AFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                indl_IFSC_AFocusLost(evt);
            }
        });
        panelA.add(indl_IFSC_A, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 920, 320, 40));

        indl_branchA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        indl_branchA.setForeground(new java.awt.Color(102, 102, 102));
        indl_branchA.setText("Branch");
        indl_branchA.setBorder(null);
        indl_branchA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        indl_branchA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                indl_branchAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                indl_branchAFocusLost(evt);
            }
        });
        panelA.add(indl_branchA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 920, 320, 40));

        indl_underline6.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(indl_underline6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 960, 320, 10));

        indl_underline7.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(indl_underline7, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 960, 320, 10));

        NOK_detailsA.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        NOK_detailsA.setForeground(new java.awt.Color(51, 51, 51));
        NOK_detailsA.setText("Details of Kin");
        panelA.add(NOK_detailsA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1080, -1, 40));

        kin_underlineA3.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_underlineA3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1230, 320, 10));

        kin_PAN_A.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_PAN_A.setForeground(new java.awt.Color(102, 102, 102));
        kin_PAN_A.setText("PAN");
        kin_PAN_A.setBorder(null);
        kin_PAN_A.setMargin(new java.awt.Insets(2, 4, 2, 2));
        kin_PAN_A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kin_PAN_AFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kin_PAN_AFocusLost(evt);
            }
        });
        panelA.add(kin_PAN_A, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1190, 320, 40));

        kin_underlineA4.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_underlineA4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1290, 320, 10));

        kin_aadharA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_aadharA.setForeground(new java.awt.Color(102, 102, 102));
        kin_aadharA.setText("Aadhar");
        kin_aadharA.setBorder(null);
        kin_aadharA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        kin_aadharA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kin_aadharAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kin_aadharAFocusLost(evt);
            }
        });
        panelA.add(kin_aadharA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1250, 320, 40));

        kin_underlineA5.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_underlineA5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1290, 320, 10));

        kin_mailA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_mailA.setForeground(new java.awt.Color(102, 102, 102));
        kin_mailA.setText("E-Mail");
        kin_mailA.setBorder(null);
        kin_mailA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        kin_mailA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kin_mailAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kin_mailAFocusLost(evt);
            }
        });
        panelA.add(kin_mailA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1250, 320, 40));

        kin_bank_nameA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_bank_nameA.setForeground(new java.awt.Color(102, 102, 102));
        kin_bank_nameA.setText("Bank Name");
        kin_bank_nameA.setBorder(null);
        kin_bank_nameA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        kin_bank_nameA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kin_bank_nameAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kin_bank_nameAFocusLost(evt);
            }
        });
        panelA.add(kin_bank_nameA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1310, 320, 40));

        kin_account_numberA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_account_numberA.setForeground(new java.awt.Color(102, 102, 102));
        kin_account_numberA.setText("Account Number");
        kin_account_numberA.setBorder(null);
        kin_account_numberA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        kin_account_numberA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kin_account_numberAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kin_account_numberAFocusLost(evt);
            }
        });
        panelA.add(kin_account_numberA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1310, 320, 40));

        kin_underlineA6.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_underlineA6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1350, 320, 10));

        kin_underlineA7.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_underlineA7, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1350, 320, 10));

        midA2.setForeground(new java.awt.Color(204, 204, 255));
        panelA.add(midA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 1030, 390, 10));

        kin_IFSC_A.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_IFSC_A.setForeground(new java.awt.Color(102, 102, 102));
        kin_IFSC_A.setText("IFSC");
        kin_IFSC_A.setBorder(null);
        kin_IFSC_A.setMargin(new java.awt.Insets(2, 4, 2, 2));
        kin_IFSC_A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kin_IFSC_AFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kin_IFSC_AFocusLost(evt);
            }
        });
        panelA.add(kin_IFSC_A, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1370, 320, 40));

        kin_branchA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_branchA.setForeground(new java.awt.Color(102, 102, 102));
        kin_branchA.setText("Branch");
        kin_branchA.setBorder(null);
        kin_branchA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        kin_branchA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kin_branchAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kin_branchAFocusLost(evt);
            }
        });
        panelA.add(kin_branchA, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1370, 320, 40));

        kin_underlineA8.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_underlineA8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1410, 320, 10));

        kin_underlineA9.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_underlineA9, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1410, 320, 10));

        kin_underlineA0.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_underlineA0, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1170, 320, 10));

        kin_NOK_A.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_NOK_A.setForeground(new java.awt.Color(102, 102, 102));
        kin_NOK_A.setText("NOK");
        kin_NOK_A.setBorder(null);
        kin_NOK_A.setMargin(new java.awt.Insets(2, 4, 2, 2));
        kin_NOK_A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kin_NOK_AFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kin_NOK_AFocusLost(evt);
            }
        });
        panelA.add(kin_NOK_A, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1130, 320, 40));

        kin_underlineA1.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_underlineA1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1170, 320, 10));

        kin_mobile_numberA.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_mobile_numberA.setForeground(new java.awt.Color(102, 102, 102));
        kin_mobile_numberA.setText("Mob No.");
        kin_mobile_numberA.setBorder(null);
        kin_mobile_numberA.setMargin(new java.awt.Insets(2, 4, 2, 2));
        kin_mobile_numberA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kin_mobile_numberAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kin_mobile_numberAFocusLost(evt);
            }
        });
        panelA.add(kin_mobile_numberA, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 1130, 320, 40));

        kin_underlineA2.setForeground(new java.awt.Color(54, 33, 89));
        panelA.add(kin_underlineA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1230, 320, 10));

        kin_relation_A.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        kin_relation_A.setForeground(new java.awt.Color(102, 102, 102));
        kin_relation_A.setText("Relation");
        kin_relation_A.setBorder(null);
        kin_relation_A.setMargin(new java.awt.Insets(2, 4, 2, 2));
        kin_relation_A.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                kin_relation_AFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                kin_relation_AFocusLost(evt);
            }
        });
        panelA.add(kin_relation_A, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 1190, 320, 40));

        ScrollPaneA.setViewportView(panelA);

        bg.add(ScrollPaneA, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 480));

        ScrollPaneB.setBorder(null);
        ScrollPaneB.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelB.setBackground(new java.awt.Color(255, 255, 255));
        panelB.setFocusable(false);
        panelB.setMaximumSize(new java.awt.Dimension(950, 1310));
        panelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        service_number_underlineB.setForeground(new java.awt.Color(54, 33, 89));
        panelB.add(service_number_underlineB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 400, 20));

        service_number_textfieldB.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        service_number_textfieldB.setForeground(new java.awt.Color(54, 33, 89));
        service_number_textfieldB.setBorder(null);
        service_number_textfieldB.setMargin(new java.awt.Insets(2, 4, 2, 2));
        service_number_textfieldB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                service_number_textfieldBKeyPressed(evt);
            }
        });
        panelB.add(service_number_textfieldB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 400, 40));

        service_number_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        service_number_labelB.setForeground(new java.awt.Color(51, 51, 51));
        service_number_labelB.setText("Army Number");
        panelB.add(service_number_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, -1, 40));

        panelB_bottom_line.setForeground(new java.awt.Color(54, 33, 89));
        panelB.add(panelB_bottom_line, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 1020, 910, -1));

        okayB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PNGS/check-mark.png"))); // NOI18N
        okayB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                okayBMouseClicked(evt);
            }
        });
        panelB.add(okayB, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 100, -1, 40));

        name_labelB.setBackground(new java.awt.Color(255, 255, 255));
        name_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        name_labelB.setForeground(new java.awt.Color(51, 51, 51));
        name_labelB.setText("Name");
        panelB.add(name_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, -1, 50));

        name.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        name.setForeground(new java.awt.Color(54, 33, 89));
        name.setText("> XXXXXXX");
        panelB.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, 30));

        Photo.setMaximumSize(new java.awt.Dimension(95, 25));
        Photo.setMinimumSize(new java.awt.Dimension(95, 25));
        Photo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PhotoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PhotoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PhotoMouseExited(evt);
            }
        });
        Photo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Photo.add(photo_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 200));

        panelB.add(Photo, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 80, 180, 200));

        rank_labelB.setBackground(new java.awt.Color(255, 255, 255));
        rank_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        rank_labelB.setForeground(new java.awt.Color(51, 51, 51));
        rank_labelB.setText("Rank");
        panelB.add(rank_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, -1, 50));

        rank.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        rank.setForeground(new java.awt.Color(54, 33, 89));
        rank.setText("> XXXXXXX");
        panelB.add(rank, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 230, -1, 30));

        DOJ_labelB.setBackground(new java.awt.Color(255, 255, 255));
        DOJ_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        DOJ_labelB.setForeground(new java.awt.Color(51, 51, 51));
        DOJ_labelB.setText("Date of Joining");
        panelB.add(DOJ_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 370, -1, 50));

        DOJ.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        DOJ.setForeground(new java.awt.Color(54, 33, 89));
        DOJ.setText("> XXXXXXX");
        panelB.add(DOJ, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 410, -1, 30));

        company_labelB.setBackground(new java.awt.Color(255, 255, 255));
        company_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        company_labelB.setForeground(new java.awt.Color(51, 51, 51));
        company_labelB.setText("Company");
        panelB.add(company_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, -1, 50));

        company.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        company.setForeground(new java.awt.Color(54, 33, 89));
        company.setText("> XXXXXXX");
        panelB.add(company, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, 30));

        indl_mobileB.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        indl_mobileB.setForeground(new java.awt.Color(54, 33, 89));
        indl_mobileB.setText("> XXXXXXX");
        panelB.add(indl_mobileB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 500, -1, 30));

        indl_mobile_labelB.setBackground(new java.awt.Color(255, 255, 255));
        indl_mobile_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        indl_mobile_labelB.setForeground(new java.awt.Color(51, 51, 51));
        indl_mobile_labelB.setText("Indl Mob No.");
        panelB.add(indl_mobile_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 460, -1, 50));

        NOK_name_labelB.setBackground(new java.awt.Color(255, 255, 255));
        NOK_name_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        NOK_name_labelB.setForeground(new java.awt.Color(51, 51, 51));
        NOK_name_labelB.setText("NOK Name");
        panelB.add(NOK_name_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 550, -1, 50));

        medical_category_labelB.setBackground(new java.awt.Color(255, 255, 255));
        medical_category_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        medical_category_labelB.setForeground(new java.awt.Color(51, 51, 51));
        medical_category_labelB.setText("Med Cat");
        panelB.add(medical_category_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, -1, 50));

        courses_done_labelB.setBackground(new java.awt.Color(255, 255, 255));
        courses_done_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        courses_done_labelB.setForeground(new java.awt.Color(51, 51, 51));
        courses_done_labelB.setText("Courses Done");
        panelB.add(courses_done_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 460, -1, 50));

        courses_doneB.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        courses_doneB.setForeground(new java.awt.Color(54, 33, 89));
        courses_doneB.setText("> XXXXXXX");
        panelB.add(courses_doneB, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 500, -1, 30));

        medical_category.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        medical_category.setForeground(new java.awt.Color(54, 33, 89));
        medical_category.setText("> XXXXXXX");
        panelB.add(medical_category, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 320, -1, -1));

        NOK_nameB.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        NOK_nameB.setForeground(new java.awt.Color(54, 33, 89));
        NOK_nameB.setText("> XXXXXXX");
        panelB.add(NOK_nameB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 590, -1, 30));

        DOB_labelB.setBackground(new java.awt.Color(255, 255, 255));
        DOB_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        DOB_labelB.setForeground(new java.awt.Color(51, 51, 51));
        DOB_labelB.setText("Date of Birth");
        panelB.add(DOB_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, -1, 50));

        DOB.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        DOB.setForeground(new java.awt.Color(54, 33, 89));
        DOB.setText("> XXXXXXX");
        panelB.add(DOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, -1, 30));

        NOK_relation_labelB.setBackground(new java.awt.Color(255, 255, 255));
        NOK_relation_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        NOK_relation_labelB.setForeground(new java.awt.Color(51, 51, 51));
        NOK_relation_labelB.setText("NOK Relation");
        panelB.add(NOK_relation_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 550, -1, 50));

        NOK_relationB.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        NOK_relationB.setForeground(new java.awt.Color(54, 33, 89));
        NOK_relationB.setText("> XXXXXXX");
        panelB.add(NOK_relationB, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 590, -1, 30));

        NOK_mobile_labelB.setBackground(new java.awt.Color(255, 255, 255));
        NOK_mobile_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        NOK_mobile_labelB.setForeground(new java.awt.Color(51, 51, 51));
        NOK_mobile_labelB.setText("NOK Mob No.");
        panelB.add(NOK_mobile_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 640, -1, 50));

        NOK_mobileB.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        NOK_mobileB.setForeground(new java.awt.Color(54, 33, 89));
        NOK_mobileB.setText("> XXXXXXX");
        panelB.add(NOK_mobileB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 680, -1, 30));

        address_labelB.setBackground(new java.awt.Color(255, 255, 255));
        address_labelB.setFont(new java.awt.Font("Montserrat", 0, 28)); // NOI18N
        address_labelB.setForeground(new java.awt.Color(51, 51, 51));
        address_labelB.setText("Address");
        panelB.add(address_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 750, -1, 50));

        villC.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        villC.setForeground(new java.awt.Color(54, 33, 89));
        villC.setText("> XXXXXXX");
        panelB.add(villC, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 850, -1, 30));

        PO_labelB.setBackground(new java.awt.Color(255, 255, 255));
        PO_labelB.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        PO_labelB.setForeground(new java.awt.Color(66, 50, 77));
        PO_labelB.setText("PO");
        panelB.add(PO_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 810, -1, 50));

        PO_B.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        PO_B.setForeground(new java.awt.Color(54, 33, 89));
        PO_B.setText("> XXXXXXX");
        panelB.add(PO_B, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 850, -1, 30));

        dist_labelB.setBackground(new java.awt.Color(255, 255, 255));
        dist_labelB.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        dist_labelB.setForeground(new java.awt.Color(66, 50, 77));
        dist_labelB.setText("District");
        panelB.add(dist_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 890, -1, 50));

        distB.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        distB.setForeground(new java.awt.Color(54, 33, 89));
        distB.setText("> XXXXXXX");
        panelB.add(distB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 930, -1, 30));

        state_labelB.setBackground(new java.awt.Color(255, 255, 255));
        state_labelB.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        state_labelB.setForeground(new java.awt.Color(66, 50, 77));
        state_labelB.setText("State");
        panelB.add(state_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 890, -1, 50));

        stateB.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        stateB.setForeground(new java.awt.Color(54, 33, 89));
        stateB.setText("> XXXXXXX");
        panelB.add(stateB, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 930, -1, 30));

        teh_labelB.setBackground(new java.awt.Color(255, 255, 255));
        teh_labelB.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        teh_labelB.setForeground(new java.awt.Color(66, 50, 77));
        teh_labelB.setText("Tehsil");
        panelB.add(teh_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 810, -1, 50));

        tehsil.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        tehsil.setForeground(new java.awt.Color(54, 33, 89));
        tehsil.setText("> XXXXXXX");
        panelB.add(tehsil, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 850, -1, 30));

        PIN_labelB.setBackground(new java.awt.Color(255, 255, 255));
        PIN_labelB.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        PIN_labelB.setForeground(new java.awt.Color(66, 50, 77));
        PIN_labelB.setText("PIN");
        panelB.add(PIN_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 890, -1, 50));

        PIN_B.setFont(new java.awt.Font("Roboto Bk", 0, 24)); // NOI18N
        PIN_B.setForeground(new java.awt.Color(54, 33, 89));
        PIN_B.setText("> XXXXXXX");
        panelB.add(PIN_B, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 930, -1, 30));

        vill_labelB.setBackground(new java.awt.Color(255, 255, 255));
        vill_labelB.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        vill_labelB.setForeground(new java.awt.Color(66, 50, 77));
        vill_labelB.setText("Village");
        panelB.add(vill_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 810, -1, 50));

        midB1.setForeground(new java.awt.Color(204, 204, 255));
        panelB.add(midB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 780, 440, 10));

        ScrollPaneB.setViewportView(panelB);

        bg.add(ScrollPaneB, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 192, 910, 470));

        panelC.setBackground(new java.awt.Color(255, 255, 255));
        panelC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ScrollPaneC.setBackground(new java.awt.Color(255, 255, 255));
        ScrollPaneC.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        TableC.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        TableC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.No.", "Service No.", "Name", "Date of Birth", "Rank", "Company", "Contact number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableC.setFocusable(false);
        TableC.setGridColor(new java.awt.Color(255, 255, 255));
        TableC.setRowHeight(30);
        TableC.setSelectionBackground(new java.awt.Color(54, 33, 89));
        ScrollPaneC.setViewportView(TableC);
        if (TableC.getColumnModel().getColumnCount() > 0) {
            TableC.getColumnModel().getColumn(0).setMinWidth(50);
            TableC.getColumnModel().getColumn(0).setPreferredWidth(50);
            TableC.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        panelC.add(ScrollPaneC, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 790, 420));

        bg.add(panelC, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 190, 890, 480));

        fullscreen_buttonC.setForeground(new java.awt.Color(240, 240, 240));
        fullscreen_buttonC.setMaximumSize(new java.awt.Dimension(200, 200));
        fullscreen_buttonC.setMinimumSize(new java.awt.Dimension(200, 200));
        fullscreen_buttonC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fullscreen_buttonCMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fullscreen_buttonCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fullscreen_buttonCMouseExited(evt);
            }
        });
        fullscreen_buttonC.setLayout(null);

        fullscreen_labelC.setBackground(new java.awt.Color(54, 33, 89));
        fullscreen_labelC.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        fullscreen_labelC.setForeground(new java.awt.Color(54, 33, 89));
        fullscreen_labelC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fullscreen_labelC.setText("FULLSCREEN");
        fullscreen_buttonC.add(fullscreen_labelC);
        fullscreen_labelC.setBounds(30, 0, 120, 50);

        bg.add(fullscreen_buttonC, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, 50));

        refresh_buttonC.setForeground(new java.awt.Color(240, 240, 240));
        refresh_buttonC.setMaximumSize(new java.awt.Dimension(200, 200));
        refresh_buttonC.setMinimumSize(new java.awt.Dimension(200, 200));
        refresh_buttonC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refresh_buttonCMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refresh_buttonCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refresh_buttonCMouseExited(evt);
            }
        });
        refresh_buttonC.setLayout(null);

        refresh_labelC.setBackground(new java.awt.Color(54, 33, 89));
        refresh_labelC.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        refresh_labelC.setForeground(new java.awt.Color(54, 33, 89));
        refresh_labelC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        refresh_labelC.setText("REFRESH");
        refresh_buttonC.add(refresh_labelC);
        refresh_labelC.setBounds(50, 0, 80, 50);

        bg.add(refresh_buttonC, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 180, 50));

        remove_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        remove_buttonB.setMaximumSize(new java.awt.Dimension(95, 25));
        remove_buttonB.setMinimumSize(new java.awt.Dimension(95, 25));
        remove_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                remove_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                remove_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                remove_buttonBMouseExited(evt);
            }
        });
        remove_buttonB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        remove_labelB.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        remove_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        remove_labelB.setText("REMOVE");
        remove_buttonB.add(remove_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 13, 71, 24));

        bg.add(remove_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 180, 50));

        print_buttonB.setForeground(new java.awt.Color(240, 240, 240));
        print_buttonB.setMaximumSize(new java.awt.Dimension(95, 25));
        print_buttonB.setMinimumSize(new java.awt.Dimension(95, 25));
        print_buttonB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                print_buttonBMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                print_buttonBMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                print_buttonBMouseExited(evt);
            }
        });
        print_buttonB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        print_labelB.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        print_labelB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print_labelB.setText("PRINT");
        print_buttonB.add(print_labelB, new org.netbeans.lib.awtextra.AbsoluteConstraints(52, 13, 71, 24));

        bg.add(print_buttonB, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 180, 50));

        print_buttonC.setForeground(new java.awt.Color(240, 240, 240));
        print_buttonC.setMaximumSize(new java.awt.Dimension(200, 200));
        print_buttonC.setMinimumSize(new java.awt.Dimension(200, 200));
        print_buttonC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                print_buttonCMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                print_buttonCMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                print_buttonCMouseExited(evt);
            }
        });
        print_buttonC.setLayout(null);

        print_labelC.setBackground(new java.awt.Color(54, 33, 89));
        print_labelC.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        print_labelC.setForeground(new java.awt.Color(54, 33, 89));
        print_labelC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print_labelC.setText("PRINT");
        print_buttonC.add(print_labelC);
        print_labelC.setBounds(50, 0, 80, 50);

        bg.add(print_buttonC, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 120, 180, 50));

        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        fullscreen_panel.setBackground(new java.awt.Color(255, 255, 255));
        fullscreen_panel.setMaximumSize(new java.awt.Dimension(1280, 720));
        fullscreen_panel.setMinimumSize(new java.awt.Dimension(1280, 720));
        fullscreen_panel.setPreferredSize(new java.awt.Dimension(1280, 720));
        fullscreen_panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fullscreen_ScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        fullscreen_ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        fullscreen_table.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        fullscreen_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.no", "Service No.", "Name", "Date of Birth", "Rank", "Company", "Contact No", "Indi ID", "Indl Aadhar", "indl PAN", "Indl Email", "Courses", "Address", "Date Of Joining", "Medical Category", "Kin Name", "Kin Contact number", "Kin relation", "Kin Aadhar", "Kin PAN", "Kin Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fullscreen_table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fullscreen_table.setFocusable(false);
        fullscreen_table.setGridColor(new java.awt.Color(255, 255, 255));
        fullscreen_table.setRowHeight(30);
        fullscreen_table.setSelectionBackground(new java.awt.Color(54, 33, 89));
        fullscreen_ScrollPane.setViewportView(fullscreen_table);
        if (fullscreen_table.getColumnModel().getColumnCount() > 0) {
            fullscreen_table.getColumnModel().getColumn(0).setMinWidth(50);
            fullscreen_table.getColumnModel().getColumn(0).setPreferredWidth(50);
            fullscreen_table.getColumnModel().getColumn(0).setMaxWidth(50);
            fullscreen_table.getColumnModel().getColumn(1).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(1).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(1).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(2).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(2).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(2).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(3).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(3).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(3).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(4).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(4).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(4).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(5).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(5).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(5).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(6).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(6).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(6).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(7).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(7).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(7).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(8).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(8).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(8).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(9).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(9).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(9).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(10).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(10).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(10).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(11).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(11).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(11).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(12).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(12).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(12).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(13).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(13).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(13).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(14).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(14).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(14).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(15).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(15).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(15).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(16).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(16).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(16).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(17).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(17).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(17).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(18).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(18).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(18).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(19).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(19).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(19).setMaxWidth(150);
            fullscreen_table.getColumnModel().getColumn(20).setMinWidth(150);
            fullscreen_table.getColumnModel().getColumn(20).setPreferredWidth(150);
            fullscreen_table.getColumnModel().getColumn(20).setMaxWidth(150);
        }

        fullscreen_panel.add(fullscreen_ScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 1200, 580));

        exit_fullscreen_button.setForeground(new java.awt.Color(240, 240, 240));
        exit_fullscreen_button.setMaximumSize(new java.awt.Dimension(200, 200));
        exit_fullscreen_button.setMinimumSize(new java.awt.Dimension(200, 200));
        exit_fullscreen_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exit_fullscreen_buttonMouseExited(evt);
            }
        });
        exit_fullscreen_button.setLayout(null);

        exit_fullscreen_label.setBackground(new java.awt.Color(54, 33, 89));
        exit_fullscreen_label.setFont(new java.awt.Font("Roboto Bk", 0, 14)); // NOI18N
        exit_fullscreen_label.setForeground(new java.awt.Color(54, 33, 89));
        exit_fullscreen_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exit_fullscreen_label.setText("GO BACK");
        exit_fullscreen_button.add(exit_fullscreen_label);
        exit_fullscreen_label.setBounds(30, 0, 120, 50);

        fullscreen_panel.add(exit_fullscreen_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 640, 180, 50));

        getContentPane().add(fullscreen_panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //----------------------------------FOR PICKING & MOVING IMAGES -start
    private void move(String str) {
        try {
            path_file paths = new path_file();
            Path temp = Files.copy(Paths.get(str), Paths.get(paths.images + "/" + army_number_textfieldA.getText() + ".jpg"), StandardCopyOption.REPLACE_EXISTING);
            if (temp != null) {
                System.out.println("File renamed and moved successfully");
            } else {
                System.out.println("Failed to move the file");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    private void viewall(String a){
        try{
            ResultSet rs = null;
            int i = 0;
            if(a.equals("null")){
            rs = s.executeQuery("Select * from new_registration;");
            rs.next();
            }
            
            else{
                rs = s.executeQuery("Select * from new_registration where service_no = '"+a+"';");
                if(rs.next() == false){
                    i = 1;
                    JOptionPane.showMessageDialog(null, "Army Number not found.");
                }
            }
            String service_no, name, dob, rank, company, indl_co, indl_id, indl_aadh, indl_pan, indl_email, courses, address, joining, medi, nok, kin_cont, kin_rel, kin_aadh, kin_pan, kin_email;
            model_table.setRowCount(0);
            model_fullscreen.setRowCount(0);
            //int row = 0;
            i = 1;
            
            do{
//                row = row + 30;
//                Table.setPreferredSize(new java.awt.Dimension(300,row));
//                fullscreen_table.setPreferredSize(new java.awt.Dimension(300,row));
                service_no=rs.getString("service_no");                
                name=rs.getString("name");                
                dob=rs.getString("birth_date");
                rank=rs.getString("rank_");
                company=rs.getString("company");
                indl_co=rs.getString("indl_contact_no");
                indl_id=rs.getString("indl_icard_number");
                indl_aadh=rs.getString("indl_aadhar");
                indl_pan=rs.getString("indl_pan");
                indl_email=rs.getString("indl_email");
                courses=rs.getString("courses_done");                
                address=rs.getString("address");                
                joining=rs.getString("joining_date");
                medi=rs.getString("medical_category");
                nok=rs.getString("NOK");
                kin_cont=rs.getString("kin_contact_no");
                kin_rel=rs.getString("kin_relation");
                kin_aadh=rs.getString("kin_aadhar");
                kin_pan=rs.getString("kin_pan");
                kin_email=rs.getString("kin_email");
                model_table.addRow(new Object[]{
                   i,
                   service_no, 
                   name,
                   dob,
                   rank,
                   company,
                   indl_co
                });
                 model_fullscreen.addRow( new Object[]{
                   i,
                   service_no, 
                   name, 
                   dob, 
                   rank, 
                   company, 
                   indl_co, 
                   indl_id, 
                   indl_aadh, 
                   indl_pan, 
                   indl_email, 
                   courses, 
                   address, 
                   joining, 
                   medi, 
                   nok, 
                   kin_cont, 
                   kin_rel, 
                   kin_aadh, 
                   kin_pan,
                   kin_email
                });
            i++;
            } while(rs.next());
        }catch(Exception e){System.out.println(e);}   
    }
    // >>>called in insert/add buttons
    //----------------------------------FOR PICKING & MOVING IMAGES -end

    //----------------------------------FOR PRINTING -start
    class Page1 implements Printable {

        public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {

            // Check If No Printable Content
            if (pageIndex >= 2) {
                return Printable.NO_SUCH_PAGE;
            }
            Graphics2D graphics2D = (Graphics2D) graphics;

            graphics2D.setClip(0, 0, 690, 750); //shapes the printing rectangle in respect to translate
            graphics2D.translate(10, 0); //marks the top of the page

            graphics2D.scale(0.68, 0.7);
            panelB.paint(graphics2D);

            // return if page exists
            return Printable.PAGE_EXISTS;
        }
    }

    private void PrintRecord() {
        PrinterJob printerjob = PrinterJob.getPrinterJob();
        PageFormat pageformat = printerjob.defaultPage();
        Book bk = new Book();

        bk.append(new Page1(), pageformat);

        // Pass the book to the PrinterJob      
        printerjob.setPageable(bk);
        if (printerjob.printDialog()) {
            try {
                printerjob.print();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Could not print");
            }
        }
    }
    // >>>called in respective print buttons
    //----------------------------------FOR PRINTING -end

    //----------------------------------FOR RESIZING IMAGE TO FIT PHOTO LABEL -start
    public void scaleImage(String n) {
        path_file pf = new path_file();
        ImageIcon icon = new ImageIcon( pf.images+"\\"+n+".jpg");
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(photo_labelB.getWidth(), photo_labelB.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        photo_labelB.setIcon(scaledIcon);
    }
    // >>>called in init()
    //----------------------------------FOR RESIZING IMAGE TO FIT PHOTO LABEL -end

    private void exit_iconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_iconMouseClicked
        int confirmed = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit the program?", "Exit Program", JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_exit_iconMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        setState(this.ICONIFIED);// TODO add your handling code here:
    }//GEN-LAST:event_minimizeMouseClicked

    private void go_back_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_go_back_labelMouseClicked
        if (go_back) {
            new Parade_Module().setVisible(true);
            this.setVisible(false);
        }
        go_back = false;
    }//GEN-LAST:event_go_back_labelMouseClicked

    private void menuAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAMouseClicked
        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuB.setBackground(new java.awt.Color(64, 43, 100));
        menuC.setBackground(new java.awt.Color(64, 43, 100));

        fullscreen_panel.setVisible(false);
        ScrollPaneA.setVisible(true);
        ScrollPaneB.setVisible(false);
        panelC.setVisible(false);

        print_buttonC.setVisible(false);
        refresh_buttonC.setVisible(false);
        fullscreen_buttonC.setVisible(false);
        print_buttonB.setVisible(false);
        remove_buttonB.setVisible(false);

    }//GEN-LAST:event_menuAMouseClicked

    private void menuBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuBMouseClicked
        menuB.setBackground(new java.awt.Color(85, 65, 118));
        menuA.setBackground(new java.awt.Color(64, 43, 100));
        menuC.setBackground(new java.awt.Color(64, 43, 100));

        fullscreen_panel.setVisible(false);
        ScrollPaneA.setVisible(false);
        ScrollPaneB.setVisible(true);
        panelC.setVisible(false);

        print_buttonC.setVisible(false);
        refresh_buttonC.setVisible(false);
        fullscreen_buttonC.setVisible(false);
        print_buttonB.setVisible(true);
        remove_buttonB.setVisible(true);

    }//GEN-LAST:event_menuBMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //for a centered frame
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        //for a centered frame

        //to set menuA be selected by default --- start
        fullscreen_panel.setVisible(false);
        ScrollPaneA.setVisible(true);
        ScrollPaneB.setVisible(false);
        panelC.setVisible(false);

        menuA.setBackground(new java.awt.Color(85, 65, 118));
        menuB.setBackground(new java.awt.Color(64, 43, 100));
        //to set menuA be selected by default --- end

        print_buttonC.setVisible(false);
        print_buttonB.setVisible(false);
        refresh_buttonC.setVisible(false);
        fullscreen_buttonC.setVisible(false);
        remove_buttonB.setVisible(false);
        
        viewall("null");
    }//GEN-LAST:event_formWindowOpened

    private void menuCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuCMouseClicked
        menuA.setBackground(new java.awt.Color(64, 43, 100));
        menuB.setBackground(new java.awt.Color(64, 43, 100));
        menuC.setBackground(new java.awt.Color(85, 65, 118));
        
        panelC.setVisible(true);
        fullscreen_panel.setVisible(false);
        ScrollPaneA.setVisible(false);
        ScrollPaneB.setVisible(false);

        print_buttonC.setVisible(true);
        refresh_buttonC.setVisible(true);
        fullscreen_buttonC.setVisible(true);
        print_buttonB.setVisible(false);
        remove_buttonB.setVisible(false);
        
        viewall("null");
    }//GEN-LAST:event_menuCMouseClicked

    private void exit_fullscreen_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonMouseClicked
        fullscreen_panel.setVisible(false);
        bg.setVisible(true);
    }//GEN-LAST:event_exit_fullscreen_buttonMouseClicked

    private void exit_fullscreen_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonMouseEntered
        exit_fullscreen_button.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_exit_fullscreen_buttonMouseEntered

    private void exit_fullscreen_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_fullscreen_buttonMouseExited
        exit_fullscreen_button.setBackground(new java.awt.Color(240, 240, 240));
    }//GEN-LAST:event_exit_fullscreen_buttonMouseExited

    private void army_number_textfieldAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_army_number_textfieldAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_army_number_textfieldAActionPerformed
    private void new_registration() {
        PreparedStatement st = null;
        Database db = new Database();

        try {
            
            Connection con = db.create_connection(true);
            String name = name_textfieldA.getText();
            String service = army_number_textfieldA.getText();
            String company = company_textfieldA.getText();
            String courses = courses_textfieldA.getText();

            String contact = indl_mob_textfieldA.getText();
            String rank1 = (String) rank_comboboxA.getSelectedItem();
            String medical = medical_category_textfieldA.getText();

            //address
            String village = villageA.getText();
            String po = PO_A.getText();
            String district = distA.getText();
            String teh = tehA.getText();
            String state = stateA.getText();
            String pin = PIN_A.getText();
            String address = village + "," + teh + ","  + po + "," + state+ "," +  district +"," + pin;

            //indl records
            String indl_icard = indl_Icard_numberA.getText();
            String indl_aadhar = indl_aadharA.getText();
            String indl_account_no = indl_account_numberA.getText();
            String indl_branch = indl_branchA.getText();
            String indl_pan = indl_PAN_A.getText();
            String indl_mail = indl_mailA.getText();
            String indl_bank = indl_bank_nameA.getText();
            String indl_ifsc = indl_IFSC_A.getText();

            //kin
            String kin_name = kin_NOK_A.getText();
            String kin_mob = kin_mobile_numberA.getText();
            String kin_contact = "+91 " + kin_mob;
            String kin_relation = kin_relation_A.getText();
            String kin_pan = kin_PAN_A.getText();
            String kin_aadhar = kin_aadharA.getText();
            String kin_email = kin_mailA.getText();
            String kin_acc = kin_account_numberA.getText();
            String kin_bank = kin_bank_nameA.getText();
            String kin_branch = kin_branchA.getText();
            String kin_ifsc = kin_IFSC_A.getText();

            //date of joining
            String year = (String) DOJ_year_comboboxA.getSelectedItem();
            String month = (String) DOJ_month_comboboxA.getSelectedItem();
            String date = (String) DOJ_date_comboboxA.getSelectedItem();
            String date_of_joining = date + "-" + month + "-" + year;
            int y = Integer.parseInt(year);
            int m = Integer.parseInt(month);
            int d = Integer.parseInt(date);

            //dob
            String dob_year = (String) birth_year_comboboxA.getSelectedItem();
            String dob_month = (String) birth_month_comboboxA.getSelectedItem();
            String dob_date = (String) birth_date_comboboxA.getSelectedItem();
            int dy = Integer.parseInt(dob_year);
            int dm = Integer.parseInt(dob_month);
            int dd = Integer.parseInt(dob_date);
            String date_of_birth = dob_date + "-" + dob_month + "-" + dob_year;

            String err = " ";
            // System.out.println(date_of_joining + " "+medical);
//        String p = "04-05-2016";
            // System.out.print("\noutside if");
            if (!((dy % 4 == 0 && dm == 2 && (dd > 29)) || ((dm == 2 || dm == 4 || dm == 6 || dm == 9 || dm == 11) && dd == 31) || (dm == 2 && dd > 28 && dy % 4 != 0)) && !((y % 4 == 0 && m == 2 && (d > 29)) || ((m == 2 || m == 4 || m == 6 || m == 9 || m == 11) && d == 31) || (m == 2 && d > 28 && y % 4 != 0)) && (name != null && !name.trim().isEmpty()) && (contact.length() == 10 && contact.matches("[0-9]+") && kin_mob.length() == 10 && kin_mob.matches("[0-9]+")) && (service != null && !service.trim().isEmpty()) && (company != null && !company.trim().isEmpty()) && (courses != null && !courses.trim().isEmpty()) && (rank1 != null && !rank1.trim().isEmpty()) && (medical != null && !medical.trim().isEmpty()) && (date_of_joining != null && !date_of_joining.trim().isEmpty() && year.matches("[0-9]+") && month.matches("[0-9]+") && date.matches("[0-9]+") && dob_year.matches("[0-9]+") && dob_month.matches("[0-9]+") && dob_date.matches("[0-9]+"))) {
                //  System.out.print("inside first if");
                if (!select_file_labelA.getText().trim().equals("Select File") && (kin_email.contains("@")) && (indl_mail.contains("@")) && (village != null && !village.trim().isEmpty()) && (indl_account_no != null && !indl_account_no.trim().isEmpty()) && (po != null && !po.trim().isEmpty()) && (district != null && !district.trim().isEmpty()) && (teh != null && !teh.trim().isEmpty()) && (state != null && !state.trim().isEmpty()) && (indl_icard != null && !indl_icard.trim().isEmpty()) && (pin.length() == 6 && pin.matches("[0-9]+") && indl_aadhar.length() == 12 && indl_aadhar.matches("[0-9]+") && indl_pan.length() == 10 && kin_aadhar.length() == 12 && kin_aadhar.matches("[0-9]+") && kin_pan.length() == 10) && (indl_branch != null && !indl_branch.trim().isEmpty()) && (indl_mail != null && !indl_mail.trim().isEmpty()) && (indl_bank != null && !indl_bank.trim().isEmpty()) && (indl_ifsc != null && !indl_ifsc.trim().isEmpty()) && (kin_acc != null && !kin_acc.trim().isEmpty()) && (kin_branch != null && !kin_branch.trim().isEmpty()) && (kin_bank != null && !kin_bank.trim().isEmpty()) && (kin_ifsc != null && !kin_ifsc.trim().isEmpty()) && (kin_email != null && !kin_email.trim().isEmpty()) && (kin_relation != null && !kin_relation.trim().isEmpty()) && (kin_name != null && !kin_name.trim().isEmpty())) {

                    System.out.print("\ninside second if");
                    String q = "insert into new_registration " + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    System.out.println(date_of_birth);
                    st = con.prepareStatement(q);
                    st.setString(1, service.toUpperCase());
                    st.setString(2, name);
                    st.setString(3, rank1);
                    st.setString(4, company);
                    st.setString(5, courses);
                    st.setString(6, address);
                    st.setString(7, "+91 " + contact);
                    st.setString(8, date_of_birth);
                    st.setString(9, date_of_joining);
                    st.setString(10, medical);
                    st.setString(11, indl_icard);
                    st.setString(12, indl_pan);
                    st.setString(13, indl_aadhar);
                    st.setString(14, indl_mail);
                    st.setString(15, indl_account_no);
                    st.setString(16, indl_bank);
                    st.setString(17, indl_branch);
                    st.setString(18, indl_ifsc);
                    st.setString(19, kin_name);
                    st.setString(20, kin_contact);
                    st.setString(21, kin_relation);
                    st.setString(22, kin_pan);
                    st.setString(23, kin_aadhar);
                    st.setString(24, kin_email);
                    st.setString(25, kin_acc);
                    st.setString(26, kin_bank);
                    st.setString(27, kin_branch);
                    st.setString(28, kin_ifsc);
                    

                    //ResultSet rs=st.executeQuery(); 
                    st.execute();
                    JOptionPane.showMessageDialog(null, "Data inserted successfully!");
                    move(filepath);
                    
                    name_textfieldA.setText("");
                    army_number_textfieldA.setText("");
                    company_textfieldA.setText("");
                    courses_textfieldA.setText("");

                    indl_mob_textfieldA.setText("");
                    rank_comboboxA.setSelectedIndex(0);
                    medical_category_textfieldA.setText("");

                    //address
                    villageA.setText("Vill");
                    villageA.setForeground(Color.decode("#666666"));
                    PO_A.setText("PO");
                    PO_A.setForeground(Color.decode("#666666"));
                    distA.setText("Dist");
                    distA.setForeground(Color.decode("#666666"));
                    tehA.setText("Teh");
                    tehA.setForeground(Color.decode("#666666"));
                    stateA.setText("State");
                    stateA.setForeground(Color.decode("#666666"));
                    PIN_A.setText("PIN");
                    PIN_A.setForeground(Color.decode("#666666"));

                    //indl records
                    indl_Icard_numberA.setText("ICardNumber");
                    indl_PAN_A.setText("PAN");
                    indl_aadharA.setText("Aadhar");
                    indl_mailA.setText("E-Mail");
                    indl_account_numberA.setText("Account Number");
                    indl_bank_nameA.setText("Bank Name");
                    indl_branchA.setText("Branch");
                    indl_IFSC_A.setText("IFSC");

                    indl_Icard_numberA.setForeground(Color.decode("#666666"));
                    indl_aadharA.setForeground(Color.decode("#666666"));
                    indl_account_numberA.setForeground(Color.decode("#666666"));
                    indl_branchA.setForeground(Color.decode("#666666"));
                    indl_PAN_A.setForeground(Color.decode("#666666"));
                    indl_mailA.setForeground(Color.decode("#666666"));
                    indl_bank_nameA.setForeground(Color.decode("#666666"));
                    indl_IFSC_A.setForeground(Color.decode("#666666"));

                    //kin
                    kin_NOK_A.setText("NOK");
                    kin_mobile_numberA.setText("Mob No.");
                    kin_relation_A.setText("Relation");
                    kin_PAN_A.setText("PAN");
                    kin_aadharA.setText("Aadhar");
                    kin_mailA.setText("E-Mail");
                    kin_account_numberA.setText("Account Number");
                    kin_bank_nameA.setText("Bank Name");
                    kin_branchA.setText("Branch");
                    kin_IFSC_A.setText("IFSC");
                    select_file_labelA.setText("Select File");

                    kin_NOK_A.setForeground(Color.decode("#666666"));
                    kin_mobile_numberA.setForeground(Color.decode("#666666"));

                    kin_relation_A.setForeground(Color.decode("#666666"));
                    kin_PAN_A.setForeground(Color.decode("#666666"));
                    kin_aadharA.setForeground(Color.decode("#666666"));
                    kin_mailA.setForeground(Color.decode("#666666"));
                    kin_account_numberA.setForeground(Color.decode("#666666"));
                    kin_bank_nameA.setForeground(Color.decode("#666666"));
                    kin_branchA.setForeground(Color.decode("#666666"));
                    kin_IFSC_A.setForeground(Color.decode("#666666"));

                    //date of joining
                    DOJ_year_comboboxA.setSelectedIndex(0);
                    DOJ_month_comboboxA.setSelectedIndex(0);
                    DOJ_date_comboboxA.setSelectedIndex(0);

                    //dob
                    birth_year_comboboxA.setSelectedIndex(0);
                    birth_month_comboboxA.setSelectedIndex(0);
                    birth_date_comboboxA.setSelectedIndex(0);

                    con.close();
                } else {
                    // System.out.print("ooopppsssss");
//                boolean x = (village!=null && !village.trim().isEmpty());
//                System.out.println("hii"+(village!=null && !village.trim().isEmpty()));

                    String err1 = "";

                    if ((village == null || village.trim().isEmpty())) {
                        err1 = err1 + "\nVillage Field Empty";
                    }
                    if ((indl_account_no == null || indl_account_no.trim().isEmpty())) {
                        err1 = err1 + "\nIndividual Account Number Field Empty";
                    }
                    if ((po == null || po.trim().isEmpty())) {
                        err1 = err1 + "\nPost Office Field Empty";
                    }
                    if ((district == null || district.trim().isEmpty())) {
                        err1 = err1 + "\nDistrict Field Empty";
                    }
                    if ((teh == null || teh.trim().isEmpty())) {
                        err1 = err1 + "\nTeh Field Empty";
                    }
                    if ((state == null || state.trim().isEmpty())) {
                        err1 = err1 + "\nState Field Empty";
                    }
                    if ((indl_icard == null || indl_icard.trim().isEmpty())) {
                        err1 = err1 + "\nIndividual id Field Empty";
                    }
                    if ((indl_branch == null || indl_branch.trim().isEmpty())) {
                        err1 = err1 + "\nIndividual Branch Field Empty";
                    }
                    if ((indl_bank == null || indl_bank.trim().isEmpty())) {
                        err1 = err1 + "\nIndividual Bank Field Empty";
                    }
                    if ((indl_ifsc == null || indl_ifsc.trim().isEmpty())) {
                        err1 = err1 + "\nIndividual IFSC Field Empty";
                    }
                    if ((indl_mail == null || indl_mail.trim().isEmpty()) || !indl_mail.contains("@")) {
                        err1 = err1 + "\nIncorrect Individual E-mail Format";
                    }
                    if ((kin_acc == null || kin_acc.trim().isEmpty())) {
                        err1 = err1 + "\nKin Account No Field Empty";
                    }
                    if ((kin_branch == null || kin_branch.trim().isEmpty())) {
                        err1 = err1 + "\nKin Branch Field Empty";
                    }
                    if ((kin_bank == null || kin_bank.trim().isEmpty())) {
                        err1 = err1 + "\nKin Bank Field Empty";
                    }
                    if ((kin_ifsc == null || kin_ifsc.trim().isEmpty())) {
                        err1 = err1 + "\nKin IFSC Field Empty";
                    }
                    if ((kin_relation == null || kin_relation.trim().isEmpty())) {
                        err1 = err1 + "\nKin Relation Field Empty";
                    }
                    if ((kin_name == null || kin_name.trim().isEmpty())) {
                        err1 = err1 + "\nKin Name Field Empty";
                    }
                    if ((kin_email == null || kin_email.trim().isEmpty()) || !kin_email.contains("@")) {
                        err1 = err1 + "\nIncorrect Kin E-mail Format";
                    }
                    if ((indl_aadhar.length() != 12 || !indl_aadhar.matches("[0-9]+"))) {
                        err1 = err1 + "\nIncorrect Individual Aadhar";
                    }
                    if ((indl_pan.length() != 10)) {
                        err1 = err1 + "\nIncorrect Individual Pan";
                    }
                    if ((kin_aadhar.length() != 12 || !kin_aadhar.matches("[0-9]+"))) {
                        err1 = err1 + "\nIncorrect Kin Aadhar";
                    }
                    if ((kin_pan.length() != 10)) {
                        err1 = err1 + "\nIncorrect Kin Pan";
                    }
                    if ((pin.length() != 6 || !pin.matches("[0-9]+"))) {
                        err1 = err1 + "\nIncorrect Pin";
                    }
                    if(select_file_labelA.getText().trim().equals("Select File")){
                        err1 = err1 + "\nPlease Select Profile Photo";
                    }
                    if (!err1.trim().isEmpty()) {
                        JOptionPane.showMessageDialog(null, err1);
                    }
                    

                } //\n

            } else {

                //  System.out.print("else");
                if (contact.length() != 10 || !contact.matches("[0-9]+")) {
                    err = err + "\nIncorrect Number";
                }
                if (name == null || name.trim().isEmpty()) {
                    err = err + "\nName Field Empty";
                }
                if (kin_mob.length() != 10 || !kin_mob.matches("[0-9]+")) {
                    err = err + "\nIncorrect Kin Mobile";
                }
                if (service == null || service.trim().isEmpty()) {
                    err = err + "\nArmy Number Empty";
                }
                if (company == null || company.trim().isEmpty()) {
                    err = err + "\nCompany Field Empty";
                }
                if (courses == null || courses.trim().isEmpty()) {
                    err = err + "\nCourses Field Empty";
                }
                if (rank1 == null || rank1.trim().isEmpty()) {
                    err = err + "\nRank Field Empty";
                }
                if (medical == null || medical.trim().isEmpty()) {
                    err = err + "\nMedical Field Empty";
                }
                if (!year.matches("[0-9]+") || !month.matches("[0-9]+") || !date.matches("[0-9]+")) {
                    err = err + "\nIncorrect Date of Joining";
                }
                if (!dob_year.matches("[0-9]+") || !dob_month.matches("[0-9]+") || !dob_date.matches("[0-9]+")) {
                    err = err + "\nIncorrect Date of Birth";
                }

                if ((village == null || village.trim().isEmpty())) {
                    err = err + "\nVillage Field Empty";
                }
                if (((y % 4 == 0 && m == 2 && (d > 29)) || ((m == 2 || m == 4 || m == 6 || m == 9 || m == 11) && d == 31) || (m == 2 && d > 28 && y % 4 != 0))) {
                    err = err + "\nDate of Joining not Correct";
                }

                if (((dy % 4 == 0 && dm == 2 && (dd > 29)) || ((dm == 2 || dm == 4 || dm == 6 || dm == 9 || dm == 11) && dd == 31) || (dm == 2 && dd > 28 && dy % 4 != 0))) {
                    err = err + "\nDOB not Correct";
                }
                if ((indl_account_no == null || indl_account_no.trim().isEmpty())) {
                    err = err + "\nIndividual Account Number Field Empty";
                }
                if ((po == null || po.trim().isEmpty())) {
                    err = err + "\nPost Office Field Empty";
                }
                if ((district == null || district.trim().isEmpty())) {
                    err = err + "\nDistrict Field Empty";
                }
                if ((teh == null || teh.trim().isEmpty())) {
                    err = err + "\nTeh Field Empty";
                }
                if ((state == null || state.trim().isEmpty())) {
                    err = err + "\nState Field Empty";
                }
                if ((indl_icard == null || indl_icard.trim().isEmpty())) {
                    err = err + "\nIndividual id Field Empty";
                }
                if ((indl_branch == null || indl_branch.trim().isEmpty())) {
                    err = err + "\nIndividual Branch Field Empty";
                }
                if ((indl_bank == null || indl_bank.trim().isEmpty())) {
                    err = err + "\nIndividual Bank Field Empty";
                }
                if ((indl_ifsc == null || indl_ifsc.trim().isEmpty())) {
                    err = err + "\nIndividual IFSC Field Empty";
                }
                if ((indl_mail == null || indl_mail.trim().isEmpty()) || !indl_mail.contains("@")) {
                    err = err + "\nIncorrect Individual E-mail Format";
                }
                if ((kin_acc == null || kin_acc.trim().isEmpty())) {
                    err = err + "\nKin Account No Field Empty";
                }
                if ((kin_branch == null || kin_branch.trim().isEmpty())) {
                    err = err + "\nKin Branch Field Empty";
                }
                if ((kin_bank == null || kin_bank.trim().isEmpty())) {
                    err = err + "\nKin Bank Field Empty";
                }
                if ((kin_ifsc == null || kin_ifsc.trim().isEmpty())) {
                    err = err + "\nKin IFSC Field Empty";
                }
                if ((kin_relation == null || kin_relation.trim().isEmpty())) {
                    err = err + "\nKin Relation Field Empty";
                }
                if ((kin_name == null || kin_name.trim().isEmpty())) {
                    err = err + "\nKin Name Field Empty";
                }
                if ((kin_email == null || kin_email.trim().isEmpty()) || !kin_email.contains("@")) {
                    err = err + "\nIncorrect Kin E-mail Format";
                }
                if ((indl_aadhar.length() != 12 || !indl_aadhar.matches("[0-9]+"))) {
                    err = err + "\nIncorrect Individual Aadhar";
                }
                if ((indl_pan.length() != 10)) {
                    err = err + "\nIncorrect Individual Pan";
                }
                if ((kin_aadhar.length() != 12 || !kin_aadhar.matches("[0-9]+"))) {
                    err = err + "\nIncorrect Kin Aadhar";
                }
                if ((kin_pan.length() != 10)) {
                    err = err + "\nIncorrect Kin Pan";
                }
                if ((pin.length() != 6 || !pin.matches("[0-9]+"))) {
                    err = err + "\nIncorrect Pin";
                }
                if (!err.trim().isEmpty()) {
                    JOptionPane.showMessageDialog(null, err);
                }
            }

        } catch (Exception e) {
            System.out.println(e);
            String exe = e.getMessage();
            if (exe.contains("Duplicate entry")) {
                JOptionPane.showMessageDialog(null, "Data not inserted!\nEntered ARMY NUMBER exists!");
            } else if (exe.contains("For input")) {
                JOptionPane.showMessageDialog(null, "\nPlease Re-Check Date Formats");
            } else {
                JOptionPane.showMessageDialog(null, "Data not inserted!");
            }
        }
    }
    private void add_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_buttonAMouseClicked

        //to copy selected image to application folder
        

        new_registration();

    }//GEN-LAST:event_add_buttonAMouseClicked

    private void add_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_buttonAMouseEntered
        add_buttonA.setBackground(new java.awt.Color(237, 224, 255));// TODO add your handling code here:
    }//GEN-LAST:event_add_buttonAMouseEntered

    private void add_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_buttonAMouseExited
        add_buttonA.setBackground(new java.awt.Color(240, 240, 240));// TODO add your handling code here:
    }//GEN-LAST:event_add_buttonAMouseExited

    private void DOJ_date_comboboxAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DOJ_date_comboboxAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DOJ_date_comboboxAActionPerformed

    private void select_file_buttonAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_select_file_buttonAMouseClicked
        JFileChooser chooser = new JFileChooser();

        //applying extension filter
        chooser.setFileFilter(new FileNameExtensionFilter("Image Files", "png", "jpg", "jpeg"));

        //opening file chooser window
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();

        //filepath
        String filename;
        filepath = f.getAbsolutePath();
        filename=f.getName();
        //setting the label to filename
        select_file_labelA.setText(filename);

        chooser.setSelectedFile(null);
    }//GEN-LAST:event_select_file_buttonAMouseClicked

    private void select_file_buttonAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_select_file_buttonAMouseEntered
        select_file_buttonA.setBackground(new java.awt.Color(237, 224, 255));// TODO add your handling code here:
    }//GEN-LAST:event_select_file_buttonAMouseEntered

    private void select_file_buttonAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_select_file_buttonAMouseExited
        select_file_buttonA.setBackground(new java.awt.Color(240, 240, 240));// TODO add your handling code here:
    }//GEN-LAST:event_select_file_buttonAMouseExited

    private void PhotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PhotoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_PhotoMouseClicked

    private void PhotoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PhotoMouseEntered
        Photo.setBackground(new java.awt.Color(237, 224, 255));// TODO add your handling code here:
    }//GEN-LAST:event_PhotoMouseEntered

    private void PhotoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PhotoMouseExited
        Photo.setBackground(new java.awt.Color(240, 240, 240));// TODO add your handling code here:
    }//GEN-LAST:event_PhotoMouseExited
    private void remove_registration() {
        String sno = service_number_textfieldB.getText().toUpperCase();
        Database db = new Database();
        if (sno == null || sno.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "No Input Found!");
        } else {
            try {

                Connection con = db.create_connection(true);
                Statement st = con.createStatement();
                String query = "select count(*) as count from new_registration where service_no ='" + sno + "'";
                String delete = "delete from new_registration where service_no='" + sno + "'";

                ResultSet rs = st.executeQuery(query);
                int count = 0;
                int flag = 0;
                if (rs.next()) {
                    count = rs.getInt("count");
                }
                if (count != 0) {
                    flag = 100;
                    st.executeUpdate(delete);
                    JOptionPane.showMessageDialog(null, "Records of " + sno + " deleted successfully!");
                }

                if (flag != 100) {
                    JOptionPane.showMessageDialog(null, "No records of " + sno + " found!");
                }
                con.close();
            } catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, "No records of " + sno + " found!");
            }
        }
    }
    private void remove_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_remove_buttonBMouseClicked
        // TODO add your handling code here:
        remove_registration();
    }//GEN-LAST:event_remove_buttonBMouseClicked

    private void remove_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_remove_buttonBMouseEntered
        remove_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_remove_buttonBMouseEntered

    private void remove_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_remove_buttonBMouseExited
        remove_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_remove_buttonBMouseExited

    private void print_buttonBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseClicked
        title_label.grabFocus();
        PrintRecord();
    }//GEN-LAST:event_print_buttonBMouseClicked

    private void print_buttonBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseEntered
        print_buttonB.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_print_buttonBMouseEntered

    private void print_buttonBMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonBMouseExited
        print_buttonB.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_print_buttonBMouseExited

    private void fullscreen_buttonCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonCMouseClicked
        fullscreen_panel.setVisible(true);
        bg.setVisible(false);
    }//GEN-LAST:event_fullscreen_buttonCMouseClicked

    private void print_buttonCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonCMouseClicked
        title_label.grabFocus();
        try {
            Statement statement = c.createStatement();
            ResultSet resultSet = statement.executeQuery("select * from new_registration");
            XSSFWorkbook workbook = new XSSFWorkbook();
            XSSFSheet spreadsheet = null;
            spreadsheet = workbook.createSheet("new registration");

            XSSFRow row = spreadsheet.createRow(0);
            XSSFCell cell;
            cell = row.createCell(0);
            cell.setCellValue("Service No.");
            cell = row.createCell(1);
            cell.setCellValue("Name");
            cell = row.createCell(2);
            cell.setCellValue("Date of Birth");
            cell = row.createCell(3);
            cell.setCellValue("Rank");
            cell = row.createCell(4);
            cell.setCellValue("Company");
            cell = row.createCell(5);
            cell.setCellValue("indl_Contact_no");
            cell = row.createCell(6);
            cell.setCellValue("indl_id");
            cell = row.createCell(7);
            cell.setCellValue("indl_aadhar");
            cell = row.createCell(8);
            cell.setCellValue("indl_pan");
            cell = row.createCell(9);
            cell.setCellValue("indl_bank_acc");
            cell = row.createCell(10);
            cell.setCellValue("indl_bank_name");
            cell = row.createCell(11);
            cell.setCellValue("indl_ifsc");
            cell = row.createCell(12);
            cell.setCellValue("indl_bank_branch");
            cell = row.createCell(13);
            cell.setCellValue("indl_email");
            cell = row.createCell(14);
            cell.setCellValue("Courses_done");
            cell = row.createCell(15);
            cell.setCellValue("Address");
            cell = row.createCell(16);
            cell.setCellValue("Date_of_Joining");
            cell = row.createCell(17);
            cell.setCellValue("Medical_Category");
            cell = row.createCell(18);
            cell.setCellValue("kin_name");
            cell = row.createCell(19);
            cell.setCellValue("kin_contact");
            cell = row.createCell(20);
            cell.setCellValue("kin_relation");
            cell = row.createCell(21);
            cell.setCellValue("kin_aadhar");
            cell = row.createCell(22);
            cell.setCellValue("kin_pan");
            cell = row.createCell(23);
            cell.setCellValue("kin_bank_acc");
            cell = row.createCell(24);
            cell.setCellValue("kin_bank_name");
            cell = row.createCell(25);
            cell.setCellValue("kin_ifsc");
            cell = row.createCell(26);
            cell.setCellValue("kin_branch_name");
            cell = row.createCell(27);
            cell.setCellValue("kin_email");
            int i = 1;

            while (resultSet.next()) {
                row = spreadsheet.createRow(i);
                cell = row.createCell(0);
                cell.setCellValue(resultSet.getString("Service_no"));
                cell = row.createCell(1);
                cell.setCellValue(resultSet.getString("Name"));
                cell = row.createCell(2);
                cell.setCellValue(resultSet.getString("birth_date"));
                cell = row.createCell(3);
                cell.setCellValue(resultSet.getString("Rank_"));
                cell = row.createCell(4);
                cell.setCellValue(resultSet.getString("Company"));
                cell = row.createCell(5);
                cell.setCellValue(resultSet.getString("indl_Contact_no"));
                cell = row.createCell(6);
                cell.setCellValue(resultSet.getString("indl_icard_number"));
                cell = row.createCell(7);
                cell.setCellValue(resultSet.getString("indl_aadhar"));
                cell = row.createCell(8);
                cell.setCellValue(resultSet.getString("indl_pan"));
                cell = row.createCell(9);
                cell.setCellValue(resultSet.getString("indl_acc_no"));
                cell = row.createCell(10);
                cell.setCellValue(resultSet.getString("indl_bank_name"));
                cell = row.createCell(11);
                cell.setCellValue(resultSet.getString("indl_ifsc"));
                cell = row.createCell(12);
                cell.setCellValue(resultSet.getString("indl_bank_branch"));
                cell = row.createCell(13);
                cell.setCellValue(resultSet.getString("indl_email"));
                cell = row.createCell(14);
                cell.setCellValue(resultSet.getString("Courses_done"));
                cell = row.createCell(15);
                cell.setCellValue(resultSet.getString("Address"));
                cell = row.createCell(16);
                cell.setCellValue(resultSet.getString("joining_date"));
                cell = row.createCell(17);
                cell.setCellValue(resultSet.getString("Medical_Category"));
                cell = row.createCell(18);
                cell.setCellValue(resultSet.getString("NOK"));
                cell = row.createCell(19);
                cell.setCellValue(resultSet.getString("kin_contact_no"));
                cell = row.createCell(20);
                cell.setCellValue(resultSet.getString("kin_relation"));
                cell = row.createCell(21);
                cell.setCellValue(resultSet.getString("kin_aadhar"));
                cell = row.createCell(22);
                cell.setCellValue(resultSet.getString("kin_pan"));
                cell = row.createCell(23);
                cell.setCellValue(resultSet.getString("kin_acc_no"));
                cell = row.createCell(24);
                cell.setCellValue(resultSet.getString("kin_bank_name"));
                cell = row.createCell(25);
                cell.setCellValue(resultSet.getString("kin_ifsc"));
                cell = row.createCell(26);
                cell.setCellValue(resultSet.getString("kin_bank_branch"));
                cell = row.createCell(27);
                cell.setCellValue(resultSet.getString("kin_email"));
                i++;
            }
            path_file pf = new path_file();

            FileOutputStream out = new FileOutputStream(new File(pf.csv+ "\\" +"New_Registration.xlsx"));
            workbook.write(out);
            JOptionPane.showMessageDialog(null,"new_registration.xlsx written successfully");
            Desktop.getDesktop().open(new File(pf.csv + "/New_Registration.xlsx"));
        } catch (Exception ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null,"new_registration.xlsx not created");
            
        } 
    }//GEN-LAST:event_print_buttonCMouseClicked

    private void okayBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_okayBMouseClicked
        // TODO add your handling code here:
        String sno = service_number_textfieldB.getText().toUpperCase();
        Database db = new Database();

        try {

            Connection con = db.create_connection(true);
            Statement st = con.createStatement();
            //Statement st2 = con.createStatement();
            String query = "Select count(*) as count from new_registration where service_no = '" + sno + "'";

            String q1_postin = "select Name,Rank_,Company,Medical_Category,birth_date,joining_date,indl_Contact_no,Courses_done,NOK,kin_relation,kin_contact_no,Address from new_registration where Service_no='" + sno + "'";

            //String q2_postout = "select Name,Rank_,Company,Medical_Category,DOB,Date_of_Joining,Contact_no,Courses_done,kin_name,kin_relation,kin_contact,Date_of_Leaving,Address from post_out where Service_no='"+sno+"'";
            int count = 0;
            ResultSet rs = st.executeQuery(query);
            if (rs.next()) {
                count = rs.getInt("count");
            }

            String Service_no, Name, dol, dob, Rank_, Company, Contact_no, indl_id, indl_aadhar, indl_pan, indl_bank_acc, indl_bank_name, indl_ifsc, indl_branch_name, indl_email, Courses_done, address, doj, Medical_category, Kin_name, Kin_contact, Kin_relation, Kin_aadhar, Kin_pan, Kin_bank_acc, Kin_bank_name, Kin_ifsc, Kin_branch_name, Kin_email;
            String rec = "";
            int flag = 0;
            if (count != 0) {
                rs = st.executeQuery(q1_postin);
//            if(rs.next()){
                //System.out.println("inside postin_if");
                flag = 1;
                while (rs.next()) {
                    //  System.out.println("inside postin");
                    Name = rs.getString("Name");
                    dob = rs.getString("birth_date");
                    Rank_ = rs.getString("Rank_");
                    Company = rs.getString("Company");
                    Contact_no = rs.getString("indl_Contact_no");
                    Courses_done = rs.getString("Courses_done");
                    address = rs.getString("Address");
                    doj = rs.getString("joining_date");
                    Medical_category = rs.getString("Medical_Category");
                    Kin_name = rs.getString("NOK");
                    Kin_contact = rs.getString("kin_contact_no");
                    Kin_relation = rs.getString("kin_relation");
                    String[] ad = address.split(",");
                    System.out.print(Name);
                    name.setText(Name);
                    rank.setText(Rank_);
                    company.setText(Company);
                    DOB.setText(dob);
                    DOJ.setText(doj);
                    indl_mobileB.setText(Contact_no);
                    courses_doneB.setText(Courses_done);
                    NOK_nameB.setText(Kin_name);
                    NOK_relationB.setText(Kin_relation);
                    medical_category.setText(Medical_category);
                    NOK_mobileB.setText(Kin_contact);
                    villC.setText(ad[0]);
                    PO_B.setText(ad[2]);
                    tehsil.setText(ad[1]);
                    distB.setText(ad[4]);
                    stateB.setText(ad[3]);
                    PIN_B.setText(ad[5]);
                    scaleImage(service_number_textfieldB.getText());
                    
                    
                }

            } else if (flag != 1) {
                JOptionPane.showMessageDialog(null, "Data not Found!");
                name.setText(">XXXXXXX");
                rank.setText(">XXXXXXX");
                company.setText(">XXXXXXX");
                DOB.setText(">XXXXXXX");
                DOJ.setText(">XXXXXXX");
                indl_mobileB.setText(">XXXXXXX");
                courses_doneB.setText(">XXXXXXX");
                NOK_nameB.setText(">XXXXXXX");
                NOK_relationB.setText(">XXXXXXX");
                medical_category.setText(">XXXXXXX");
                NOK_mobileB.setText(">XXXXXXX");

                villC.setText(">XXXXXXX");
                PO_B.setText(">XXXXXXX");
                tehsil.setText(">XXXXXXX");
                distB.setText(">XXXXXXX");
                stateB.setText(">XXXXXXX");
                PIN_B.setText(">XXXXXXX");

            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "Data not Found");
        }
    }//GEN-LAST:event_okayBMouseClicked

    private void indl_Icard_numberAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_Icard_numberAFocusGained
        // TODO add your handling code here:
        indl_Icard_numberA.setForeground(Color.decode("#000000"));
        if (indl_Icard_numberA.getText().trim().equals("ICardNumber")) {
            indl_Icard_numberA.setText("");
        }
    }//GEN-LAST:event_indl_Icard_numberAFocusGained

    private void indl_Icard_numberAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_Icard_numberAFocusLost
        // TODO add your handling code here:
        if (indl_Icard_numberA.getText().trim().equals("")) {
            indl_Icard_numberA.setText("ICardNumber");
            indl_Icard_numberA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_indl_Icard_numberAFocusLost

    private void indl_PAN_AFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_PAN_AFocusGained
        indl_PAN_A.setForeground(Color.decode("#000000"));
        if (indl_PAN_A.getText().trim().equals("PAN")) {
            indl_PAN_A.setText("");
        }
    }//GEN-LAST:event_indl_PAN_AFocusGained

    private void indl_PAN_AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_PAN_AFocusLost
        // TODO add your handling code here:
        if (indl_PAN_A.getText().trim().equals("")) {
            indl_PAN_A.setText("PAN");
            indl_PAN_A.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_indl_PAN_AFocusLost

    private void indl_aadharAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_aadharAFocusGained
        // TODO add your handling code here:
        indl_aadharA.setForeground(Color.decode("#000000"));
        if (indl_aadharA.getText().trim().equals("Aadhar")) {
            indl_aadharA.setText("");
        }
    }//GEN-LAST:event_indl_aadharAFocusGained

    private void indl_aadharAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_aadharAFocusLost
        // TODO add your handling code here:
        if (indl_aadharA.getText().trim().equals("")) {
            indl_aadharA.setText("Aadhar");
            indl_aadharA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_indl_aadharAFocusLost

    private void indl_mailAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_mailAFocusGained
        // TODO add your handling code here:
        indl_mailA.setForeground(Color.decode("#000000"));
        if (indl_mailA.getText().trim().equals("E-Mail")) {
            indl_mailA.setText("");
        }
    }//GEN-LAST:event_indl_mailAFocusGained

    private void indl_mailAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_mailAFocusLost
        // TODO add your handling code here:
        if (indl_mailA.getText().trim().equals("")) {
            indl_mailA.setText("E-Mail");
            indl_mailA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_indl_mailAFocusLost

    private void indl_account_numberAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_account_numberAFocusGained
        // TODO add your handling code here:
        indl_account_numberA.setForeground(Color.decode("#000000"));
        if (indl_account_numberA.getText().trim().equals("Account Number")) {
            indl_account_numberA.setText("");
        }
    }//GEN-LAST:event_indl_account_numberAFocusGained

    private void indl_account_numberAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_account_numberAFocusLost
        // TODO add your handling code here:
        if (indl_account_numberA.getText().trim().equals("")) {
            indl_account_numberA.setText("Account Number");
            indl_account_numberA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_indl_account_numberAFocusLost

    private void indl_bank_nameAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_bank_nameAFocusGained
        // TODO add your handling code here:
        indl_bank_nameA.setForeground(Color.decode("#000000"));
        if (indl_bank_nameA.getText().trim().equals("Bank Name")) {
            indl_bank_nameA.setText("");
        }
    }//GEN-LAST:event_indl_bank_nameAFocusGained

    private void indl_bank_nameAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_bank_nameAFocusLost
        // TODO add your handling code here:
        if (indl_bank_nameA.getText().trim().equals("")) {
            indl_bank_nameA.setText("Bank Name");
            indl_bank_nameA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_indl_bank_nameAFocusLost

    private void indl_branchAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_branchAFocusGained
        // TODO add your handling code here:
        indl_branchA.setForeground(Color.decode("#000000"));
        if (indl_branchA.getText().trim().equals("Branch")) {
            indl_branchA.setText("");
        }
    }//GEN-LAST:event_indl_branchAFocusGained

    private void indl_branchAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_branchAFocusLost
        // TODO add your handling code here:
        if (indl_branchA.getText().trim().equals("")) {
            indl_branchA.setText("Branch");
            indl_branchA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_indl_branchAFocusLost

    private void indl_IFSC_AFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_IFSC_AFocusGained
        // TODO add your handling code here:
        indl_IFSC_A.setForeground(Color.decode("#000000"));
        if (indl_IFSC_A.getText().trim().equals("IFSC")) {
            indl_IFSC_A.setText("");
        }
    }//GEN-LAST:event_indl_IFSC_AFocusGained

    private void indl_IFSC_AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_indl_IFSC_AFocusLost
        // TODO add your handling code here:
        if (indl_IFSC_A.getText().trim().equals("")) {
            indl_IFSC_A.setText("IFSC");
            indl_IFSC_A.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_indl_IFSC_AFocusLost

    private void kin_NOK_AFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_NOK_AFocusGained
        // TODO add your handling code here:
        kin_NOK_A.setForeground(Color.decode("#000000"));
        if (kin_NOK_A.getText().trim().equals("NOK")) {
            kin_NOK_A.setText("");
        }
    }//GEN-LAST:event_kin_NOK_AFocusGained

    private void kin_NOK_AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_NOK_AFocusLost
        // TODO add your handling code here:
        if (kin_NOK_A.getText().trim().equals("")) {
            kin_NOK_A.setText("NOK");
            kin_NOK_A.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_kin_NOK_AFocusLost

    private void kin_mobile_numberAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_mobile_numberAFocusGained
        // TODO add your handling code here:
        kin_mobile_numberA.setForeground(Color.decode("#000000"));
        if (kin_mobile_numberA.getText().trim().equals("Mob No.")) {
            kin_mobile_numberA.setText("");
        }
    }//GEN-LAST:event_kin_mobile_numberAFocusGained

    private void kin_mobile_numberAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_mobile_numberAFocusLost
        // TODO add your handling code here:
        if (kin_mobile_numberA.getText().trim().equals("")) {
            kin_mobile_numberA.setText("Mob No.");
            kin_mobile_numberA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_kin_mobile_numberAFocusLost

    private void kin_relation_AFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_relation_AFocusGained
        // TODO add your handling code here:
        kin_relation_A.setForeground(Color.decode("#000000"));
        if (kin_relation_A.getText().trim().equals("Relation")) {
            kin_relation_A.setText("");
        }
    }//GEN-LAST:event_kin_relation_AFocusGained

    private void kin_relation_AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_relation_AFocusLost
        // TODO add your handling code here:
        if (kin_relation_A.getText().trim().equals("")) {
            kin_relation_A.setText("Relation");
            kin_relation_A.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_kin_relation_AFocusLost

    private void kin_PAN_AFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_PAN_AFocusGained
        // TODO add your handling code here:
        kin_PAN_A.setForeground(Color.decode("#000000"));
        if (kin_PAN_A.getText().trim().equals("PAN")) {
            kin_PAN_A.setText("");
        }
    }//GEN-LAST:event_kin_PAN_AFocusGained

    private void kin_PAN_AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_PAN_AFocusLost
        // TODO add your handling code here:
        if (kin_PAN_A.getText().trim().equals("")) {
            kin_PAN_A.setText("PAN");
            kin_PAN_A.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_kin_PAN_AFocusLost

    private void kin_aadharAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_aadharAFocusGained
        // TODO add your handling code here:
        kin_aadharA.setForeground(Color.decode("#000000"));
        if (kin_aadharA.getText().trim().equals("Aadhar")) {
            kin_aadharA.setText("");
        }
    }//GEN-LAST:event_kin_aadharAFocusGained

    private void kin_aadharAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_aadharAFocusLost
        // TODO add your handling code here:
        if (kin_aadharA.getText().trim().equals("")) {
            kin_aadharA.setText("Aadhar");
            kin_aadharA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_kin_aadharAFocusLost

    private void kin_mailAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_mailAFocusGained
        // TODO add your handling code here:
        kin_mailA.setForeground(Color.decode("#000000"));
        if (kin_mailA.getText().trim().equals("E-Mail")) {
            kin_mailA.setText("");
        }
    }//GEN-LAST:event_kin_mailAFocusGained

    private void kin_mailAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_mailAFocusLost
        // TODO add your handling code here:
        if (kin_mailA.getText().trim().equals("")) {
            kin_mailA.setText("E-Mail");
            kin_mailA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_kin_mailAFocusLost

    private void kin_account_numberAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_account_numberAFocusGained
        // TODO add your handling code here:
        kin_account_numberA.setForeground(Color.decode("#000000"));
        if (kin_account_numberA.getText().trim().equals("Account Number")) {
            kin_account_numberA.setText("");
        }
    }//GEN-LAST:event_kin_account_numberAFocusGained

    private void kin_account_numberAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_account_numberAFocusLost
        // TODO add your handling code here:
        if (kin_account_numberA.getText().trim().equals("")) {
            kin_account_numberA.setText("Account Number");
            kin_account_numberA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_kin_account_numberAFocusLost

    private void kin_bank_nameAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_bank_nameAFocusGained
        // TODO add your handling code here:
        kin_bank_nameA.setForeground(Color.decode("#000000"));
        if (kin_bank_nameA.getText().trim().equals("Bank Name")) {
            kin_bank_nameA.setText("");
        }
    }//GEN-LAST:event_kin_bank_nameAFocusGained

    private void kin_bank_nameAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_bank_nameAFocusLost
        // TODO add your handling code here:
        if (kin_bank_nameA.getText().trim().equals("")) {
            kin_bank_nameA.setText("Bank Name");
            kin_bank_nameA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_kin_bank_nameAFocusLost

    private void kin_branchAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_branchAFocusGained
        // TODO add your handling code here:
        kin_branchA.setForeground(Color.decode("#000000"));
        if (kin_branchA.getText().trim().equals("Branch")) {
            kin_branchA.setText("");
        }
    }//GEN-LAST:event_kin_branchAFocusGained

    private void kin_branchAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_branchAFocusLost
        // TODO add your handling code here:
        if (kin_branchA.getText().trim().equals("")) {
            kin_branchA.setText("Branch");
            kin_branchA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_kin_branchAFocusLost

    private void kin_IFSC_AFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_IFSC_AFocusGained
        // TODO add your handling code here:
        kin_IFSC_A.setForeground(Color.decode("#000000"));
        if (kin_IFSC_A.getText().trim().equals("IFSC")) {
            kin_IFSC_A.setText("");
        }
    }//GEN-LAST:event_kin_IFSC_AFocusGained

    private void kin_IFSC_AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kin_IFSC_AFocusLost
        // TODO add your handling code here:
        if (kin_IFSC_A.getText().trim().equals("")) {
            kin_IFSC_A.setText("IFSC");
            kin_IFSC_A.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_kin_IFSC_AFocusLost

    private void villageAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_villageAFocusGained
        // TODO add your handling code here:
        villageA.setForeground(Color.decode("#000000"));
        if (villageA.getText().trim().equals("Vill")) {
            villageA.setText("");
        }
    }//GEN-LAST:event_villageAFocusGained

    private void villageAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_villageAFocusLost
        // TODO add your handling code here:
        if (villageA.getText().trim().equals("")) {
            villageA.setText("Vill");
            villageA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_villageAFocusLost

    private void tehAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tehAFocusGained
        // TODO add your handling code here:
        tehA.setForeground(Color.decode("#000000"));
        if (tehA.getText().trim().equals("Teh")) {
            tehA.setText("");
        }
    }//GEN-LAST:event_tehAFocusGained

    private void tehAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tehAFocusLost
        // TODO add your handling code here:
        if (tehA.getText().trim().equals("")) {
            tehA.setText("Teh");
            tehA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_tehAFocusLost

    private void PO_AFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PO_AFocusGained
        // TODO add your handling code here:
        PO_A.setForeground(Color.decode("#000000"));
        if (PO_A.getText().trim().equals("PO")) {
            PO_A.setText("");
        }
    }//GEN-LAST:event_PO_AFocusGained

    private void PO_AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PO_AFocusLost
        // TODO add your handling code here:
        if (PO_A.getText().trim().equals("")) {
            PO_A.setText("PO");
            PO_A.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_PO_AFocusLost

    private void stateAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stateAFocusGained
        // TODO add your handling code here:
        stateA.setForeground(Color.decode("#000000"));
        if (stateA.getText().trim().equals("State")) {
            stateA.setText("");
        }
    }//GEN-LAST:event_stateAFocusGained

    private void stateAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stateAFocusLost
        // TODO add your handling code here:
        if (stateA.getText().trim().equals("")) {
            stateA.setText("State");
            stateA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_stateAFocusLost

    private void distAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_distAFocusGained
        // TODO add your handling code here:
        distA.setForeground(Color.decode("#000000"));
        if (distA.getText().trim().equals("Dist")) {
            distA.setText("");
        }
    }//GEN-LAST:event_distAFocusGained

    private void distAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_distAFocusLost
        // TODO add your handling code here:
        if (distA.getText().trim().equals("")) {
            distA.setText("Dist");
            distA.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_distAFocusLost

    private void PIN_AFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PIN_AFocusGained
        // TODO add your handling code here:
        PIN_A.setForeground(Color.decode("#000000"));
        if (PIN_A.getText().trim().equals("PIN")) {
            PIN_A.setText("");
        }
    }//GEN-LAST:event_PIN_AFocusGained

    private void PIN_AFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PIN_AFocusLost
        // TODO add your handling code here:
        if (PIN_A.getText().trim().equals("")) {
            PIN_A.setText("PIN");
            PIN_A.setForeground(Color.decode("#666666"));
        }
    }//GEN-LAST:event_PIN_AFocusLost

    private void army_number_textfieldAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_army_number_textfieldAFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_army_number_textfieldAFocusGained

    private void move_panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMouseDragged
        this.setLocation(this.getX() + evt.getX() - mouseX, this.getY() + evt.getY() - mouseY);
    }//GEN-LAST:event_move_panelMouseDragged

    private void move_panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_panelMousePressed
        mouseX = evt.getX();
        mouseY = evt.getY();
    }//GEN-LAST:event_move_panelMousePressed

    private void service_number_textfieldBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_service_number_textfieldBKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            okayBMouseClicked(null);
        }
    }//GEN-LAST:event_service_number_textfieldBKeyPressed

    private void print_buttonCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonCMouseEntered
        print_buttonC.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_print_buttonCMouseEntered

    private void print_buttonCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_print_buttonCMouseExited
        print_buttonC.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_print_buttonCMouseExited

    private void refresh_buttonCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonCMouseEntered
        refresh_buttonC.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_refresh_buttonCMouseEntered

    private void refresh_buttonCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonCMouseExited
        refresh_buttonC.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_refresh_buttonCMouseExited

    private void fullscreen_buttonCMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonCMouseEntered
        fullscreen_buttonC.setBackground(new java.awt.Color(237, 224, 255));
    }//GEN-LAST:event_fullscreen_buttonCMouseEntered

    private void fullscreen_buttonCMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fullscreen_buttonCMouseExited
        fullscreen_buttonC.setBackground(new java.awt.Color(240,240,240));
    }//GEN-LAST:event_fullscreen_buttonCMouseExited

    private void refresh_buttonCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonCMouseClicked
        // TODO add your handling code here:
        viewall("null");
    }//GEN-LAST:event_refresh_buttonCMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(new_registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(new_registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(new_registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(new_registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new new_registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DOB;
    private javax.swing.JLabel DOB_labelB;
    private javax.swing.JLabel DOJ;
    private javax.swing.JComboBox<String> DOJ_date_comboboxA;
    private javax.swing.JLabel DOJ_labelA;
    private javax.swing.JLabel DOJ_labelB;
    private javax.swing.JComboBox<String> DOJ_month_comboboxA;
    private javax.swing.JComboBox<String> DOJ_year_comboboxA;
    private javax.swing.JLabel NOK_detailsA;
    private javax.swing.JLabel NOK_mobileB;
    private javax.swing.JLabel NOK_mobile_labelB;
    private javax.swing.JLabel NOK_nameB;
    private javax.swing.JLabel NOK_name_labelB;
    private javax.swing.JLabel NOK_relationB;
    private javax.swing.JLabel NOK_relation_labelB;
    private javax.swing.JTextField PIN_A;
    private javax.swing.JLabel PIN_B;
    private javax.swing.JLabel PIN_labelB;
    private javax.swing.JSeparator PIN_underlineA;
    private javax.swing.JTextField PO_A;
    private javax.swing.JLabel PO_B;
    private javax.swing.JLabel PO_labelB;
    private javax.swing.JSeparator PO_underlineA;
    private javax.swing.JPanel Photo;
    private javax.swing.JScrollPane ScrollPaneA;
    private javax.swing.JScrollPane ScrollPaneB;
    private javax.swing.JScrollPane ScrollPaneC;
    private javax.swing.JTable TableC;
    private javax.swing.JPanel add_buttonA;
    private javax.swing.JLabel add_labelA;
    private javax.swing.JLabel address_labelA;
    private javax.swing.JLabel address_labelB;
    private javax.swing.JLabel army_number_labelA;
    private javax.swing.JTextField army_number_textfieldA;
    private javax.swing.JSeparator army_number_underlineA;
    private javax.swing.JPanel bg;
    private javax.swing.JComboBox<String> birth_date_comboboxA;
    private javax.swing.JLabel birth_labelA;
    private javax.swing.JComboBox<String> birth_month_comboboxA;
    private javax.swing.JComboBox<String> birth_year_comboboxA;
    private javax.swing.JLabel company;
    private javax.swing.JLabel company_labelA;
    private javax.swing.JLabel company_labelB;
    private javax.swing.JTextField company_textfieldA;
    private javax.swing.JSeparator company_underlineA;
    private javax.swing.JLabel courses_doneB;
    private javax.swing.JLabel courses_done_labelA;
    private javax.swing.JLabel courses_done_labelB;
    private javax.swing.JTextField courses_textfieldA;
    private javax.swing.JSeparator courses_underlineA;
    private javax.swing.JTextField distA;
    private javax.swing.JLabel distB;
    private javax.swing.JLabel dist_labelB;
    private javax.swing.JSeparator dist_underlineA;
    private javax.swing.JPanel exit_fullscreen_button;
    private javax.swing.JLabel exit_fullscreen_label;
    private javax.swing.JLabel exit_icon;
    private javax.swing.JScrollPane fullscreen_ScrollPane;
    private javax.swing.JPanel fullscreen_buttonC;
    private javax.swing.JLabel fullscreen_labelC;
    private javax.swing.JPanel fullscreen_panel;
    private javax.swing.JTable fullscreen_table;
    private javax.swing.JLabel go_back_label;
    private javax.swing.JLabel indl_ID_details_label;
    private javax.swing.JTextField indl_IFSC_A;
    private javax.swing.JTextField indl_Icard_numberA;
    private javax.swing.JTextField indl_PAN_A;
    private javax.swing.JTextField indl_aadharA;
    private javax.swing.JTextField indl_account_numberA;
    private javax.swing.JTextField indl_bank_nameA;
    private javax.swing.JTextField indl_branchA;
    private javax.swing.JTextField indl_mailA;
    private javax.swing.JLabel indl_mob_labelA;
    private javax.swing.JTextField indl_mob_textfieldA;
    private javax.swing.JSeparator indl_mob_underlineA;
    private javax.swing.JLabel indl_mobileB;
    private javax.swing.JLabel indl_mobile_labelB;
    private javax.swing.JSeparator indl_underline0;
    private javax.swing.JSeparator indl_underline1;
    private javax.swing.JSeparator indl_underline2;
    private javax.swing.JSeparator indl_underline3;
    private javax.swing.JSeparator indl_underline4;
    private javax.swing.JSeparator indl_underline5;
    private javax.swing.JSeparator indl_underline6;
    private javax.swing.JSeparator indl_underline7;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField kin_IFSC_A;
    private javax.swing.JTextField kin_NOK_A;
    private javax.swing.JTextField kin_PAN_A;
    private javax.swing.JTextField kin_aadharA;
    private javax.swing.JTextField kin_account_numberA;
    private javax.swing.JTextField kin_bank_nameA;
    private javax.swing.JTextField kin_branchA;
    private javax.swing.JTextField kin_mailA;
    private javax.swing.JTextField kin_mobile_numberA;
    private javax.swing.JTextField kin_relation_A;
    private javax.swing.JSeparator kin_underlineA0;
    private javax.swing.JSeparator kin_underlineA1;
    private javax.swing.JSeparator kin_underlineA2;
    private javax.swing.JSeparator kin_underlineA3;
    private javax.swing.JSeparator kin_underlineA4;
    private javax.swing.JSeparator kin_underlineA5;
    private javax.swing.JSeparator kin_underlineA6;
    private javax.swing.JSeparator kin_underlineA7;
    private javax.swing.JSeparator kin_underlineA8;
    private javax.swing.JSeparator kin_underlineA9;
    private javax.swing.JLabel label_91A;
    private javax.swing.JLabel medical_category;
    private javax.swing.JLabel medical_category_labelA;
    private javax.swing.JLabel medical_category_labelB;
    private javax.swing.JTextField medical_category_textfieldA;
    private javax.swing.JSeparator medical_category_underlineA;
    private javax.swing.JPanel menuA;
    private javax.swing.JLabel menuA_icon;
    private javax.swing.JLabel menuA_label;
    private javax.swing.JPanel menuB;
    private javax.swing.JLabel menuB_icon;
    private javax.swing.JLabel menuB_label;
    private javax.swing.JPanel menuC;
    private javax.swing.JLabel menuC_icon;
    private javax.swing.JLabel menuC_label;
    private javax.swing.JSeparator midA1;
    private javax.swing.JSeparator midA2;
    private javax.swing.JSeparator midA3;
    private javax.swing.JSeparator midB1;
    private javax.swing.JLabel minimize;
    private javax.swing.JPanel move_panel;
    private javax.swing.JLabel name;
    private javax.swing.JLabel name_labelA;
    private javax.swing.JLabel name_labelB;
    private javax.swing.JTextField name_textfieldA;
    private javax.swing.JSeparator name_underlineA;
    private javax.swing.JLabel okayB;
    private javax.swing.JPanel panelA;
    private javax.swing.JSeparator panelA_bottom_line;
    private javax.swing.JPanel panelB;
    private javax.swing.JSeparator panelB_bottom_line;
    private javax.swing.JPanel panelC;
    private javax.swing.JLabel photo_labelB;
    private javax.swing.JPanel print_buttonB;
    private javax.swing.JPanel print_buttonC;
    private javax.swing.JLabel print_labelB;
    private javax.swing.JLabel print_labelC;
    private javax.swing.JLabel rank;
    private javax.swing.JComboBox<String> rank_comboboxA;
    private javax.swing.JLabel rank_labelA;
    private javax.swing.JLabel rank_labelB;
    private javax.swing.JPanel refresh_buttonC;
    private javax.swing.JLabel refresh_labelC;
    private javax.swing.JPanel remove_buttonB;
    private javax.swing.JLabel remove_labelB;
    private javax.swing.JPanel select_file_buttonA;
    private javax.swing.JLabel select_file_labelA;
    private javax.swing.JSeparator separator;
    private javax.swing.JLabel service_number_labelB;
    private javax.swing.JTextField service_number_textfieldB;
    private javax.swing.JSeparator service_number_underlineB;
    private javax.swing.JPanel side_pane;
    private javax.swing.JTextField stateA;
    private javax.swing.JLabel stateB;
    private javax.swing.JLabel state_labelB;
    private javax.swing.JSeparator state_underlineA;
    private javax.swing.JTextField tehA;
    private javax.swing.JLabel teh_labelB;
    private javax.swing.JSeparator teh_underlineA;
    private javax.swing.JLabel tehsil;
    private javax.swing.JLabel title_icon;
    private javax.swing.JLabel title_label;
    private javax.swing.JLabel upload_photo_labelA;
    private javax.swing.JLabel villC;
    private javax.swing.JLabel vill_labelB;
    private javax.swing.JTextField villageA;
    private javax.swing.JSeparator village_underlineA;
    // End of variables declaration//GEN-END:variables
}
